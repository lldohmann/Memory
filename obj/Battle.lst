                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.2 #13350 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module Battle
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _BattleUpdate
                                     12 	.globl _BattleSetup
                                     13 	.globl _InvertColor
                                     14 	.globl _fadeFromBlack
                                     15 	.globl _DrawNumber
                                     16 	.globl _performantdelay
                                     17 	.globl _set_bkg_tiles
                                     18 	.globl _set_bkg_data
                                     19 	.globl _cursor_y
                                     20 	.globl _cursor_x
                                     21 ;--------------------------------------------------------
                                     22 ; special function registers
                                     23 ;--------------------------------------------------------
                                     24 ;--------------------------------------------------------
                                     25 ; ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area _DATA
                           000000    28 G$cursor_x$0_0$0==.
      000000                         29 _cursor_x::
      000000                         30 	.ds 1
                           000001    31 G$cursor_y$0_0$0==.
      000001                         32 _cursor_y::
      000001                         33 	.ds 1
                                     34 ;--------------------------------------------------------
                                     35 ; ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area _INITIALIZED
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area _DABS (ABS)
                                     42 ;--------------------------------------------------------
                                     43 ; global & static initialisations
                                     44 ;--------------------------------------------------------
                                     45 	.area _HOME
                                     46 	.area _GSINIT
                                     47 	.area _GSFINAL
                                     48 	.area _GSINIT
                                     49 ;--------------------------------------------------------
                                     50 ; Home
                                     51 ;--------------------------------------------------------
                                     52 	.area _HOME
                                     53 	.area _HOME
                                     54 ;--------------------------------------------------------
                                     55 ; code
                                     56 ;--------------------------------------------------------
                                     57 	.area _CODE
                           000000    58 	G$BattleSetup$0$0	= .
                                     59 	.globl	G$BattleSetup$0$0
                           000000    60 	C$Battle.c$42$0_0$105	= .
                                     61 	.globl	C$Battle.c$42$0_0$105
                                     62 ;src\Battle.c:42: void BattleSetup()
                                     63 ;	---------------------------------
                                     64 ; Function BattleSetup
                                     65 ; ---------------------------------
      000000                         66 _BattleSetup::
                           000000    67 	C$Battle.c$44$1_0$105	= .
                                     68 	.globl	C$Battle.c$44$1_0$105
                                     69 ;src\Battle.c:44: set_bkg_data(0, 53, FontTiles); // Load font and window tiles
      000000 11r00r00         [12]   70 	ld	de, #_FontTiles
      000003 D5               [16]   71 	push	de
      000004 21 00 35         [12]   72 	ld	hl, #0x3500
      000007 E5               [16]   73 	push	hl
      000008 CDr00r00         [24]   74 	call	_set_bkg_data
      00000B E8 04            [16]   75 	add	sp, #4
                           00000D    76 	C$Battle.c$45$1_0$105	= .
                                     77 	.globl	C$Battle.c$45$1_0$105
                                     78 ;src\Battle.c:45: set_bkg_tiles(0, 0, Battle_MapWidth, Battle_MapHeight, Battle_Map); // draw background window & text
      00000D 11r00r00         [12]   79 	ld	de, #_Battle_Map
      000010 D5               [16]   80 	push	de
      000011 21 14 17         [12]   81 	ld	hl, #0x1714
      000014 E5               [16]   82 	push	hl
      000015 AF               [ 4]   83 	xor	a, a
      000016 0F               [ 4]   84 	rrca
      000017 F5               [16]   85 	push	af
      000018 CDr00r00         [24]   86 	call	_set_bkg_tiles
      00001B E8 06            [16]   87 	add	sp, #6
                           00001D    88 	C$Battle.c$47$1_0$105	= .
                                     89 	.globl	C$Battle.c$47$1_0$105
                                     90 ;src\Battle.c:47: DrawNumber(1, 14, 123456, 6);
      00001D 3E 06            [ 8]   91 	ld	a, #0x06
      00001F F5               [16]   92 	push	af
      000020 33               [ 8]   93 	inc	sp
      000021 11 40 E2         [12]   94 	ld	de, #0xe240
      000024 D5               [16]   95 	push	de
      000025 1E 0E            [ 8]   96 	ld	e, #0x0e
      000027 3E 01            [ 8]   97 	ld	a, #0x01
      000029 CDr00r00         [24]   98 	call	_DrawNumber
                           00002C    99 	C$Battle.c$48$1_0$105	= .
                                    100 	.globl	C$Battle.c$48$1_0$105
                                    101 ;src\Battle.c:48: DrawNumber(8, 14, 110, 3);
      00002C 3E 03            [ 8]  102 	ld	a, #0x03
      00002E F5               [16]  103 	push	af
      00002F 33               [ 8]  104 	inc	sp
      000030 11 6E 00         [12]  105 	ld	de, #0x006e
      000033 D5               [16]  106 	push	de
      000034 1E 0E            [ 8]  107 	ld	e, #0x0e
      000036 3E 08            [ 8]  108 	ld	a, #0x08
      000038 CDr00r00         [24]  109 	call	_DrawNumber
                           00003B   110 	C$Battle.c$49$1_0$105	= .
                                    111 	.globl	C$Battle.c$49$1_0$105
                                    112 ;src\Battle.c:49: DrawNumber(13, 14, 70, 2);
      00003B 3E 02            [ 8]  113 	ld	a, #0x02
      00003D F5               [16]  114 	push	af
      00003E 33               [ 8]  115 	inc	sp
      00003F 11 46 00         [12]  116 	ld	de, #0x0046
      000042 D5               [16]  117 	push	de
      000043 1E 0E            [ 8]  118 	ld	e, #0x0e
      000045 3E 0D            [ 8]  119 	ld	a, #0x0d
      000047 CDr00r00         [24]  120 	call	_DrawNumber
                           00004A   121 	C$Battle.c$50$1_0$105	= .
                                    122 	.globl	C$Battle.c$50$1_0$105
                                    123 ;src\Battle.c:50: DrawNumber(17, 14, 11, 2);
      00004A 3E 02            [ 8]  124 	ld	a, #0x02
      00004C F5               [16]  125 	push	af
      00004D 33               [ 8]  126 	inc	sp
      00004E 11 0B 00         [12]  127 	ld	de, #0x000b
      000051 D5               [16]  128 	push	de
      000052 1E 0E            [ 8]  129 	ld	e, #0x0e
      000054 3E 11            [ 8]  130 	ld	a, #0x11
      000056 CDr00r00         [24]  131 	call	_DrawNumber
                           000059   132 	C$Battle.c$52$1_0$105	= .
                                    133 	.globl	C$Battle.c$52$1_0$105
                                    134 ;src\Battle.c:52: DrawNumber(1, 15, 123456, 6);
      000059 3E 06            [ 8]  135 	ld	a, #0x06
      00005B F5               [16]  136 	push	af
      00005C 33               [ 8]  137 	inc	sp
      00005D 11 40 E2         [12]  138 	ld	de, #0xe240
      000060 D5               [16]  139 	push	de
      000061 1E 0F            [ 8]  140 	ld	e, #0x0f
      000063 3E 01            [ 8]  141 	ld	a, #0x01
      000065 CDr00r00         [24]  142 	call	_DrawNumber
                           000068   143 	C$Battle.c$53$1_0$105	= .
                                    144 	.globl	C$Battle.c$53$1_0$105
                                    145 ;src\Battle.c:53: DrawNumber(9, 15, 80, 2);
      000068 3E 02            [ 8]  146 	ld	a, #0x02
      00006A F5               [16]  147 	push	af
      00006B 33               [ 8]  148 	inc	sp
      00006C 11 50 00         [12]  149 	ld	de, #0x0050
      00006F D5               [16]  150 	push	de
      000070 1E 0F            [ 8]  151 	ld	e, #0x0f
      000072 3E 09            [ 8]  152 	ld	a, #0x09
      000074 CDr00r00         [24]  153 	call	_DrawNumber
                           000077   154 	C$Battle.c$54$1_0$105	= .
                                    155 	.globl	C$Battle.c$54$1_0$105
                                    156 ;src\Battle.c:54: DrawNumber(13, 15, 33, 2);
      000077 3E 02            [ 8]  157 	ld	a, #0x02
      000079 F5               [16]  158 	push	af
      00007A 33               [ 8]  159 	inc	sp
      00007B 11 21 00         [12]  160 	ld	de, #0x0021
      00007E D5               [16]  161 	push	de
      00007F 1E 0F            [ 8]  162 	ld	e, #0x0f
      000081 3E 0D            [ 8]  163 	ld	a, #0x0d
      000083 CDr00r00         [24]  164 	call	_DrawNumber
                           000086   165 	C$Battle.c$55$1_0$105	= .
                                    166 	.globl	C$Battle.c$55$1_0$105
                                    167 ;src\Battle.c:55: DrawNumber(17, 15, 11, 2);
      000086 3E 02            [ 8]  168 	ld	a, #0x02
      000088 F5               [16]  169 	push	af
      000089 33               [ 8]  170 	inc	sp
      00008A 11 0B 00         [12]  171 	ld	de, #0x000b
      00008D D5               [16]  172 	push	de
      00008E 1E 0F            [ 8]  173 	ld	e, #0x0f
      000090 3E 11            [ 8]  174 	ld	a, #0x11
      000092 CDr00r00         [24]  175 	call	_DrawNumber
                           000095   176 	C$Battle.c$58$1_0$105	= .
                                    177 	.globl	C$Battle.c$58$1_0$105
                                    178 ;src\Battle.c:58: cursor_x = 8;
      000095 21r00r00         [12]  179 	ld	hl, #_cursor_x
      000098 36 08            [12]  180 	ld	(hl), #0x08
                           00009A   181 	C$Battle.c$59$1_0$105	= .
                                    182 	.globl	C$Battle.c$59$1_0$105
                                    183 ;src\Battle.c:59: cursor_y = 144;
      00009A 21r01r00         [12]  184 	ld	hl, #_cursor_y
      00009D 36 90            [12]  185 	ld	(hl), #0x90
                           00009F   186 	C$Battle.c$62$1_0$105	= .
                                    187 	.globl	C$Battle.c$62$1_0$105
                                    188 ;src\Battle.c:62: SHOW_BKG; 
      00009F F0r00            [12]  189 	ldh	a, (_LCDC_REG + 0)
      0000A1 F6 01            [ 8]  190 	or	a, #0x01
      0000A3 E0r00            [12]  191 	ldh	(_LCDC_REG + 0), a
                           0000A5   192 	C$Battle.c$63$1_0$105	= .
                                    193 	.globl	C$Battle.c$63$1_0$105
                                    194 ;src\Battle.c:63: fadeFromBlack(5);
      0000A5 3E 05            [ 8]  195 	ld	a, #0x05
      0000A7 CDr00r00         [24]  196 	call	_fadeFromBlack
                           0000AA   197 	C$Battle.c$64$1_0$105	= .
                                    198 	.globl	C$Battle.c$64$1_0$105
                                    199 ;src\Battle.c:64: if (index == 0) // JIM
      0000AA FAr00r00         [16]  200 	ld	a, (#_index)
      0000AD B7               [ 4]  201 	or	a, a
      0000AE 20 21            [12]  202 	jr	NZ, 00155$
                           0000B0   203 	C$Battle.c$66$2_0$106	= .
                                    204 	.globl	C$Battle.c$66$2_0$106
                                    205 ;src\Battle.c:66: set_bkg_data(128, 23, Crow_Tiles); // init with crow monster
      0000B0 11r00r00         [12]  206 	ld	de, #_Crow_Tiles
      0000B3 D5               [16]  207 	push	de
      0000B4 21 80 17         [12]  208 	ld	hl, #0x1780
      0000B7 E5               [16]  209 	push	hl
      0000B8 CDr00r00         [24]  210 	call	_set_bkg_data
      0000BB E8 04            [16]  211 	add	sp, #4
                           0000BD   212 	C$Battle.c$67$2_0$106	= .
                                    213 	.globl	C$Battle.c$67$2_0$106
                                    214 ;src\Battle.c:67: set_bkg_tiles(7, 5, Crow_MapWidth, Crow_MapHeight, Crow_Map); // draw Crow monster
      0000BD 11r00r00         [12]  215 	ld	de, #_Crow_Map
      0000C0 D5               [16]  216 	push	de
      0000C1 21 05 07         [12]  217 	ld	hl, #0x705
      0000C4 E5               [16]  218 	push	hl
      0000C5 21 07 05         [12]  219 	ld	hl, #0x507
      0000C8 E5               [16]  220 	push	hl
      0000C9 CDr00r00         [24]  221 	call	_set_bkg_tiles
      0000CC E8 06            [16]  222 	add	sp, #6
      0000CE C3r9Dr03         [16]  223 	jp	00156$
      0000D1                        224 00155$:
                           0000D1   225 	C$Battle.c$69$1_0$105	= .
                                    226 	.globl	C$Battle.c$69$1_0$105
                                    227 ;src\Battle.c:69: else if (index == 1) // GYPSY
      0000D1 FAr00r00         [16]  228 	ld	a, (#_index)
      0000D4 3D               [ 4]  229 	dec	a
      0000D5 20 21            [12]  230 	jr	NZ, 00152$
                           0000D7   231 	C$Battle.c$71$2_0$107	= .
                                    232 	.globl	C$Battle.c$71$2_0$107
                                    233 ;src\Battle.c:71: set_bkg_data(128, 29, GypsyTiles); 
      0000D7 11r00r00         [12]  234 	ld	de, #_GypsyTiles
      0000DA D5               [16]  235 	push	de
      0000DB 21 80 1D         [12]  236 	ld	hl, #0x1d80
      0000DE E5               [16]  237 	push	hl
      0000DF CDr00r00         [24]  238 	call	_set_bkg_data
      0000E2 E8 04            [16]  239 	add	sp, #4
                           0000E4   240 	C$Battle.c$72$2_0$107	= .
                                    241 	.globl	C$Battle.c$72$2_0$107
                                    242 ;src\Battle.c:72: set_bkg_tiles(7, 5, Gypsy_MapWidth, Gypsy_MapHeight, Gypsy_Map); 
      0000E4 11r00r00         [12]  243 	ld	de, #_Gypsy_Map
      0000E7 D5               [16]  244 	push	de
      0000E8 21 06 07         [12]  245 	ld	hl, #0x706
      0000EB E5               [16]  246 	push	hl
      0000EC 21 07 05         [12]  247 	ld	hl, #0x507
      0000EF E5               [16]  248 	push	hl
      0000F0 CDr00r00         [24]  249 	call	_set_bkg_tiles
      0000F3 E8 06            [16]  250 	add	sp, #6
      0000F5 C3r9Dr03         [16]  251 	jp	00156$
      0000F8                        252 00152$:
                           0000F8   253 	C$Battle.c$74$1_0$105	= .
                                    254 	.globl	C$Battle.c$74$1_0$105
                                    255 ;src\Battle.c:74: else if (index == 2) // WALLY
      0000F8 FAr00r00         [16]  256 	ld	a, (#_index)
      0000FB D6 02            [ 8]  257 	sub	a, #0x02
      0000FD 20 21            [12]  258 	jr	NZ, 00149$
                           0000FF   259 	C$Battle.c$76$2_0$108	= .
                                    260 	.globl	C$Battle.c$76$2_0$108
                                    261 ;src\Battle.c:76: set_bkg_data(128, 27, WallyTiles); 
      0000FF 11r00r00         [12]  262 	ld	de, #_WallyTiles
      000102 D5               [16]  263 	push	de
      000103 21 80 1B         [12]  264 	ld	hl, #0x1b80
      000106 E5               [16]  265 	push	hl
      000107 CDr00r00         [24]  266 	call	_set_bkg_data
      00010A E8 04            [16]  267 	add	sp, #4
                           00010C   268 	C$Battle.c$77$2_0$108	= .
                                    269 	.globl	C$Battle.c$77$2_0$108
                                    270 ;src\Battle.c:77: set_bkg_tiles(7, 5, Gypsy_MapWidth, Gypsy_MapHeight, Gypsy_Map); 
      00010C 11r00r00         [12]  271 	ld	de, #_Gypsy_Map
      00010F D5               [16]  272 	push	de
      000110 21 06 07         [12]  273 	ld	hl, #0x706
      000113 E5               [16]  274 	push	hl
      000114 21 07 05         [12]  275 	ld	hl, #0x507
      000117 E5               [16]  276 	push	hl
      000118 CDr00r00         [24]  277 	call	_set_bkg_tiles
      00011B E8 06            [16]  278 	add	sp, #6
      00011D C3r9Dr03         [16]  279 	jp	00156$
      000120                        280 00149$:
                           000120   281 	C$Battle.c$79$1_0$105	= .
                                    282 	.globl	C$Battle.c$79$1_0$105
                                    283 ;src\Battle.c:79: else if (index == 3) // TICK
      000120 FAr00r00         [16]  284 	ld	a, (#_index)
      000123 D6 03            [ 8]  285 	sub	a, #0x03
      000125 20 21            [12]  286 	jr	NZ, 00146$
                           000127   287 	C$Battle.c$81$2_0$109	= .
                                    288 	.globl	C$Battle.c$81$2_0$109
                                    289 ;src\Battle.c:81: set_bkg_data(128, 20, Tick_Tiles); 
      000127 11r00r00         [12]  290 	ld	de, #_Tick_Tiles
      00012A D5               [16]  291 	push	de
      00012B 21 80 14         [12]  292 	ld	hl, #0x1480
      00012E E5               [16]  293 	push	hl
      00012F CDr00r00         [24]  294 	call	_set_bkg_data
      000132 E8 04            [16]  295 	add	sp, #4
                           000134   296 	C$Battle.c$82$2_0$109	= .
                                    297 	.globl	C$Battle.c$82$2_0$109
                                    298 ;src\Battle.c:82: set_bkg_tiles(7, 5, Tick_MapWidth, Tick_MapHeight, Tick_Map); 
      000134 11r00r00         [12]  299 	ld	de, #_Tick_Map
      000137 D5               [16]  300 	push	de
      000138 21 05 05         [12]  301 	ld	hl, #0x505
      00013B E5               [16]  302 	push	hl
      00013C 21 07 05         [12]  303 	ld	hl, #0x507
      00013F E5               [16]  304 	push	hl
      000140 CDr00r00         [24]  305 	call	_set_bkg_tiles
      000143 E8 06            [16]  306 	add	sp, #6
      000145 C3r9Dr03         [16]  307 	jp	00156$
      000148                        308 00146$:
                           000148   309 	C$Battle.c$84$1_0$105	= .
                                    310 	.globl	C$Battle.c$84$1_0$105
                                    311 ;src\Battle.c:84: else if (index == 4) // OFFICER
      000148 FAr00r00         [16]  312 	ld	a, (#_index)
      00014B D6 04            [ 8]  313 	sub	a, #0x04
      00014D 20 21            [12]  314 	jr	NZ, 00143$
                           00014F   315 	C$Battle.c$86$2_0$110	= .
                                    316 	.globl	C$Battle.c$86$2_0$110
                                    317 ;src\Battle.c:86: set_bkg_data(128, 39, Cop_Tiles); 
      00014F 11r00r00         [12]  318 	ld	de, #_Cop_Tiles
      000152 D5               [16]  319 	push	de
      000153 21 80 27         [12]  320 	ld	hl, #0x2780
      000156 E5               [16]  321 	push	hl
      000157 CDr00r00         [24]  322 	call	_set_bkg_data
      00015A E8 04            [16]  323 	add	sp, #4
                           00015C   324 	C$Battle.c$87$2_0$110	= .
                                    325 	.globl	C$Battle.c$87$2_0$110
                                    326 ;src\Battle.c:87: set_bkg_tiles(7, 5, Officer_MapWidth, Officer_MapHeight, Officer_Map); 
      00015C 11r00r00         [12]  327 	ld	de, #_Officer_Map
      00015F D5               [16]  328 	push	de
      000160 21 06 07         [12]  329 	ld	hl, #0x706
      000163 E5               [16]  330 	push	hl
      000164 21 07 05         [12]  331 	ld	hl, #0x507
      000167 E5               [16]  332 	push	hl
      000168 CDr00r00         [24]  333 	call	_set_bkg_tiles
      00016B E8 06            [16]  334 	add	sp, #6
      00016D C3r9Dr03         [16]  335 	jp	00156$
      000170                        336 00143$:
                           000170   337 	C$Battle.c$89$1_0$105	= .
                                    338 	.globl	C$Battle.c$89$1_0$105
                                    339 ;src\Battle.c:89: else if (index == 5) // POLICE
      000170 FAr00r00         [16]  340 	ld	a, (#_index)
      000173 D6 05            [ 8]  341 	sub	a, #0x05
      000175 20 21            [12]  342 	jr	NZ, 00140$
                           000177   343 	C$Battle.c$91$2_0$111	= .
                                    344 	.globl	C$Battle.c$91$2_0$111
                                    345 ;src\Battle.c:91: set_bkg_data(128, 39, Cop_Tiles); 
      000177 11r00r00         [12]  346 	ld	de, #_Cop_Tiles
      00017A D5               [16]  347 	push	de
      00017B 21 80 27         [12]  348 	ld	hl, #0x2780
      00017E E5               [16]  349 	push	hl
      00017F CDr00r00         [24]  350 	call	_set_bkg_data
      000182 E8 04            [16]  351 	add	sp, #4
                           000184   352 	C$Battle.c$92$2_0$111	= .
                                    353 	.globl	C$Battle.c$92$2_0$111
                                    354 ;src\Battle.c:92: set_bkg_tiles(7, 5, Police_MapWidth, Police_MapHeight, Police_Map); 
      000184 11r00r00         [12]  355 	ld	de, #_Police_Map
      000187 D5               [16]  356 	push	de
      000188 21 06 07         [12]  357 	ld	hl, #0x706
      00018B E5               [16]  358 	push	hl
      00018C 21 07 05         [12]  359 	ld	hl, #0x507
      00018F E5               [16]  360 	push	hl
      000190 CDr00r00         [24]  361 	call	_set_bkg_tiles
      000193 E8 06            [16]  362 	add	sp, #6
      000195 C3r9Dr03         [16]  363 	jp	00156$
      000198                        364 00140$:
                           000198   365 	C$Battle.c$94$1_0$105	= .
                                    366 	.globl	C$Battle.c$94$1_0$105
                                    367 ;src\Battle.c:94: else if (index == 6) // SHERIFF
      000198 FAr00r00         [16]  368 	ld	a, (#_index)
      00019B D6 06            [ 8]  369 	sub	a, #0x06
      00019D 20 21            [12]  370 	jr	NZ, 00137$
                           00019F   371 	C$Battle.c$96$2_0$112	= .
                                    372 	.globl	C$Battle.c$96$2_0$112
                                    373 ;src\Battle.c:96: set_bkg_data(128, 39, Cop_Tiles); 
      00019F 11r00r00         [12]  374 	ld	de, #_Cop_Tiles
      0001A2 D5               [16]  375 	push	de
      0001A3 21 80 27         [12]  376 	ld	hl, #0x2780
      0001A6 E5               [16]  377 	push	hl
      0001A7 CDr00r00         [24]  378 	call	_set_bkg_data
      0001AA E8 04            [16]  379 	add	sp, #4
                           0001AC   380 	C$Battle.c$97$2_0$112	= .
                                    381 	.globl	C$Battle.c$97$2_0$112
                                    382 ;src\Battle.c:97: set_bkg_tiles(7, 5, Sheriff_MapWidth, Sheriff_MapHeight, Sheriff_Map); 
      0001AC 11r00r00         [12]  383 	ld	de, #_Sheriff_Map
      0001AF D5               [16]  384 	push	de
      0001B0 21 06 07         [12]  385 	ld	hl, #0x706
      0001B3 E5               [16]  386 	push	hl
      0001B4 21 07 05         [12]  387 	ld	hl, #0x507
      0001B7 E5               [16]  388 	push	hl
      0001B8 CDr00r00         [24]  389 	call	_set_bkg_tiles
      0001BB E8 06            [16]  390 	add	sp, #6
      0001BD C3r9Dr03         [16]  391 	jp	00156$
      0001C0                        392 00137$:
                           0001C0   393 	C$Battle.c$99$1_0$105	= .
                                    394 	.globl	C$Battle.c$99$1_0$105
                                    395 ;src\Battle.c:99: else if (index == 7) // CHIEF
      0001C0 FAr00r00         [16]  396 	ld	a, (#_index)
      0001C3 D6 07            [ 8]  397 	sub	a, #0x07
      0001C5 20 21            [12]  398 	jr	NZ, 00134$
                           0001C7   399 	C$Battle.c$101$2_0$113	= .
                                    400 	.globl	C$Battle.c$101$2_0$113
                                    401 ;src\Battle.c:101: set_bkg_data(128, 39, Cop_Tiles); 
      0001C7 11r00r00         [12]  402 	ld	de, #_Cop_Tiles
      0001CA D5               [16]  403 	push	de
      0001CB 21 80 27         [12]  404 	ld	hl, #0x2780
      0001CE E5               [16]  405 	push	hl
      0001CF CDr00r00         [24]  406 	call	_set_bkg_data
      0001D2 E8 04            [16]  407 	add	sp, #4
                           0001D4   408 	C$Battle.c$102$2_0$113	= .
                                    409 	.globl	C$Battle.c$102$2_0$113
                                    410 ;src\Battle.c:102: set_bkg_tiles(7, 5, Chief_MapWidth, Chief_MapHeight, Chief_Map); 
      0001D4 11r00r00         [12]  411 	ld	de, #_Chief_Map
      0001D7 D5               [16]  412 	push	de
      0001D8 21 06 07         [12]  413 	ld	hl, #0x706
      0001DB E5               [16]  414 	push	hl
      0001DC 21 07 05         [12]  415 	ld	hl, #0x507
      0001DF E5               [16]  416 	push	hl
      0001E0 CDr00r00         [24]  417 	call	_set_bkg_tiles
      0001E3 E8 06            [16]  418 	add	sp, #6
      0001E5 C3r9Dr03         [16]  419 	jp	00156$
      0001E8                        420 00134$:
                           0001E8   421 	C$Battle.c$104$1_0$105	= .
                                    422 	.globl	C$Battle.c$104$1_0$105
                                    423 ;src\Battle.c:104: else if (index == 8)
      0001E8 FAr00r00         [16]  424 	ld	a, (#_index)
      0001EB D6 08            [ 8]  425 	sub	a, #0x08
      0001ED 20 24            [12]  426 	jr	NZ, 00131$
                           0001EF   427 	C$Battle.c$106$2_0$114	= .
                                    428 	.globl	C$Battle.c$106$2_0$114
                                    429 ;src\Battle.c:106: InvertColor();
      0001EF CDr00r00         [24]  430 	call	_InvertColor
                           0001F2   431 	C$Battle.c$107$2_0$114	= .
                                    432 	.globl	C$Battle.c$107$2_0$114
                                    433 ;src\Battle.c:107: set_bkg_data(128, 30, Man_Tiles); 
      0001F2 11r00r00         [12]  434 	ld	de, #_Man_Tiles
      0001F5 D5               [16]  435 	push	de
      0001F6 21 80 1E         [12]  436 	ld	hl, #0x1e80
      0001F9 E5               [16]  437 	push	hl
      0001FA CDr00r00         [24]  438 	call	_set_bkg_data
      0001FD E8 04            [16]  439 	add	sp, #4
                           0001FF   440 	C$Battle.c$108$2_0$114	= .
                                    441 	.globl	C$Battle.c$108$2_0$114
                                    442 ;src\Battle.c:108: set_bkg_tiles(7, 5, Man_MapWidth, Man_MapHeight, Man_Map); 
      0001FF 11r00r00         [12]  443 	ld	de, #_Man_Map
      000202 D5               [16]  444 	push	de
      000203 21 06 06         [12]  445 	ld	hl, #0x606
      000206 E5               [16]  446 	push	hl
      000207 21 07 05         [12]  447 	ld	hl, #0x507
      00020A E5               [16]  448 	push	hl
      00020B CDr00r00         [24]  449 	call	_set_bkg_tiles
      00020E E8 06            [16]  450 	add	sp, #6
      000210 C3r9Dr03         [16]  451 	jp	00156$
      000213                        452 00131$:
                           000213   453 	C$Battle.c$110$1_0$105	= .
                                    454 	.globl	C$Battle.c$110$1_0$105
                                    455 ;src\Battle.c:110: else if (index == 9)
      000213 FAr00r00         [16]  456 	ld	a, (#_index)
      000216 D6 09            [ 8]  457 	sub	a, #0x09
      000218 20 21            [12]  458 	jr	NZ, 00128$
                           00021A   459 	C$Battle.c$112$2_0$115	= .
                                    460 	.globl	C$Battle.c$112$2_0$115
                                    461 ;src\Battle.c:112: set_bkg_data(128, 26, Car_Tiles); 
      00021A 11r00r00         [12]  462 	ld	de, #_Car_Tiles
      00021D D5               [16]  463 	push	de
      00021E 21 80 1A         [12]  464 	ld	hl, #0x1a80
      000221 E5               [16]  465 	push	hl
      000222 CDr00r00         [24]  466 	call	_set_bkg_data
      000225 E8 04            [16]  467 	add	sp, #4
                           000227   468 	C$Battle.c$113$2_0$115	= .
                                    469 	.globl	C$Battle.c$113$2_0$115
                                    470 ;src\Battle.c:113: set_bkg_tiles(7, 5, Car_MapWidth, Car_MapHeight, Car_Map); 
      000227 11r00r00         [12]  471 	ld	de, #_Car_Map
      00022A D5               [16]  472 	push	de
      00022B 21 06 05         [12]  473 	ld	hl, #0x506
      00022E E5               [16]  474 	push	hl
      00022F 21 07 05         [12]  475 	ld	hl, #0x507
      000232 E5               [16]  476 	push	hl
      000233 CDr00r00         [24]  477 	call	_set_bkg_tiles
      000236 E8 06            [16]  478 	add	sp, #6
      000238 C3r9Dr03         [16]  479 	jp	00156$
      00023B                        480 00128$:
                           00023B   481 	C$Battle.c$115$1_0$105	= .
                                    482 	.globl	C$Battle.c$115$1_0$105
                                    483 ;src\Battle.c:115: else if (index == 10)
      00023B FAr00r00         [16]  484 	ld	a, (#_index)
      00023E D6 0A            [ 8]  485 	sub	a, #0x0a
      000240 20 21            [12]  486 	jr	NZ, 00125$
                           000242   487 	C$Battle.c$117$2_0$116	= .
                                    488 	.globl	C$Battle.c$117$2_0$116
                                    489 ;src\Battle.c:117: set_bkg_data(128, 46, Semi_Tiles); 
      000242 11r00r00         [12]  490 	ld	de, #_Semi_Tiles
      000245 D5               [16]  491 	push	de
      000246 21 80 2E         [12]  492 	ld	hl, #0x2e80
      000249 E5               [16]  493 	push	hl
      00024A CDr00r00         [24]  494 	call	_set_bkg_data
      00024D E8 04            [16]  495 	add	sp, #4
                           00024F   496 	C$Battle.c$118$2_0$116	= .
                                    497 	.globl	C$Battle.c$118$2_0$116
                                    498 ;src\Battle.c:118: set_bkg_tiles(7, 5, Semi_MapWidth, Semi_MapHeight, Semi_Map); 
      00024F 11r00r00         [12]  499 	ld	de, #_Semi_Map
      000252 D5               [16]  500 	push	de
      000253 21 06 08         [12]  501 	ld	hl, #0x806
      000256 E5               [16]  502 	push	hl
      000257 21 07 05         [12]  503 	ld	hl, #0x507
      00025A E5               [16]  504 	push	hl
      00025B CDr00r00         [24]  505 	call	_set_bkg_tiles
      00025E E8 06            [16]  506 	add	sp, #6
      000260 C3r9Dr03         [16]  507 	jp	00156$
      000263                        508 00125$:
                           000263   509 	C$Battle.c$120$1_0$105	= .
                                    510 	.globl	C$Battle.c$120$1_0$105
                                    511 ;src\Battle.c:120: else if (index == 11)
      000263 FAr00r00         [16]  512 	ld	a, (#_index)
      000266 D6 0B            [ 8]  513 	sub	a, #0x0b
      000268 20 21            [12]  514 	jr	NZ, 00122$
                           00026A   515 	C$Battle.c$122$2_0$117	= .
                                    516 	.globl	C$Battle.c$122$2_0$117
                                    517 ;src\Battle.c:122: set_bkg_data(128, 31, Sis_Tiles); 
      00026A 11r00r00         [12]  518 	ld	de, #_Sis_Tiles
      00026D D5               [16]  519 	push	de
      00026E 21 80 1F         [12]  520 	ld	hl, #0x1f80
      000271 E5               [16]  521 	push	hl
      000272 CDr00r00         [24]  522 	call	_set_bkg_data
      000275 E8 04            [16]  523 	add	sp, #4
                           000277   524 	C$Battle.c$123$2_0$117	= .
                                    525 	.globl	C$Battle.c$123$2_0$117
                                    526 ;src\Battle.c:123: set_bkg_tiles(7, 5, BigSis_MapWidth, BigSis_MapHeight, BigSis_Map); 
      000277 11r00r00         [12]  527 	ld	de, #_BigSis_Map
      00027A D5               [16]  528 	push	de
      00027B 21 05 07         [12]  529 	ld	hl, #0x705
      00027E E5               [16]  530 	push	hl
      00027F 21 07 05         [12]  531 	ld	hl, #0x507
      000282 E5               [16]  532 	push	hl
      000283 CDr00r00         [24]  533 	call	_set_bkg_tiles
      000286 E8 06            [16]  534 	add	sp, #6
      000288 C3r9Dr03         [16]  535 	jp	00156$
      00028B                        536 00122$:
                           00028B   537 	C$Battle.c$125$1_0$105	= .
                                    538 	.globl	C$Battle.c$125$1_0$105
                                    539 ;src\Battle.c:125: else if (index == 12)
      00028B FAr00r00         [16]  540 	ld	a, (#_index)
      00028E D6 0C            [ 8]  541 	sub	a, #0x0c
      000290 20 21            [12]  542 	jr	NZ, 00119$
                           000292   543 	C$Battle.c$127$2_0$118	= .
                                    544 	.globl	C$Battle.c$127$2_0$118
                                    545 ;src\Battle.c:127: set_bkg_data(128, 31, Sis_Tiles); 
      000292 11r00r00         [12]  546 	ld	de, #_Sis_Tiles
      000295 D5               [16]  547 	push	de
      000296 21 80 1F         [12]  548 	ld	hl, #0x1f80
      000299 E5               [16]  549 	push	hl
      00029A CDr00r00         [24]  550 	call	_set_bkg_data
      00029D E8 04            [16]  551 	add	sp, #4
                           00029F   552 	C$Battle.c$128$2_0$118	= .
                                    553 	.globl	C$Battle.c$128$2_0$118
                                    554 ;src\Battle.c:128: set_bkg_tiles(7, 5, MadSis_MapWidth, MadSis_MapHeight, MadSis_Map); 
      00029F 11r00r00         [12]  555 	ld	de, #_MadSis_Map
      0002A2 D5               [16]  556 	push	de
      0002A3 21 05 07         [12]  557 	ld	hl, #0x705
      0002A6 E5               [16]  558 	push	hl
      0002A7 21 07 05         [12]  559 	ld	hl, #0x507
      0002AA E5               [16]  560 	push	hl
      0002AB CDr00r00         [24]  561 	call	_set_bkg_tiles
      0002AE E8 06            [16]  562 	add	sp, #6
      0002B0 C3r9Dr03         [16]  563 	jp	00156$
      0002B3                        564 00119$:
                           0002B3   565 	C$Battle.c$130$1_0$105	= .
                                    566 	.globl	C$Battle.c$130$1_0$105
                                    567 ;src\Battle.c:130: else if (index == 13)
      0002B3 FAr00r00         [16]  568 	ld	a, (#_index)
      0002B6 D6 0D            [ 8]  569 	sub	a, #0x0d
      0002B8 20 21            [12]  570 	jr	NZ, 00116$
                           0002BA   571 	C$Battle.c$132$2_0$119	= .
                                    572 	.globl	C$Battle.c$132$2_0$119
                                    573 ;src\Battle.c:132: set_bkg_data(128, 29, Experiment_Tiles);
      0002BA 11r00r00         [12]  574 	ld	de, #_Experiment_Tiles
      0002BD D5               [16]  575 	push	de
      0002BE 21 80 1D         [12]  576 	ld	hl, #0x1d80
      0002C1 E5               [16]  577 	push	hl
      0002C2 CDr00r00         [24]  578 	call	_set_bkg_data
      0002C5 E8 04            [16]  579 	add	sp, #4
                           0002C7   580 	C$Battle.c$133$2_0$119	= .
                                    581 	.globl	C$Battle.c$133$2_0$119
                                    582 ;src\Battle.c:133: set_bkg_tiles(7, 5, Experiment_MapWidth, Experiment_MapHeight, Experiment_Map );
      0002C7 11r00r00         [12]  583 	ld	de, #_Experiment_Map
      0002CA D5               [16]  584 	push	de
      0002CB 21 05 07         [12]  585 	ld	hl, #0x705
      0002CE E5               [16]  586 	push	hl
      0002CF 21 07 05         [12]  587 	ld	hl, #0x507
      0002D2 E5               [16]  588 	push	hl
      0002D3 CDr00r00         [24]  589 	call	_set_bkg_tiles
      0002D6 E8 06            [16]  590 	add	sp, #6
      0002D8 C3r9Dr03         [16]  591 	jp	00156$
      0002DB                        592 00116$:
                           0002DB   593 	C$Battle.c$135$1_0$105	= .
                                    594 	.globl	C$Battle.c$135$1_0$105
                                    595 ;src\Battle.c:135: else if (index == 14)
      0002DB FAr00r00         [16]  596 	ld	a, (#_index)
      0002DE D6 0E            [ 8]  597 	sub	a, #0x0e
      0002E0 20 21            [12]  598 	jr	NZ, 00113$
                           0002E2   599 	C$Battle.c$137$2_0$120	= .
                                    600 	.globl	C$Battle.c$137$2_0$120
                                    601 ;src\Battle.c:137: set_bkg_data(128, 19, Ghost_Tiles);
      0002E2 11r00r00         [12]  602 	ld	de, #_Ghost_Tiles
      0002E5 D5               [16]  603 	push	de
      0002E6 21 80 13         [12]  604 	ld	hl, #0x1380
      0002E9 E5               [16]  605 	push	hl
      0002EA CDr00r00         [24]  606 	call	_set_bkg_data
      0002ED E8 04            [16]  607 	add	sp, #4
                           0002EF   608 	C$Battle.c$138$2_0$120	= .
                                    609 	.globl	C$Battle.c$138$2_0$120
                                    610 ;src\Battle.c:138: set_bkg_tiles(7, 5, Ghost_MapWidth, Ghost_MapHeight, Ghost_Map);
      0002EF 11r00r00         [12]  611 	ld	de, #_Ghost_Map
      0002F2 D5               [16]  612 	push	de
      0002F3 21 04 05         [12]  613 	ld	hl, #0x504
      0002F6 E5               [16]  614 	push	hl
      0002F7 21 07 05         [12]  615 	ld	hl, #0x507
      0002FA E5               [16]  616 	push	hl
      0002FB CDr00r00         [24]  617 	call	_set_bkg_tiles
      0002FE E8 06            [16]  618 	add	sp, #6
      000300 C3r9Dr03         [16]  619 	jp	00156$
      000303                        620 00113$:
                           000303   621 	C$Battle.c$140$1_0$105	= .
                                    622 	.globl	C$Battle.c$140$1_0$105
                                    623 ;src\Battle.c:140: else if (index == 15)
      000303 FAr00r00         [16]  624 	ld	a, (#_index)
      000306 D6 0F            [ 8]  625 	sub	a, #0x0f
      000308 20 20            [12]  626 	jr	NZ, 00110$
                           00030A   627 	C$Battle.c$142$2_0$121	= .
                                    628 	.globl	C$Battle.c$142$2_0$121
                                    629 ;src\Battle.c:142: set_bkg_data(128, 14, Saucer_Tiles);
      00030A 11r00r00         [12]  630 	ld	de, #_Saucer_Tiles
      00030D D5               [16]  631 	push	de
      00030E 21 80 0E         [12]  632 	ld	hl, #0xe80
      000311 E5               [16]  633 	push	hl
      000312 CDr00r00         [24]  634 	call	_set_bkg_data
      000315 E8 04            [16]  635 	add	sp, #4
                           000317   636 	C$Battle.c$143$2_0$121	= .
                                    637 	.globl	C$Battle.c$143$2_0$121
                                    638 ;src\Battle.c:143: set_bkg_tiles(7, 5, Saucer_MapWidth, Saucer_MapHeight, Ghost_Map);
      000317 11r00r00         [12]  639 	ld	de, #_Ghost_Map
      00031A D5               [16]  640 	push	de
      00031B 21 05 03         [12]  641 	ld	hl, #0x305
      00031E E5               [16]  642 	push	hl
      00031F 21 07 05         [12]  643 	ld	hl, #0x507
      000322 E5               [16]  644 	push	hl
      000323 CDr00r00         [24]  645 	call	_set_bkg_tiles
      000326 E8 06            [16]  646 	add	sp, #6
      000328 18 73            [12]  647 	jr	00156$
      00032A                        648 00110$:
                           00032A   649 	C$Battle.c$145$1_0$105	= .
                                    650 	.globl	C$Battle.c$145$1_0$105
                                    651 ;src\Battle.c:145: else if (index == 16)
      00032A FAr00r00         [16]  652 	ld	a, (#_index)
      00032D D6 10            [ 8]  653 	sub	a, #0x10
      00032F 20 20            [12]  654 	jr	NZ, 00107$
                           000331   655 	C$Battle.c$147$2_0$122	= .
                                    656 	.globl	C$Battle.c$147$2_0$122
                                    657 ;src\Battle.c:147: set_bkg_data(128, 20, SockHead_Tiles);
      000331 11r00r00         [12]  658 	ld	de, #_SockHead_Tiles
      000334 D5               [16]  659 	push	de
      000335 21 80 14         [12]  660 	ld	hl, #0x1480
      000338 E5               [16]  661 	push	hl
      000339 CDr00r00         [24]  662 	call	_set_bkg_data
      00033C E8 04            [16]  663 	add	sp, #4
                           00033E   664 	C$Battle.c$148$2_0$122	= .
                                    665 	.globl	C$Battle.c$148$2_0$122
                                    666 ;src\Battle.c:148: set_bkg_tiles(7, 5, SockHead_MapWidth, SockHead_MapHeight, SockHead_Map);
      00033E 11r00r00         [12]  667 	ld	de, #_SockHead_Map
      000341 D5               [16]  668 	push	de
      000342 21 04 07         [12]  669 	ld	hl, #0x704
      000345 E5               [16]  670 	push	hl
      000346 21 07 05         [12]  671 	ld	hl, #0x507
      000349 E5               [16]  672 	push	hl
      00034A CDr00r00         [24]  673 	call	_set_bkg_tiles
      00034D E8 06            [16]  674 	add	sp, #6
      00034F 18 4C            [12]  675 	jr	00156$
      000351                        676 00107$:
                           000351   677 	C$Battle.c$150$1_0$105	= .
                                    678 	.globl	C$Battle.c$150$1_0$105
                                    679 ;src\Battle.c:150: else if (index == 17)
      000351 FAr00r00         [16]  680 	ld	a, (#_index)
      000354 D6 11            [ 8]  681 	sub	a, #0x11
      000356 20 20            [12]  682 	jr	NZ, 00104$
                           000358   683 	C$Battle.c$152$2_0$123	= .
                                    684 	.globl	C$Battle.c$152$2_0$123
                                    685 ;src\Battle.c:152: set_bkg_data(128, 26, Toby_Tiles);
      000358 11r00r00         [12]  686 	ld	de, #_Toby_Tiles
      00035B D5               [16]  687 	push	de
      00035C 21 80 1A         [12]  688 	ld	hl, #0x1a80
      00035F E5               [16]  689 	push	hl
      000360 CDr00r00         [24]  690 	call	_set_bkg_data
      000363 E8 04            [16]  691 	add	sp, #4
                           000365   692 	C$Battle.c$153$2_0$123	= .
                                    693 	.globl	C$Battle.c$153$2_0$123
                                    694 ;src\Battle.c:153: set_bkg_tiles(7, 5, Toby_MapWidth, Toby_MapHeight, Toby_Map);
      000365 11r00r00         [12]  695 	ld	de, #_Toby_Map
      000368 D5               [16]  696 	push	de
      000369 21 04 07         [12]  697 	ld	hl, #0x704
      00036C E5               [16]  698 	push	hl
      00036D 21 07 05         [12]  699 	ld	hl, #0x507
      000370 E5               [16]  700 	push	hl
      000371 CDr00r00         [24]  701 	call	_set_bkg_tiles
      000374 E8 06            [16]  702 	add	sp, #6
      000376 18 25            [12]  703 	jr	00156$
      000378                        704 00104$:
                           000378   705 	C$Battle.c$155$1_0$105	= .
                                    706 	.globl	C$Battle.c$155$1_0$105
                                    707 ;src\Battle.c:155: else if (index == 18)
      000378 FAr00r00         [16]  708 	ld	a, (#_index)
      00037B D6 12            [ 8]  709 	sub	a, #0x12
      00037D 20 1E            [12]  710 	jr	NZ, 00156$
                           00037F   711 	C$Battle.c$157$2_0$124	= .
                                    712 	.globl	C$Battle.c$157$2_0$124
                                    713 ;src\Battle.c:157: set_bkg_data(128, 24, Drunk_Tiles);
      00037F 11r00r00         [12]  714 	ld	de, #_Drunk_Tiles
      000382 D5               [16]  715 	push	de
      000383 21 80 18         [12]  716 	ld	hl, #0x1880
      000386 E5               [16]  717 	push	hl
      000387 CDr00r00         [24]  718 	call	_set_bkg_data
      00038A E8 04            [16]  719 	add	sp, #4
                           00038C   720 	C$Battle.c$158$2_0$124	= .
                                    721 	.globl	C$Battle.c$158$2_0$124
                                    722 ;src\Battle.c:158: set_bkg_tiles(7, 5, Drunk_MapWidth, Drunk_MapHeight, Drunk_Map);
      00038C 11r00r00         [12]  723 	ld	de, #_Drunk_Map
      00038F D5               [16]  724 	push	de
      000390 21 04 06         [12]  725 	ld	hl, #0x604
      000393 E5               [16]  726 	push	hl
      000394 21 07 05         [12]  727 	ld	hl, #0x507
      000397 E5               [16]  728 	push	hl
      000398 CDr00r00         [24]  729 	call	_set_bkg_tiles
      00039B E8 06            [16]  730 	add	sp, #6
      00039D                        731 00156$:
                           00039D   732 	C$Battle.c$160$1_0$105	= .
                                    733 	.globl	C$Battle.c$160$1_0$105
                                    734 ;src\Battle.c:160: performantdelay(120);
      00039D 3E 78            [ 8]  735 	ld	a, #0x78
      00039F CDr00r00         [24]  736 	call	_performantdelay
                                    737 ;C:/gbdk/include/gb/gb.h:1222: SCX_REG+=x, SCY_REG+=y;
      0003A2 F0r00            [12]  738 	ldh	a, (_SCY_REG + 0)
      0003A4 C6 28            [ 8]  739 	add	a, #0x28
      0003A6 E0r00            [12]  740 	ldh	(_SCY_REG + 0), a
                           0003A8   741 	C$Battle.c$161$3_0$105	= .
                                    742 	.globl	C$Battle.c$161$3_0$105
                                    743 ;src\Battle.c:161: scroll_bkg(0, 40);
                           0003A8   744 	C$Battle.c$162$3_0$105	= .
                                    745 	.globl	C$Battle.c$162$3_0$105
                                    746 ;src\Battle.c:162: }
                           0003A8   747 	C$Battle.c$162$3_0$105	= .
                                    748 	.globl	C$Battle.c$162$3_0$105
                           0003A8   749 	XG$BattleSetup$0$0	= .
                                    750 	.globl	XG$BattleSetup$0$0
      0003A8 C9               [16]  751 	ret
                           0003A9   752 	G$BattleUpdate$0$0	= .
                                    753 	.globl	G$BattleUpdate$0$0
                           0003A9   754 	C$Battle.c$164$3_0$128	= .
                                    755 	.globl	C$Battle.c$164$3_0$128
                                    756 ;src\Battle.c:164: uint8_t BattleUpdate()
                                    757 ;	---------------------------------
                                    758 ; Function BattleUpdate
                                    759 ; ---------------------------------
      0003A9                        760 _BattleUpdate::
                           0003A9   761 	C$Battle.c$166$1_0$128	= .
                                    762 	.globl	C$Battle.c$166$1_0$128
                                    763 ;src\Battle.c:166: if (joypadCurrent & J_SELECT)
      0003A9 FAr00r00         [16]  764 	ld	a, (#_joypadCurrent)
      0003AC CB 77            [ 8]  765 	bit	6, a
                           0003AE   766 	C$Battle.c$168$2_0$129	= .
                                    767 	.globl	C$Battle.c$168$2_0$129
                                    768 ;src\Battle.c:168: return GAMETITLE;
                           0003AE   769 	C$Battle.c$171$2_0$130	= .
                                    770 	.globl	C$Battle.c$171$2_0$130
                                    771 ;src\Battle.c:171: return BATTLE;
      0003AE 3E 01            [ 8]  772 	ld	a, #0x01
      0003B0 C0               [20]  773 	ret	NZ
      0003B1 3E 05            [ 8]  774 	ld	a, #0x05
                           0003B3   775 	C$Battle.c$173$1_0$128	= .
                                    776 	.globl	C$Battle.c$173$1_0$128
                                    777 ;src\Battle.c:173: }
                           0003B3   778 	C$Battle.c$173$1_0$128	= .
                                    779 	.globl	C$Battle.c$173$1_0$128
                           0003B3   780 	XG$BattleUpdate$0$0	= .
                                    781 	.globl	XG$BattleUpdate$0$0
      0003B3 C9               [16]  782 	ret
                                    783 	.area _CODE
                                    784 	.area _INITIALIZER
                                    785 	.area _CABS (ABS)
