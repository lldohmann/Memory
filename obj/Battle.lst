                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.2 #13350 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module Battle
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _BattleUpdate
                                     12 	.globl _BattleSetup
                                     13 	.globl _InvertColor
                                     14 	.globl _fadeFromBlack
                                     15 	.globl _DrawText
                                     16 	.globl _DrawNumber
                                     17 	.globl _performantdelay
                                     18 	.globl _set_bkg_tiles
                                     19 	.globl _set_bkg_data
                                     20 	.globl _cursor_y
                                     21 	.globl _cursor_x
                                     22 ;--------------------------------------------------------
                                     23 ; special function registers
                                     24 ;--------------------------------------------------------
                                     25 ;--------------------------------------------------------
                                     26 ; ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area _DATA
                           000000    29 G$cursor_x$0_0$0==.
      000000                         30 _cursor_x::
      000000                         31 	.ds 1
                           000001    32 G$cursor_y$0_0$0==.
      000001                         33 _cursor_y::
      000001                         34 	.ds 1
                                     35 ;--------------------------------------------------------
                                     36 ; ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area _INITIALIZED
                                     39 ;--------------------------------------------------------
                                     40 ; absolute external ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area _DABS (ABS)
                                     43 ;--------------------------------------------------------
                                     44 ; global & static initialisations
                                     45 ;--------------------------------------------------------
                                     46 	.area _HOME
                                     47 	.area _GSINIT
                                     48 	.area _GSFINAL
                                     49 	.area _GSINIT
                                     50 ;--------------------------------------------------------
                                     51 ; Home
                                     52 ;--------------------------------------------------------
                                     53 	.area _HOME
                                     54 	.area _HOME
                                     55 ;--------------------------------------------------------
                                     56 ; code
                                     57 ;--------------------------------------------------------
                                     58 	.area _CODE
                           000000    59 	G$BattleSetup$0$0	= .
                                     60 	.globl	G$BattleSetup$0$0
                           000000    61 	C$Battle.c$42$0_0$107	= .
                                     62 	.globl	C$Battle.c$42$0_0$107
                                     63 ;src\Battle.c:42: void BattleSetup()
                                     64 ;	---------------------------------
                                     65 ; Function BattleSetup
                                     66 ; ---------------------------------
      000000                         67 _BattleSetup::
                                     68 ;C:/gbdk/include/gb/gb.h:1208: SCX_REG=x, SCY_REG=y;
      000000 AF               [ 4]   69 	xor	a, a
      000001 E0r00            [12]   70 	ldh	(_SCX_REG + 0), a
      000003 AF               [ 4]   71 	xor	a, a
      000004 E0r00            [12]   72 	ldh	(_SCY_REG + 0), a
                           000006    73 	C$Battle.c$45$1_0$107	= .
                                     74 	.globl	C$Battle.c$45$1_0$107
                                     75 ;src\Battle.c:45: set_bkg_data(0, 53, FontTiles); // Load font and window tiles
      000006 11r00r00         [12]   76 	ld	de, #_FontTiles
      000009 D5               [16]   77 	push	de
      00000A 21 00 35         [12]   78 	ld	hl, #0x3500
      00000D E5               [16]   79 	push	hl
      00000E CDr00r00         [24]   80 	call	_set_bkg_data
      000011 E8 04            [16]   81 	add	sp, #4
                           000013    82 	C$Battle.c$46$1_0$107	= .
                                     83 	.globl	C$Battle.c$46$1_0$107
                                     84 ;src\Battle.c:46: set_bkg_tiles(0, 0, Battle_MapWidth, Battle_MapHeight, Battle_Map); // draw background window & text
      000013 11r00r00         [12]   85 	ld	de, #_Battle_Map
      000016 D5               [16]   86 	push	de
      000017 21 14 17         [12]   87 	ld	hl, #0x1714
      00001A E5               [16]   88 	push	hl
      00001B AF               [ 4]   89 	xor	a, a
      00001C 0F               [ 4]   90 	rrca
      00001D F5               [16]   91 	push	af
      00001E CDr00r00         [24]   92 	call	_set_bkg_tiles
      000021 E8 06            [16]   93 	add	sp, #6
                           000023    94 	C$Battle.c$48$1_0$107	= .
                                     95 	.globl	C$Battle.c$48$1_0$107
                                     96 ;src\Battle.c:48: DrawNumber(1, 14, 123456, 6);
      000023 3E 06            [ 8]   97 	ld	a, #0x06
      000025 F5               [16]   98 	push	af
      000026 33               [ 8]   99 	inc	sp
      000027 11 40 E2         [12]  100 	ld	de, #0xe240
      00002A D5               [16]  101 	push	de
      00002B 1E 0E            [ 8]  102 	ld	e, #0x0e
      00002D 3E 01            [ 8]  103 	ld	a, #0x01
      00002F CDr00r00         [24]  104 	call	_DrawNumber
                           000032   105 	C$Battle.c$49$1_0$107	= .
                                    106 	.globl	C$Battle.c$49$1_0$107
                                    107 ;src\Battle.c:49: DrawNumber(8, 14, 110, 3);
      000032 3E 03            [ 8]  108 	ld	a, #0x03
      000034 F5               [16]  109 	push	af
      000035 33               [ 8]  110 	inc	sp
      000036 11 6E 00         [12]  111 	ld	de, #0x006e
      000039 D5               [16]  112 	push	de
      00003A 1E 0E            [ 8]  113 	ld	e, #0x0e
      00003C 3E 08            [ 8]  114 	ld	a, #0x08
      00003E CDr00r00         [24]  115 	call	_DrawNumber
                           000041   116 	C$Battle.c$50$1_0$107	= .
                                    117 	.globl	C$Battle.c$50$1_0$107
                                    118 ;src\Battle.c:50: DrawNumber(13, 14, 70, 2);
      000041 3E 02            [ 8]  119 	ld	a, #0x02
      000043 F5               [16]  120 	push	af
      000044 33               [ 8]  121 	inc	sp
      000045 11 46 00         [12]  122 	ld	de, #0x0046
      000048 D5               [16]  123 	push	de
      000049 1E 0E            [ 8]  124 	ld	e, #0x0e
      00004B 3E 0D            [ 8]  125 	ld	a, #0x0d
      00004D CDr00r00         [24]  126 	call	_DrawNumber
                           000050   127 	C$Battle.c$51$1_0$107	= .
                                    128 	.globl	C$Battle.c$51$1_0$107
                                    129 ;src\Battle.c:51: DrawNumber(17, 14, 11, 2);
      000050 3E 02            [ 8]  130 	ld	a, #0x02
      000052 F5               [16]  131 	push	af
      000053 33               [ 8]  132 	inc	sp
      000054 11 0B 00         [12]  133 	ld	de, #0x000b
      000057 D5               [16]  134 	push	de
      000058 1E 0E            [ 8]  135 	ld	e, #0x0e
      00005A 3E 11            [ 8]  136 	ld	a, #0x11
      00005C CDr00r00         [24]  137 	call	_DrawNumber
                           00005F   138 	C$Battle.c$53$1_0$107	= .
                                    139 	.globl	C$Battle.c$53$1_0$107
                                    140 ;src\Battle.c:53: DrawNumber(1, 15, 123456, 6);
      00005F 3E 06            [ 8]  141 	ld	a, #0x06
      000061 F5               [16]  142 	push	af
      000062 33               [ 8]  143 	inc	sp
      000063 11 40 E2         [12]  144 	ld	de, #0xe240
      000066 D5               [16]  145 	push	de
      000067 1E 0F            [ 8]  146 	ld	e, #0x0f
      000069 3E 01            [ 8]  147 	ld	a, #0x01
      00006B CDr00r00         [24]  148 	call	_DrawNumber
                           00006E   149 	C$Battle.c$54$1_0$107	= .
                                    150 	.globl	C$Battle.c$54$1_0$107
                                    151 ;src\Battle.c:54: DrawNumber(9, 15, 80, 2);
      00006E 3E 02            [ 8]  152 	ld	a, #0x02
      000070 F5               [16]  153 	push	af
      000071 33               [ 8]  154 	inc	sp
      000072 11 50 00         [12]  155 	ld	de, #0x0050
      000075 D5               [16]  156 	push	de
      000076 1E 0F            [ 8]  157 	ld	e, #0x0f
      000078 3E 09            [ 8]  158 	ld	a, #0x09
      00007A CDr00r00         [24]  159 	call	_DrawNumber
                           00007D   160 	C$Battle.c$55$1_0$107	= .
                                    161 	.globl	C$Battle.c$55$1_0$107
                                    162 ;src\Battle.c:55: DrawNumber(13, 15, 33, 2);
      00007D 3E 02            [ 8]  163 	ld	a, #0x02
      00007F F5               [16]  164 	push	af
      000080 33               [ 8]  165 	inc	sp
      000081 11 21 00         [12]  166 	ld	de, #0x0021
      000084 D5               [16]  167 	push	de
      000085 1E 0F            [ 8]  168 	ld	e, #0x0f
      000087 3E 0D            [ 8]  169 	ld	a, #0x0d
      000089 CDr00r00         [24]  170 	call	_DrawNumber
                           00008C   171 	C$Battle.c$56$1_0$107	= .
                                    172 	.globl	C$Battle.c$56$1_0$107
                                    173 ;src\Battle.c:56: DrawNumber(17, 15, 11, 2);
      00008C 3E 02            [ 8]  174 	ld	a, #0x02
      00008E F5               [16]  175 	push	af
      00008F 33               [ 8]  176 	inc	sp
      000090 11 0B 00         [12]  177 	ld	de, #0x000b
      000093 D5               [16]  178 	push	de
      000094 1E 0F            [ 8]  179 	ld	e, #0x0f
      000096 3E 11            [ 8]  180 	ld	a, #0x11
      000098 CDr00r00         [24]  181 	call	_DrawNumber
                           00009B   182 	C$Battle.c$59$1_0$107	= .
                                    183 	.globl	C$Battle.c$59$1_0$107
                                    184 ;src\Battle.c:59: cursor_x = 8;
      00009B 21r00r00         [12]  185 	ld	hl, #_cursor_x
      00009E 36 08            [12]  186 	ld	(hl), #0x08
                           0000A0   187 	C$Battle.c$60$1_0$107	= .
                                    188 	.globl	C$Battle.c$60$1_0$107
                                    189 ;src\Battle.c:60: cursor_y = 144;
      0000A0 21r01r00         [12]  190 	ld	hl, #_cursor_y
      0000A3 36 90            [12]  191 	ld	(hl), #0x90
                           0000A5   192 	C$Battle.c$63$1_0$107	= .
                                    193 	.globl	C$Battle.c$63$1_0$107
                                    194 ;src\Battle.c:63: SHOW_BKG; 
      0000A5 F0r00            [12]  195 	ldh	a, (_LCDC_REG + 0)
      0000A7 F6 01            [ 8]  196 	or	a, #0x01
      0000A9 E0r00            [12]  197 	ldh	(_LCDC_REG + 0), a
                           0000AB   198 	C$Battle.c$64$1_0$107	= .
                                    199 	.globl	C$Battle.c$64$1_0$107
                                    200 ;src\Battle.c:64: fadeFromBlack(5);
      0000AB 3E 05            [ 8]  201 	ld	a, #0x05
      0000AD CDr00r00         [24]  202 	call	_fadeFromBlack
                           0000B0   203 	C$Battle.c$65$1_0$107	= .
                                    204 	.globl	C$Battle.c$65$1_0$107
                                    205 ;src\Battle.c:65: if (index == 0) // JIM
      0000B0 FAr00r00         [16]  206 	ld	a, (#_index)
      0000B3 B7               [ 4]  207 	or	a, a
      0000B4 20 36            [12]  208 	jr	NZ, 00155$
                           0000B6   209 	C$Battle.c$67$2_0$108	= .
                                    210 	.globl	C$Battle.c$67$2_0$108
                                    211 ;src\Battle.c:67: DrawText(1, 1, "Jim Crow draws");
      0000B6 11r02r04         [12]  212 	ld	de, #___str_0
      0000B9 D5               [16]  213 	push	de
      0000BA 3E 01            [ 8]  214 	ld	a,#0x01
      0000BC 5F               [ 4]  215 	ld	e,a
      0000BD CDr00r00         [24]  216 	call	_DrawText
                           0000C0   217 	C$Battle.c$68$2_0$108	= .
                                    218 	.globl	C$Battle.c$68$2_0$108
                                    219 ;src\Battle.c:68: DrawText(1, 3, "near.");
      0000C0 11r11r04         [12]  220 	ld	de, #___str_1
      0000C3 D5               [16]  221 	push	de
      0000C4 1E 03            [ 8]  222 	ld	e, #0x03
      0000C6 3E 01            [ 8]  223 	ld	a, #0x01
      0000C8 CDr00r00         [24]  224 	call	_DrawText
                           0000CB   225 	C$Battle.c$69$2_0$108	= .
                                    226 	.globl	C$Battle.c$69$2_0$108
                                    227 ;src\Battle.c:69: set_bkg_data(128, 23, Crow_Tiles); // init with crow monster
      0000CB 11r00r00         [12]  228 	ld	de, #_Crow_Tiles
      0000CE D5               [16]  229 	push	de
      0000CF 21 80 17         [12]  230 	ld	hl, #0x1780
      0000D2 E5               [16]  231 	push	hl
      0000D3 CDr00r00         [24]  232 	call	_set_bkg_data
      0000D6 E8 04            [16]  233 	add	sp, #4
                           0000D8   234 	C$Battle.c$70$2_0$108	= .
                                    235 	.globl	C$Battle.c$70$2_0$108
                                    236 ;src\Battle.c:70: set_bkg_tiles(7, 6, Crow_MapWidth, Crow_MapHeight, Crow_Map); // draw Crow monster
      0000D8 11r00r00         [12]  237 	ld	de, #_Crow_Map
      0000DB D5               [16]  238 	push	de
      0000DC 21 05 07         [12]  239 	ld	hl, #0x705
      0000DF E5               [16]  240 	push	hl
      0000E0 21 07 06         [12]  241 	ld	hl, #0x607
      0000E3 E5               [16]  242 	push	hl
      0000E4 CDr00r00         [24]  243 	call	_set_bkg_tiles
      0000E7 E8 06            [16]  244 	add	sp, #6
      0000E9 C3rF6r03         [16]  245 	jp	00156$
      0000EC                        246 00155$:
                           0000EC   247 	C$Battle.c$72$1_0$107	= .
                                    248 	.globl	C$Battle.c$72$1_0$107
                                    249 ;src\Battle.c:72: else if (index == 1) // GYPSY
      0000EC FAr00r00         [16]  250 	ld	a, (#_index)
      0000EF 3D               [ 4]  251 	dec	a
      0000F0 20 36            [12]  252 	jr	NZ, 00152$
                           0000F2   253 	C$Battle.c$74$2_0$109	= .
                                    254 	.globl	C$Battle.c$74$2_0$109
                                    255 ;src\Battle.c:74: DrawText(1, 1, "Gypsy Moth draws");
      0000F2 11r17r04         [12]  256 	ld	de, #___str_2
      0000F5 D5               [16]  257 	push	de
      0000F6 3E 01            [ 8]  258 	ld	a,#0x01
      0000F8 5F               [ 4]  259 	ld	e,a
      0000F9 CDr00r00         [24]  260 	call	_DrawText
                           0000FC   261 	C$Battle.c$75$2_0$109	= .
                                    262 	.globl	C$Battle.c$75$2_0$109
                                    263 ;src\Battle.c:75: DrawText(1, 3, "near.");
      0000FC 11r11r04         [12]  264 	ld	de, #___str_1
      0000FF D5               [16]  265 	push	de
      000100 1E 03            [ 8]  266 	ld	e, #0x03
      000102 3E 01            [ 8]  267 	ld	a, #0x01
      000104 CDr00r00         [24]  268 	call	_DrawText
                           000107   269 	C$Battle.c$76$2_0$109	= .
                                    270 	.globl	C$Battle.c$76$2_0$109
                                    271 ;src\Battle.c:76: set_bkg_data(128, 29, GypsyTiles); 
      000107 11r00r00         [12]  272 	ld	de, #_GypsyTiles
      00010A D5               [16]  273 	push	de
      00010B 21 80 1D         [12]  274 	ld	hl, #0x1d80
      00010E E5               [16]  275 	push	hl
      00010F CDr00r00         [24]  276 	call	_set_bkg_data
      000112 E8 04            [16]  277 	add	sp, #4
                           000114   278 	C$Battle.c$77$2_0$109	= .
                                    279 	.globl	C$Battle.c$77$2_0$109
                                    280 ;src\Battle.c:77: set_bkg_tiles(7, 5, Gypsy_MapWidth, Gypsy_MapHeight, Gypsy_Map); 
      000114 11r00r00         [12]  281 	ld	de, #_Gypsy_Map
      000117 D5               [16]  282 	push	de
      000118 21 06 07         [12]  283 	ld	hl, #0x706
      00011B E5               [16]  284 	push	hl
      00011C 21 07 05         [12]  285 	ld	hl, #0x507
      00011F E5               [16]  286 	push	hl
      000120 CDr00r00         [24]  287 	call	_set_bkg_tiles
      000123 E8 06            [16]  288 	add	sp, #6
      000125 C3rF6r03         [16]  289 	jp	00156$
      000128                        290 00152$:
                           000128   291 	C$Battle.c$79$1_0$107	= .
                                    292 	.globl	C$Battle.c$79$1_0$107
                                    293 ;src\Battle.c:79: else if (index == 2) // WALLY
      000128 FAr00r00         [16]  294 	ld	a, (#_index)
      00012B D6 02            [ 8]  295 	sub	a, #0x02
      00012D 20 2B            [12]  296 	jr	NZ, 00149$
                           00012F   297 	C$Battle.c$81$2_0$110	= .
                                    298 	.globl	C$Battle.c$81$2_0$110
                                    299 ;src\Battle.c:81: DrawText(1, 1, "Wally butts in.");
      00012F 11r28r04         [12]  300 	ld	de, #___str_3
      000132 D5               [16]  301 	push	de
      000133 3E 01            [ 8]  302 	ld	a,#0x01
      000135 5F               [ 4]  303 	ld	e,a
      000136 CDr00r00         [24]  304 	call	_DrawText
                           000139   305 	C$Battle.c$82$2_0$110	= .
                                    306 	.globl	C$Battle.c$82$2_0$110
                                    307 ;src\Battle.c:82: set_bkg_data(128, 27, WallyTiles); 
      000139 11r00r00         [12]  308 	ld	de, #_WallyTiles
      00013C D5               [16]  309 	push	de
      00013D 21 80 1B         [12]  310 	ld	hl, #0x1b80
      000140 E5               [16]  311 	push	hl
      000141 CDr00r00         [24]  312 	call	_set_bkg_data
      000144 E8 04            [16]  313 	add	sp, #4
                           000146   314 	C$Battle.c$83$2_0$110	= .
                                    315 	.globl	C$Battle.c$83$2_0$110
                                    316 ;src\Battle.c:83: set_bkg_tiles(7, 5, Gypsy_MapWidth, Gypsy_MapHeight, Gypsy_Map); 
      000146 11r00r00         [12]  317 	ld	de, #_Gypsy_Map
      000149 D5               [16]  318 	push	de
      00014A 21 06 07         [12]  319 	ld	hl, #0x706
      00014D E5               [16]  320 	push	hl
      00014E 21 07 05         [12]  321 	ld	hl, #0x507
      000151 E5               [16]  322 	push	hl
      000152 CDr00r00         [24]  323 	call	_set_bkg_tiles
      000155 E8 06            [16]  324 	add	sp, #6
      000157 C3rF6r03         [16]  325 	jp	00156$
      00015A                        326 00149$:
                           00015A   327 	C$Battle.c$85$1_0$107	= .
                                    328 	.globl	C$Battle.c$85$1_0$107
                                    329 ;src\Battle.c:85: else if (index == 3) // TICK
      00015A FAr00r00         [16]  330 	ld	a, (#_index)
      00015D D6 03            [ 8]  331 	sub	a, #0x03
      00015F 20 2B            [12]  332 	jr	NZ, 00146$
                           000161   333 	C$Battle.c$87$2_0$111	= .
                                    334 	.globl	C$Battle.c$87$2_0$111
                                    335 ;src\Battle.c:87: DrawText(1, 1, "A tick draws near.");
      000161 11r38r04         [12]  336 	ld	de, #___str_4
      000164 D5               [16]  337 	push	de
      000165 3E 01            [ 8]  338 	ld	a,#0x01
      000167 5F               [ 4]  339 	ld	e,a
      000168 CDr00r00         [24]  340 	call	_DrawText
                           00016B   341 	C$Battle.c$88$2_0$111	= .
                                    342 	.globl	C$Battle.c$88$2_0$111
                                    343 ;src\Battle.c:88: set_bkg_data(128, 20, Tick_Tiles); 
      00016B 11r00r00         [12]  344 	ld	de, #_Tick_Tiles
      00016E D5               [16]  345 	push	de
      00016F 21 80 14         [12]  346 	ld	hl, #0x1480
      000172 E5               [16]  347 	push	hl
      000173 CDr00r00         [24]  348 	call	_set_bkg_data
      000176 E8 04            [16]  349 	add	sp, #4
                           000178   350 	C$Battle.c$89$2_0$111	= .
                                    351 	.globl	C$Battle.c$89$2_0$111
                                    352 ;src\Battle.c:89: set_bkg_tiles(7, 5, Tick_MapWidth, Tick_MapHeight, Tick_Map); 
      000178 11r00r00         [12]  353 	ld	de, #_Tick_Map
      00017B D5               [16]  354 	push	de
      00017C 21 05 05         [12]  355 	ld	hl, #0x505
      00017F E5               [16]  356 	push	hl
      000180 21 07 05         [12]  357 	ld	hl, #0x507
      000183 E5               [16]  358 	push	hl
      000184 CDr00r00         [24]  359 	call	_set_bkg_tiles
      000187 E8 06            [16]  360 	add	sp, #6
      000189 C3rF6r03         [16]  361 	jp	00156$
      00018C                        362 00146$:
                           00018C   363 	C$Battle.c$91$1_0$107	= .
                                    364 	.globl	C$Battle.c$91$1_0$107
                                    365 ;src\Battle.c:91: else if (index == 4) // OFFICER
      00018C FAr00r00         [16]  366 	ld	a, (#_index)
      00018F D6 04            [ 8]  367 	sub	a, #0x04
      000191 20 36            [12]  368 	jr	NZ, 00143$
                           000193   369 	C$Battle.c$93$2_0$112	= .
                                    370 	.globl	C$Battle.c$93$2_0$112
                                    371 ;src\Battle.c:93: DrawText(1, 1, "An Officer draws");
      000193 11r4Br04         [12]  372 	ld	de, #___str_5
      000196 D5               [16]  373 	push	de
      000197 3E 01            [ 8]  374 	ld	a,#0x01
      000199 5F               [ 4]  375 	ld	e,a
      00019A CDr00r00         [24]  376 	call	_DrawText
                           00019D   377 	C$Battle.c$94$2_0$112	= .
                                    378 	.globl	C$Battle.c$94$2_0$112
                                    379 ;src\Battle.c:94: DrawText(1, 3, "near.");
      00019D 11r11r04         [12]  380 	ld	de, #___str_1
      0001A0 D5               [16]  381 	push	de
      0001A1 1E 03            [ 8]  382 	ld	e, #0x03
      0001A3 3E 01            [ 8]  383 	ld	a, #0x01
      0001A5 CDr00r00         [24]  384 	call	_DrawText
                           0001A8   385 	C$Battle.c$95$2_0$112	= .
                                    386 	.globl	C$Battle.c$95$2_0$112
                                    387 ;src\Battle.c:95: set_bkg_data(128, 39, Cop_Tiles); 
      0001A8 11r00r00         [12]  388 	ld	de, #_Cop_Tiles
      0001AB D5               [16]  389 	push	de
      0001AC 21 80 27         [12]  390 	ld	hl, #0x2780
      0001AF E5               [16]  391 	push	hl
      0001B0 CDr00r00         [24]  392 	call	_set_bkg_data
      0001B3 E8 04            [16]  393 	add	sp, #4
                           0001B5   394 	C$Battle.c$96$2_0$112	= .
                                    395 	.globl	C$Battle.c$96$2_0$112
                                    396 ;src\Battle.c:96: set_bkg_tiles(7, 5, Officer_MapWidth, Officer_MapHeight, Officer_Map); 
      0001B5 11r00r00         [12]  397 	ld	de, #_Officer_Map
      0001B8 D5               [16]  398 	push	de
      0001B9 21 06 07         [12]  399 	ld	hl, #0x706
      0001BC E5               [16]  400 	push	hl
      0001BD 21 07 05         [12]  401 	ld	hl, #0x507
      0001C0 E5               [16]  402 	push	hl
      0001C1 CDr00r00         [24]  403 	call	_set_bkg_tiles
      0001C4 E8 06            [16]  404 	add	sp, #6
      0001C6 C3rF6r03         [16]  405 	jp	00156$
      0001C9                        406 00143$:
                           0001C9   407 	C$Battle.c$98$1_0$107	= .
                                    408 	.globl	C$Battle.c$98$1_0$107
                                    409 ;src\Battle.c:98: else if (index == 5) // POLICE
      0001C9 FAr00r00         [16]  410 	ld	a, (#_index)
      0001CC D6 05            [ 8]  411 	sub	a, #0x05
      0001CE 20 21            [12]  412 	jr	NZ, 00140$
                           0001D0   413 	C$Battle.c$100$2_0$113	= .
                                    414 	.globl	C$Battle.c$100$2_0$113
                                    415 ;src\Battle.c:100: set_bkg_data(128, 39, Cop_Tiles); 
      0001D0 11r00r00         [12]  416 	ld	de, #_Cop_Tiles
      0001D3 D5               [16]  417 	push	de
      0001D4 21 80 27         [12]  418 	ld	hl, #0x2780
      0001D7 E5               [16]  419 	push	hl
      0001D8 CDr00r00         [24]  420 	call	_set_bkg_data
      0001DB E8 04            [16]  421 	add	sp, #4
                           0001DD   422 	C$Battle.c$101$2_0$113	= .
                                    423 	.globl	C$Battle.c$101$2_0$113
                                    424 ;src\Battle.c:101: set_bkg_tiles(7, 5, Police_MapWidth, Police_MapHeight, Police_Map); 
      0001DD 11r00r00         [12]  425 	ld	de, #_Police_Map
      0001E0 D5               [16]  426 	push	de
      0001E1 21 06 07         [12]  427 	ld	hl, #0x706
      0001E4 E5               [16]  428 	push	hl
      0001E5 21 07 05         [12]  429 	ld	hl, #0x507
      0001E8 E5               [16]  430 	push	hl
      0001E9 CDr00r00         [24]  431 	call	_set_bkg_tiles
      0001EC E8 06            [16]  432 	add	sp, #6
      0001EE C3rF6r03         [16]  433 	jp	00156$
      0001F1                        434 00140$:
                           0001F1   435 	C$Battle.c$103$1_0$107	= .
                                    436 	.globl	C$Battle.c$103$1_0$107
                                    437 ;src\Battle.c:103: else if (index == 6) // SHERIFF
      0001F1 FAr00r00         [16]  438 	ld	a, (#_index)
      0001F4 D6 06            [ 8]  439 	sub	a, #0x06
      0001F6 20 21            [12]  440 	jr	NZ, 00137$
                           0001F8   441 	C$Battle.c$105$2_0$114	= .
                                    442 	.globl	C$Battle.c$105$2_0$114
                                    443 ;src\Battle.c:105: set_bkg_data(128, 39, Cop_Tiles); 
      0001F8 11r00r00         [12]  444 	ld	de, #_Cop_Tiles
      0001FB D5               [16]  445 	push	de
      0001FC 21 80 27         [12]  446 	ld	hl, #0x2780
      0001FF E5               [16]  447 	push	hl
      000200 CDr00r00         [24]  448 	call	_set_bkg_data
      000203 E8 04            [16]  449 	add	sp, #4
                           000205   450 	C$Battle.c$106$2_0$114	= .
                                    451 	.globl	C$Battle.c$106$2_0$114
                                    452 ;src\Battle.c:106: set_bkg_tiles(7, 5, Sheriff_MapWidth, Sheriff_MapHeight, Sheriff_Map); 
      000205 11r00r00         [12]  453 	ld	de, #_Sheriff_Map
      000208 D5               [16]  454 	push	de
      000209 21 06 07         [12]  455 	ld	hl, #0x706
      00020C E5               [16]  456 	push	hl
      00020D 21 07 05         [12]  457 	ld	hl, #0x507
      000210 E5               [16]  458 	push	hl
      000211 CDr00r00         [24]  459 	call	_set_bkg_tiles
      000214 E8 06            [16]  460 	add	sp, #6
      000216 C3rF6r03         [16]  461 	jp	00156$
      000219                        462 00137$:
                           000219   463 	C$Battle.c$108$1_0$107	= .
                                    464 	.globl	C$Battle.c$108$1_0$107
                                    465 ;src\Battle.c:108: else if (index == 7) // CHIEF
      000219 FAr00r00         [16]  466 	ld	a, (#_index)
      00021C D6 07            [ 8]  467 	sub	a, #0x07
      00021E 20 21            [12]  468 	jr	NZ, 00134$
                           000220   469 	C$Battle.c$110$2_0$115	= .
                                    470 	.globl	C$Battle.c$110$2_0$115
                                    471 ;src\Battle.c:110: set_bkg_data(128, 39, Cop_Tiles); 
      000220 11r00r00         [12]  472 	ld	de, #_Cop_Tiles
      000223 D5               [16]  473 	push	de
      000224 21 80 27         [12]  474 	ld	hl, #0x2780
      000227 E5               [16]  475 	push	hl
      000228 CDr00r00         [24]  476 	call	_set_bkg_data
      00022B E8 04            [16]  477 	add	sp, #4
                           00022D   478 	C$Battle.c$111$2_0$115	= .
                                    479 	.globl	C$Battle.c$111$2_0$115
                                    480 ;src\Battle.c:111: set_bkg_tiles(7, 5, Chief_MapWidth, Chief_MapHeight, Chief_Map); 
      00022D 11r00r00         [12]  481 	ld	de, #_Chief_Map
      000230 D5               [16]  482 	push	de
      000231 21 06 07         [12]  483 	ld	hl, #0x706
      000234 E5               [16]  484 	push	hl
      000235 21 07 05         [12]  485 	ld	hl, #0x507
      000238 E5               [16]  486 	push	hl
      000239 CDr00r00         [24]  487 	call	_set_bkg_tiles
      00023C E8 06            [16]  488 	add	sp, #6
      00023E C3rF6r03         [16]  489 	jp	00156$
      000241                        490 00134$:
                           000241   491 	C$Battle.c$113$1_0$107	= .
                                    492 	.globl	C$Battle.c$113$1_0$107
                                    493 ;src\Battle.c:113: else if (index == 8)
      000241 FAr00r00         [16]  494 	ld	a, (#_index)
      000244 D6 08            [ 8]  495 	sub	a, #0x08
      000246 20 24            [12]  496 	jr	NZ, 00131$
                           000248   497 	C$Battle.c$115$2_0$116	= .
                                    498 	.globl	C$Battle.c$115$2_0$116
                                    499 ;src\Battle.c:115: InvertColor();
      000248 CDr00r00         [24]  500 	call	_InvertColor
                           00024B   501 	C$Battle.c$116$2_0$116	= .
                                    502 	.globl	C$Battle.c$116$2_0$116
                                    503 ;src\Battle.c:116: set_bkg_data(128, 30, Man_Tiles); 
      00024B 11r00r00         [12]  504 	ld	de, #_Man_Tiles
      00024E D5               [16]  505 	push	de
      00024F 21 80 1E         [12]  506 	ld	hl, #0x1e80
      000252 E5               [16]  507 	push	hl
      000253 CDr00r00         [24]  508 	call	_set_bkg_data
      000256 E8 04            [16]  509 	add	sp, #4
                           000258   510 	C$Battle.c$117$2_0$116	= .
                                    511 	.globl	C$Battle.c$117$2_0$116
                                    512 ;src\Battle.c:117: set_bkg_tiles(7, 5, Man_MapWidth, Man_MapHeight, Man_Map); 
      000258 11r00r00         [12]  513 	ld	de, #_Man_Map
      00025B D5               [16]  514 	push	de
      00025C 21 06 06         [12]  515 	ld	hl, #0x606
      00025F E5               [16]  516 	push	hl
      000260 21 07 05         [12]  517 	ld	hl, #0x507
      000263 E5               [16]  518 	push	hl
      000264 CDr00r00         [24]  519 	call	_set_bkg_tiles
      000267 E8 06            [16]  520 	add	sp, #6
      000269 C3rF6r03         [16]  521 	jp	00156$
      00026C                        522 00131$:
                           00026C   523 	C$Battle.c$119$1_0$107	= .
                                    524 	.globl	C$Battle.c$119$1_0$107
                                    525 ;src\Battle.c:119: else if (index == 9)
      00026C FAr00r00         [16]  526 	ld	a, (#_index)
      00026F D6 09            [ 8]  527 	sub	a, #0x09
      000271 20 21            [12]  528 	jr	NZ, 00128$
                           000273   529 	C$Battle.c$121$2_0$117	= .
                                    530 	.globl	C$Battle.c$121$2_0$117
                                    531 ;src\Battle.c:121: set_bkg_data(128, 26, Car_Tiles); 
      000273 11r00r00         [12]  532 	ld	de, #_Car_Tiles
      000276 D5               [16]  533 	push	de
      000277 21 80 1A         [12]  534 	ld	hl, #0x1a80
      00027A E5               [16]  535 	push	hl
      00027B CDr00r00         [24]  536 	call	_set_bkg_data
      00027E E8 04            [16]  537 	add	sp, #4
                           000280   538 	C$Battle.c$122$2_0$117	= .
                                    539 	.globl	C$Battle.c$122$2_0$117
                                    540 ;src\Battle.c:122: set_bkg_tiles(7, 5, Car_MapWidth, Car_MapHeight, Car_Map); 
      000280 11r00r00         [12]  541 	ld	de, #_Car_Map
      000283 D5               [16]  542 	push	de
      000284 21 06 05         [12]  543 	ld	hl, #0x506
      000287 E5               [16]  544 	push	hl
      000288 21 07 05         [12]  545 	ld	hl, #0x507
      00028B E5               [16]  546 	push	hl
      00028C CDr00r00         [24]  547 	call	_set_bkg_tiles
      00028F E8 06            [16]  548 	add	sp, #6
      000291 C3rF6r03         [16]  549 	jp	00156$
      000294                        550 00128$:
                           000294   551 	C$Battle.c$124$1_0$107	= .
                                    552 	.globl	C$Battle.c$124$1_0$107
                                    553 ;src\Battle.c:124: else if (index == 10)
      000294 FAr00r00         [16]  554 	ld	a, (#_index)
      000297 D6 0A            [ 8]  555 	sub	a, #0x0a
      000299 20 21            [12]  556 	jr	NZ, 00125$
                           00029B   557 	C$Battle.c$126$2_0$118	= .
                                    558 	.globl	C$Battle.c$126$2_0$118
                                    559 ;src\Battle.c:126: set_bkg_data(128, 46, Semi_Tiles); 
      00029B 11r00r00         [12]  560 	ld	de, #_Semi_Tiles
      00029E D5               [16]  561 	push	de
      00029F 21 80 2E         [12]  562 	ld	hl, #0x2e80
      0002A2 E5               [16]  563 	push	hl
      0002A3 CDr00r00         [24]  564 	call	_set_bkg_data
      0002A6 E8 04            [16]  565 	add	sp, #4
                           0002A8   566 	C$Battle.c$127$2_0$118	= .
                                    567 	.globl	C$Battle.c$127$2_0$118
                                    568 ;src\Battle.c:127: set_bkg_tiles(7, 5, Semi_MapWidth, Semi_MapHeight, Semi_Map); 
      0002A8 11r00r00         [12]  569 	ld	de, #_Semi_Map
      0002AB D5               [16]  570 	push	de
      0002AC 21 06 08         [12]  571 	ld	hl, #0x806
      0002AF E5               [16]  572 	push	hl
      0002B0 21 07 05         [12]  573 	ld	hl, #0x507
      0002B3 E5               [16]  574 	push	hl
      0002B4 CDr00r00         [24]  575 	call	_set_bkg_tiles
      0002B7 E8 06            [16]  576 	add	sp, #6
      0002B9 C3rF6r03         [16]  577 	jp	00156$
      0002BC                        578 00125$:
                           0002BC   579 	C$Battle.c$129$1_0$107	= .
                                    580 	.globl	C$Battle.c$129$1_0$107
                                    581 ;src\Battle.c:129: else if (index == 11)
      0002BC FAr00r00         [16]  582 	ld	a, (#_index)
      0002BF D6 0B            [ 8]  583 	sub	a, #0x0b
      0002C1 20 21            [12]  584 	jr	NZ, 00122$
                           0002C3   585 	C$Battle.c$131$2_0$119	= .
                                    586 	.globl	C$Battle.c$131$2_0$119
                                    587 ;src\Battle.c:131: set_bkg_data(128, 31, Sis_Tiles); 
      0002C3 11r00r00         [12]  588 	ld	de, #_Sis_Tiles
      0002C6 D5               [16]  589 	push	de
      0002C7 21 80 1F         [12]  590 	ld	hl, #0x1f80
      0002CA E5               [16]  591 	push	hl
      0002CB CDr00r00         [24]  592 	call	_set_bkg_data
      0002CE E8 04            [16]  593 	add	sp, #4
                           0002D0   594 	C$Battle.c$132$2_0$119	= .
                                    595 	.globl	C$Battle.c$132$2_0$119
                                    596 ;src\Battle.c:132: set_bkg_tiles(7, 5, BigSis_MapWidth, BigSis_MapHeight, BigSis_Map); 
      0002D0 11r00r00         [12]  597 	ld	de, #_BigSis_Map
      0002D3 D5               [16]  598 	push	de
      0002D4 21 05 07         [12]  599 	ld	hl, #0x705
      0002D7 E5               [16]  600 	push	hl
      0002D8 21 07 05         [12]  601 	ld	hl, #0x507
      0002DB E5               [16]  602 	push	hl
      0002DC CDr00r00         [24]  603 	call	_set_bkg_tiles
      0002DF E8 06            [16]  604 	add	sp, #6
      0002E1 C3rF6r03         [16]  605 	jp	00156$
      0002E4                        606 00122$:
                           0002E4   607 	C$Battle.c$134$1_0$107	= .
                                    608 	.globl	C$Battle.c$134$1_0$107
                                    609 ;src\Battle.c:134: else if (index == 12)
      0002E4 FAr00r00         [16]  610 	ld	a, (#_index)
      0002E7 D6 0C            [ 8]  611 	sub	a, #0x0c
      0002E9 20 21            [12]  612 	jr	NZ, 00119$
                           0002EB   613 	C$Battle.c$136$2_0$120	= .
                                    614 	.globl	C$Battle.c$136$2_0$120
                                    615 ;src\Battle.c:136: set_bkg_data(128, 31, Sis_Tiles); 
      0002EB 11r00r00         [12]  616 	ld	de, #_Sis_Tiles
      0002EE D5               [16]  617 	push	de
      0002EF 21 80 1F         [12]  618 	ld	hl, #0x1f80
      0002F2 E5               [16]  619 	push	hl
      0002F3 CDr00r00         [24]  620 	call	_set_bkg_data
      0002F6 E8 04            [16]  621 	add	sp, #4
                           0002F8   622 	C$Battle.c$137$2_0$120	= .
                                    623 	.globl	C$Battle.c$137$2_0$120
                                    624 ;src\Battle.c:137: set_bkg_tiles(7, 5, MadSis_MapWidth, MadSis_MapHeight, MadSis_Map); 
      0002F8 11r00r00         [12]  625 	ld	de, #_MadSis_Map
      0002FB D5               [16]  626 	push	de
      0002FC 21 05 07         [12]  627 	ld	hl, #0x705
      0002FF E5               [16]  628 	push	hl
      000300 21 07 05         [12]  629 	ld	hl, #0x507
      000303 E5               [16]  630 	push	hl
      000304 CDr00r00         [24]  631 	call	_set_bkg_tiles
      000307 E8 06            [16]  632 	add	sp, #6
      000309 C3rF6r03         [16]  633 	jp	00156$
      00030C                        634 00119$:
                           00030C   635 	C$Battle.c$139$1_0$107	= .
                                    636 	.globl	C$Battle.c$139$1_0$107
                                    637 ;src\Battle.c:139: else if (index == 13)
      00030C FAr00r00         [16]  638 	ld	a, (#_index)
      00030F D6 0D            [ 8]  639 	sub	a, #0x0d
      000311 20 21            [12]  640 	jr	NZ, 00116$
                           000313   641 	C$Battle.c$141$2_0$121	= .
                                    642 	.globl	C$Battle.c$141$2_0$121
                                    643 ;src\Battle.c:141: set_bkg_data(128, 29, Experiment_Tiles);
      000313 11r00r00         [12]  644 	ld	de, #_Experiment_Tiles
      000316 D5               [16]  645 	push	de
      000317 21 80 1D         [12]  646 	ld	hl, #0x1d80
      00031A E5               [16]  647 	push	hl
      00031B CDr00r00         [24]  648 	call	_set_bkg_data
      00031E E8 04            [16]  649 	add	sp, #4
                           000320   650 	C$Battle.c$142$2_0$121	= .
                                    651 	.globl	C$Battle.c$142$2_0$121
                                    652 ;src\Battle.c:142: set_bkg_tiles(7, 5, Experiment_MapWidth, Experiment_MapHeight, Experiment_Map );
      000320 11r00r00         [12]  653 	ld	de, #_Experiment_Map
      000323 D5               [16]  654 	push	de
      000324 21 05 07         [12]  655 	ld	hl, #0x705
      000327 E5               [16]  656 	push	hl
      000328 21 07 05         [12]  657 	ld	hl, #0x507
      00032B E5               [16]  658 	push	hl
      00032C CDr00r00         [24]  659 	call	_set_bkg_tiles
      00032F E8 06            [16]  660 	add	sp, #6
      000331 C3rF6r03         [16]  661 	jp	00156$
      000334                        662 00116$:
                           000334   663 	C$Battle.c$144$1_0$107	= .
                                    664 	.globl	C$Battle.c$144$1_0$107
                                    665 ;src\Battle.c:144: else if (index == 14)
      000334 FAr00r00         [16]  666 	ld	a, (#_index)
      000337 D6 0E            [ 8]  667 	sub	a, #0x0e
      000339 20 21            [12]  668 	jr	NZ, 00113$
                           00033B   669 	C$Battle.c$146$2_0$122	= .
                                    670 	.globl	C$Battle.c$146$2_0$122
                                    671 ;src\Battle.c:146: set_bkg_data(128, 19, Ghost_Tiles);
      00033B 11r00r00         [12]  672 	ld	de, #_Ghost_Tiles
      00033E D5               [16]  673 	push	de
      00033F 21 80 13         [12]  674 	ld	hl, #0x1380
      000342 E5               [16]  675 	push	hl
      000343 CDr00r00         [24]  676 	call	_set_bkg_data
      000346 E8 04            [16]  677 	add	sp, #4
                           000348   678 	C$Battle.c$147$2_0$122	= .
                                    679 	.globl	C$Battle.c$147$2_0$122
                                    680 ;src\Battle.c:147: set_bkg_tiles(7, 5, Ghost_MapWidth, Ghost_MapHeight, Ghost_Map);
      000348 11r00r00         [12]  681 	ld	de, #_Ghost_Map
      00034B D5               [16]  682 	push	de
      00034C 21 04 05         [12]  683 	ld	hl, #0x504
      00034F E5               [16]  684 	push	hl
      000350 21 07 05         [12]  685 	ld	hl, #0x507
      000353 E5               [16]  686 	push	hl
      000354 CDr00r00         [24]  687 	call	_set_bkg_tiles
      000357 E8 06            [16]  688 	add	sp, #6
      000359 C3rF6r03         [16]  689 	jp	00156$
      00035C                        690 00113$:
                           00035C   691 	C$Battle.c$149$1_0$107	= .
                                    692 	.globl	C$Battle.c$149$1_0$107
                                    693 ;src\Battle.c:149: else if (index == 15)
      00035C FAr00r00         [16]  694 	ld	a, (#_index)
      00035F D6 0F            [ 8]  695 	sub	a, #0x0f
      000361 20 20            [12]  696 	jr	NZ, 00110$
                           000363   697 	C$Battle.c$151$2_0$123	= .
                                    698 	.globl	C$Battle.c$151$2_0$123
                                    699 ;src\Battle.c:151: set_bkg_data(128, 14, Saucer_Tiles);
      000363 11r00r00         [12]  700 	ld	de, #_Saucer_Tiles
      000366 D5               [16]  701 	push	de
      000367 21 80 0E         [12]  702 	ld	hl, #0xe80
      00036A E5               [16]  703 	push	hl
      00036B CDr00r00         [24]  704 	call	_set_bkg_data
      00036E E8 04            [16]  705 	add	sp, #4
                           000370   706 	C$Battle.c$152$2_0$123	= .
                                    707 	.globl	C$Battle.c$152$2_0$123
                                    708 ;src\Battle.c:152: set_bkg_tiles(7, 5, Saucer_MapWidth, Saucer_MapHeight, Ghost_Map);
      000370 11r00r00         [12]  709 	ld	de, #_Ghost_Map
      000373 D5               [16]  710 	push	de
      000374 21 05 03         [12]  711 	ld	hl, #0x305
      000377 E5               [16]  712 	push	hl
      000378 21 07 05         [12]  713 	ld	hl, #0x507
      00037B E5               [16]  714 	push	hl
      00037C CDr00r00         [24]  715 	call	_set_bkg_tiles
      00037F E8 06            [16]  716 	add	sp, #6
      000381 18 73            [12]  717 	jr	00156$
      000383                        718 00110$:
                           000383   719 	C$Battle.c$154$1_0$107	= .
                                    720 	.globl	C$Battle.c$154$1_0$107
                                    721 ;src\Battle.c:154: else if (index == 16)
      000383 FAr00r00         [16]  722 	ld	a, (#_index)
      000386 D6 10            [ 8]  723 	sub	a, #0x10
      000388 20 20            [12]  724 	jr	NZ, 00107$
                           00038A   725 	C$Battle.c$156$2_0$124	= .
                                    726 	.globl	C$Battle.c$156$2_0$124
                                    727 ;src\Battle.c:156: set_bkg_data(128, 20, SockHead_Tiles);
      00038A 11r00r00         [12]  728 	ld	de, #_SockHead_Tiles
      00038D D5               [16]  729 	push	de
      00038E 21 80 14         [12]  730 	ld	hl, #0x1480
      000391 E5               [16]  731 	push	hl
      000392 CDr00r00         [24]  732 	call	_set_bkg_data
      000395 E8 04            [16]  733 	add	sp, #4
                           000397   734 	C$Battle.c$157$2_0$124	= .
                                    735 	.globl	C$Battle.c$157$2_0$124
                                    736 ;src\Battle.c:157: set_bkg_tiles(7, 5, SockHead_MapWidth, SockHead_MapHeight, SockHead_Map);
      000397 11r00r00         [12]  737 	ld	de, #_SockHead_Map
      00039A D5               [16]  738 	push	de
      00039B 21 04 07         [12]  739 	ld	hl, #0x704
      00039E E5               [16]  740 	push	hl
      00039F 21 07 05         [12]  741 	ld	hl, #0x507
      0003A2 E5               [16]  742 	push	hl
      0003A3 CDr00r00         [24]  743 	call	_set_bkg_tiles
      0003A6 E8 06            [16]  744 	add	sp, #6
      0003A8 18 4C            [12]  745 	jr	00156$
      0003AA                        746 00107$:
                           0003AA   747 	C$Battle.c$159$1_0$107	= .
                                    748 	.globl	C$Battle.c$159$1_0$107
                                    749 ;src\Battle.c:159: else if (index == 17)
      0003AA FAr00r00         [16]  750 	ld	a, (#_index)
      0003AD D6 11            [ 8]  751 	sub	a, #0x11
      0003AF 20 20            [12]  752 	jr	NZ, 00104$
                           0003B1   753 	C$Battle.c$161$2_0$125	= .
                                    754 	.globl	C$Battle.c$161$2_0$125
                                    755 ;src\Battle.c:161: set_bkg_data(128, 26, Toby_Tiles);
      0003B1 11r00r00         [12]  756 	ld	de, #_Toby_Tiles
      0003B4 D5               [16]  757 	push	de
      0003B5 21 80 1A         [12]  758 	ld	hl, #0x1a80
      0003B8 E5               [16]  759 	push	hl
      0003B9 CDr00r00         [24]  760 	call	_set_bkg_data
      0003BC E8 04            [16]  761 	add	sp, #4
                           0003BE   762 	C$Battle.c$162$2_0$125	= .
                                    763 	.globl	C$Battle.c$162$2_0$125
                                    764 ;src\Battle.c:162: set_bkg_tiles(7, 5, Toby_MapWidth, Toby_MapHeight, Toby_Map);
      0003BE 11r00r00         [12]  765 	ld	de, #_Toby_Map
      0003C1 D5               [16]  766 	push	de
      0003C2 21 04 07         [12]  767 	ld	hl, #0x704
      0003C5 E5               [16]  768 	push	hl
      0003C6 21 07 05         [12]  769 	ld	hl, #0x507
      0003C9 E5               [16]  770 	push	hl
      0003CA CDr00r00         [24]  771 	call	_set_bkg_tiles
      0003CD E8 06            [16]  772 	add	sp, #6
      0003CF 18 25            [12]  773 	jr	00156$
      0003D1                        774 00104$:
                           0003D1   775 	C$Battle.c$164$1_0$107	= .
                                    776 	.globl	C$Battle.c$164$1_0$107
                                    777 ;src\Battle.c:164: else if (index == 18)
      0003D1 FAr00r00         [16]  778 	ld	a, (#_index)
      0003D4 D6 12            [ 8]  779 	sub	a, #0x12
      0003D6 20 1E            [12]  780 	jr	NZ, 00156$
                           0003D8   781 	C$Battle.c$166$2_0$126	= .
                                    782 	.globl	C$Battle.c$166$2_0$126
                                    783 ;src\Battle.c:166: set_bkg_data(128, 24, Drunk_Tiles);
      0003D8 11r00r00         [12]  784 	ld	de, #_Drunk_Tiles
      0003DB D5               [16]  785 	push	de
      0003DC 21 80 18         [12]  786 	ld	hl, #0x1880
      0003DF E5               [16]  787 	push	hl
      0003E0 CDr00r00         [24]  788 	call	_set_bkg_data
      0003E3 E8 04            [16]  789 	add	sp, #4
                           0003E5   790 	C$Battle.c$167$2_0$126	= .
                                    791 	.globl	C$Battle.c$167$2_0$126
                                    792 ;src\Battle.c:167: set_bkg_tiles(7, 5, Drunk_MapWidth, Drunk_MapHeight, Drunk_Map);
      0003E5 11r00r00         [12]  793 	ld	de, #_Drunk_Map
      0003E8 D5               [16]  794 	push	de
      0003E9 21 04 06         [12]  795 	ld	hl, #0x604
      0003EC E5               [16]  796 	push	hl
      0003ED 21 07 05         [12]  797 	ld	hl, #0x507
      0003F0 E5               [16]  798 	push	hl
      0003F1 CDr00r00         [24]  799 	call	_set_bkg_tiles
      0003F4 E8 06            [16]  800 	add	sp, #6
      0003F6                        801 00156$:
                           0003F6   802 	C$Battle.c$169$1_0$107	= .
                                    803 	.globl	C$Battle.c$169$1_0$107
                                    804 ;src\Battle.c:169: performantdelay(120);
      0003F6 3E 78            [ 8]  805 	ld	a, #0x78
      0003F8 CDr00r00         [24]  806 	call	_performantdelay
                                    807 ;C:/gbdk/include/gb/gb.h:1222: SCX_REG+=x, SCY_REG+=y;
      0003FB F0r00            [12]  808 	ldh	a, (_SCY_REG + 0)
      0003FD C6 28            [ 8]  809 	add	a, #0x28
      0003FF E0r00            [12]  810 	ldh	(_SCY_REG + 0), a
                           000401   811 	C$Battle.c$170$3_0$107	= .
                                    812 	.globl	C$Battle.c$170$3_0$107
                                    813 ;src\Battle.c:170: scroll_bkg(0, 40);
                           000401   814 	C$Battle.c$172$3_0$107	= .
                                    815 	.globl	C$Battle.c$172$3_0$107
                                    816 ;src\Battle.c:172: }
                           000401   817 	C$Battle.c$172$3_0$107	= .
                                    818 	.globl	C$Battle.c$172$3_0$107
                           000401   819 	XG$BattleSetup$0$0	= .
                                    820 	.globl	XG$BattleSetup$0$0
      000401 C9               [16]  821 	ret
                           000402   822 FBattle$__str_0$0_0$0 == .
      000402                        823 ___str_0:
      000402 4A 69 6D 20 43 72 6F   824 	.ascii "Jim Crow draws"
             77 20 64 72 61 77 73
      000410 00                     825 	.db 0x00
                           000411   826 FBattle$__str_1$0_0$0 == .
      000411                        827 ___str_1:
      000411 6E 65 61 72 2E         828 	.ascii "near."
      000416 00                     829 	.db 0x00
                           000417   830 FBattle$__str_2$0_0$0 == .
      000417                        831 ___str_2:
      000417 47 79 70 73 79 20 4D   832 	.ascii "Gypsy Moth draws"
             6F 74 68 20 64 72 61
             77 73
      000427 00                     833 	.db 0x00
                           000428   834 FBattle$__str_3$0_0$0 == .
      000428                        835 ___str_3:
      000428 57 61 6C 6C 79 20 62   836 	.ascii "Wally butts in."
             75 74 74 73 20 69 6E
             2E
      000437 00                     837 	.db 0x00
                           000438   838 FBattle$__str_4$0_0$0 == .
      000438                        839 ___str_4:
      000438 41 20 74 69 63 6B 20   840 	.ascii "A tick draws near."
             64 72 61 77 73 20 6E
             65 61 72 2E
      00044A 00                     841 	.db 0x00
                           00044B   842 FBattle$__str_5$0_0$0 == .
      00044B                        843 ___str_5:
      00044B 41 6E 20 4F 66 66 69   844 	.ascii "An Officer draws"
             63 65 72 20 64 72 61
             77 73
      00045B 00                     845 	.db 0x00
                           00045C   846 	G$BattleUpdate$0$0	= .
                                    847 	.globl	G$BattleUpdate$0$0
                           00045C   848 	C$Battle.c$174$3_0$133	= .
                                    849 	.globl	C$Battle.c$174$3_0$133
                                    850 ;src\Battle.c:174: uint8_t BattleUpdate()
                                    851 ;	---------------------------------
                                    852 ; Function BattleUpdate
                                    853 ; ---------------------------------
      00045C                        854 _BattleUpdate::
                           00045C   855 	C$Battle.c$176$1_0$133	= .
                                    856 	.globl	C$Battle.c$176$1_0$133
                                    857 ;src\Battle.c:176: if (joypadCurrent & J_SELECT)
      00045C FAr00r00         [16]  858 	ld	a, (#_joypadCurrent)
      00045F CB 77            [ 8]  859 	bit	6, a
                           000461   860 	C$Battle.c$178$2_0$134	= .
                                    861 	.globl	C$Battle.c$178$2_0$134
                                    862 ;src\Battle.c:178: return GAMETITLE;
                           000461   863 	C$Battle.c$182$2_0$135	= .
                                    864 	.globl	C$Battle.c$182$2_0$135
                                    865 ;src\Battle.c:182: return BATTLE;
      000461 3E 01            [ 8]  866 	ld	a, #0x01
      000463 C0               [20]  867 	ret	NZ
      000464 3E 05            [ 8]  868 	ld	a, #0x05
                           000466   869 	C$Battle.c$184$1_0$133	= .
                                    870 	.globl	C$Battle.c$184$1_0$133
                                    871 ;src\Battle.c:184: }
                           000466   872 	C$Battle.c$184$1_0$133	= .
                                    873 	.globl	C$Battle.c$184$1_0$133
                           000466   874 	XG$BattleUpdate$0$0	= .
                                    875 	.globl	XG$BattleUpdate$0$0
      000466 C9               [16]  876 	ret
                                    877 	.area _CODE
                                    878 	.area _INITIALIZER
                                    879 	.area _CABS (ABS)
