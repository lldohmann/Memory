                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.2 #13350 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module Battle
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _BattleUpdate
                                     12 	.globl _BattleSetup
                                     13 	.globl _InvertColor
                                     14 	.globl _fadeFromBlack
                                     15 	.globl _DrawNumber
                                     16 	.globl _performantdelay
                                     17 	.globl _set_bkg_tiles
                                     18 	.globl _set_bkg_data
                                     19 	.globl _cursor_y
                                     20 	.globl _cursor_x
                                     21 ;--------------------------------------------------------
                                     22 ; special function registers
                                     23 ;--------------------------------------------------------
                                     24 ;--------------------------------------------------------
                                     25 ; ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area _DATA
                           000000    28 G$cursor_x$0_0$0==.
      000000                         29 _cursor_x::
      000000                         30 	.ds 1
                           000001    31 G$cursor_y$0_0$0==.
      000001                         32 _cursor_y::
      000001                         33 	.ds 1
                                     34 ;--------------------------------------------------------
                                     35 ; ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area _INITIALIZED
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area _DABS (ABS)
                                     42 ;--------------------------------------------------------
                                     43 ; global & static initialisations
                                     44 ;--------------------------------------------------------
                                     45 	.area _HOME
                                     46 	.area _GSINIT
                                     47 	.area _GSFINAL
                                     48 	.area _GSINIT
                                     49 ;--------------------------------------------------------
                                     50 ; Home
                                     51 ;--------------------------------------------------------
                                     52 	.area _HOME
                                     53 	.area _HOME
                                     54 ;--------------------------------------------------------
                                     55 ; code
                                     56 ;--------------------------------------------------------
                                     57 	.area _CODE
                           000000    58 	G$BattleSetup$0$0	= .
                                     59 	.globl	G$BattleSetup$0$0
                           000000    60 	C$Battle.c$42$0_0$105	= .
                                     61 	.globl	C$Battle.c$42$0_0$105
                                     62 ;src\Battle.c:42: void BattleSetup()
                                     63 ;	---------------------------------
                                     64 ; Function BattleSetup
                                     65 ; ---------------------------------
      000000                         66 _BattleSetup::
                                     67 ;C:/gbdk/include/gb/gb.h:1208: SCX_REG=x, SCY_REG=y;
      000000 AF               [ 4]   68 	xor	a, a
      000001 E0r00            [12]   69 	ldh	(_SCX_REG + 0), a
      000003 AF               [ 4]   70 	xor	a, a
      000004 E0r00            [12]   71 	ldh	(_SCY_REG + 0), a
                           000006    72 	C$Battle.c$45$1_0$105	= .
                                     73 	.globl	C$Battle.c$45$1_0$105
                                     74 ;src\Battle.c:45: set_bkg_data(0, 53, FontTiles); // Load font and window tiles
      000006 11r00r00         [12]   75 	ld	de, #_FontTiles
      000009 D5               [16]   76 	push	de
      00000A 21 00 35         [12]   77 	ld	hl, #0x3500
      00000D E5               [16]   78 	push	hl
      00000E CDr00r00         [24]   79 	call	_set_bkg_data
      000011 E8 04            [16]   80 	add	sp, #4
                           000013    81 	C$Battle.c$46$1_0$105	= .
                                     82 	.globl	C$Battle.c$46$1_0$105
                                     83 ;src\Battle.c:46: set_bkg_tiles(0, 0, Battle_MapWidth, Battle_MapHeight, Battle_Map); // draw background window & text
      000013 11r00r00         [12]   84 	ld	de, #_Battle_Map
      000016 D5               [16]   85 	push	de
      000017 21 14 17         [12]   86 	ld	hl, #0x1714
      00001A E5               [16]   87 	push	hl
      00001B AF               [ 4]   88 	xor	a, a
      00001C 0F               [ 4]   89 	rrca
      00001D F5               [16]   90 	push	af
      00001E CDr00r00         [24]   91 	call	_set_bkg_tiles
      000021 E8 06            [16]   92 	add	sp, #6
                           000023    93 	C$Battle.c$48$1_0$105	= .
                                     94 	.globl	C$Battle.c$48$1_0$105
                                     95 ;src\Battle.c:48: DrawNumber(1, 14, 123456, 6);
      000023 3E 06            [ 8]   96 	ld	a, #0x06
      000025 F5               [16]   97 	push	af
      000026 33               [ 8]   98 	inc	sp
      000027 11 40 E2         [12]   99 	ld	de, #0xe240
      00002A D5               [16]  100 	push	de
      00002B 1E 0E            [ 8]  101 	ld	e, #0x0e
      00002D 3E 01            [ 8]  102 	ld	a, #0x01
      00002F CDr00r00         [24]  103 	call	_DrawNumber
                           000032   104 	C$Battle.c$49$1_0$105	= .
                                    105 	.globl	C$Battle.c$49$1_0$105
                                    106 ;src\Battle.c:49: DrawNumber(8, 14, 110, 3);
      000032 3E 03            [ 8]  107 	ld	a, #0x03
      000034 F5               [16]  108 	push	af
      000035 33               [ 8]  109 	inc	sp
      000036 11 6E 00         [12]  110 	ld	de, #0x006e
      000039 D5               [16]  111 	push	de
      00003A 1E 0E            [ 8]  112 	ld	e, #0x0e
      00003C 3E 08            [ 8]  113 	ld	a, #0x08
      00003E CDr00r00         [24]  114 	call	_DrawNumber
                           000041   115 	C$Battle.c$50$1_0$105	= .
                                    116 	.globl	C$Battle.c$50$1_0$105
                                    117 ;src\Battle.c:50: DrawNumber(13, 14, 70, 2);
      000041 3E 02            [ 8]  118 	ld	a, #0x02
      000043 F5               [16]  119 	push	af
      000044 33               [ 8]  120 	inc	sp
      000045 11 46 00         [12]  121 	ld	de, #0x0046
      000048 D5               [16]  122 	push	de
      000049 1E 0E            [ 8]  123 	ld	e, #0x0e
      00004B 3E 0D            [ 8]  124 	ld	a, #0x0d
      00004D CDr00r00         [24]  125 	call	_DrawNumber
                           000050   126 	C$Battle.c$51$1_0$105	= .
                                    127 	.globl	C$Battle.c$51$1_0$105
                                    128 ;src\Battle.c:51: DrawNumber(17, 14, 11, 2);
      000050 3E 02            [ 8]  129 	ld	a, #0x02
      000052 F5               [16]  130 	push	af
      000053 33               [ 8]  131 	inc	sp
      000054 11 0B 00         [12]  132 	ld	de, #0x000b
      000057 D5               [16]  133 	push	de
      000058 1E 0E            [ 8]  134 	ld	e, #0x0e
      00005A 3E 11            [ 8]  135 	ld	a, #0x11
      00005C CDr00r00         [24]  136 	call	_DrawNumber
                           00005F   137 	C$Battle.c$53$1_0$105	= .
                                    138 	.globl	C$Battle.c$53$1_0$105
                                    139 ;src\Battle.c:53: DrawNumber(1, 15, 123456, 6);
      00005F 3E 06            [ 8]  140 	ld	a, #0x06
      000061 F5               [16]  141 	push	af
      000062 33               [ 8]  142 	inc	sp
      000063 11 40 E2         [12]  143 	ld	de, #0xe240
      000066 D5               [16]  144 	push	de
      000067 1E 0F            [ 8]  145 	ld	e, #0x0f
      000069 3E 01            [ 8]  146 	ld	a, #0x01
      00006B CDr00r00         [24]  147 	call	_DrawNumber
                           00006E   148 	C$Battle.c$54$1_0$105	= .
                                    149 	.globl	C$Battle.c$54$1_0$105
                                    150 ;src\Battle.c:54: DrawNumber(9, 15, 80, 2);
      00006E 3E 02            [ 8]  151 	ld	a, #0x02
      000070 F5               [16]  152 	push	af
      000071 33               [ 8]  153 	inc	sp
      000072 11 50 00         [12]  154 	ld	de, #0x0050
      000075 D5               [16]  155 	push	de
      000076 1E 0F            [ 8]  156 	ld	e, #0x0f
      000078 3E 09            [ 8]  157 	ld	a, #0x09
      00007A CDr00r00         [24]  158 	call	_DrawNumber
                           00007D   159 	C$Battle.c$55$1_0$105	= .
                                    160 	.globl	C$Battle.c$55$1_0$105
                                    161 ;src\Battle.c:55: DrawNumber(13, 15, 33, 2);
      00007D 3E 02            [ 8]  162 	ld	a, #0x02
      00007F F5               [16]  163 	push	af
      000080 33               [ 8]  164 	inc	sp
      000081 11 21 00         [12]  165 	ld	de, #0x0021
      000084 D5               [16]  166 	push	de
      000085 1E 0F            [ 8]  167 	ld	e, #0x0f
      000087 3E 0D            [ 8]  168 	ld	a, #0x0d
      000089 CDr00r00         [24]  169 	call	_DrawNumber
                           00008C   170 	C$Battle.c$56$1_0$105	= .
                                    171 	.globl	C$Battle.c$56$1_0$105
                                    172 ;src\Battle.c:56: DrawNumber(17, 15, 11, 2);
      00008C 3E 02            [ 8]  173 	ld	a, #0x02
      00008E F5               [16]  174 	push	af
      00008F 33               [ 8]  175 	inc	sp
      000090 11 0B 00         [12]  176 	ld	de, #0x000b
      000093 D5               [16]  177 	push	de
      000094 1E 0F            [ 8]  178 	ld	e, #0x0f
      000096 3E 11            [ 8]  179 	ld	a, #0x11
      000098 CDr00r00         [24]  180 	call	_DrawNumber
                           00009B   181 	C$Battle.c$59$1_0$105	= .
                                    182 	.globl	C$Battle.c$59$1_0$105
                                    183 ;src\Battle.c:59: cursor_x = 8;
      00009B 21r00r00         [12]  184 	ld	hl, #_cursor_x
      00009E 36 08            [12]  185 	ld	(hl), #0x08
                           0000A0   186 	C$Battle.c$60$1_0$105	= .
                                    187 	.globl	C$Battle.c$60$1_0$105
                                    188 ;src\Battle.c:60: cursor_y = 144;
      0000A0 21r01r00         [12]  189 	ld	hl, #_cursor_y
      0000A3 36 90            [12]  190 	ld	(hl), #0x90
                           0000A5   191 	C$Battle.c$63$1_0$105	= .
                                    192 	.globl	C$Battle.c$63$1_0$105
                                    193 ;src\Battle.c:63: SHOW_BKG; 
      0000A5 F0r00            [12]  194 	ldh	a, (_LCDC_REG + 0)
      0000A7 F6 01            [ 8]  195 	or	a, #0x01
      0000A9 E0r00            [12]  196 	ldh	(_LCDC_REG + 0), a
                           0000AB   197 	C$Battle.c$64$1_0$105	= .
                                    198 	.globl	C$Battle.c$64$1_0$105
                                    199 ;src\Battle.c:64: fadeFromBlack(5);
      0000AB 3E 05            [ 8]  200 	ld	a, #0x05
      0000AD CDr00r00         [24]  201 	call	_fadeFromBlack
                           0000B0   202 	C$Battle.c$65$1_0$105	= .
                                    203 	.globl	C$Battle.c$65$1_0$105
                                    204 ;src\Battle.c:65: if (index == 0) // JIM
      0000B0 FAr00r00         [16]  205 	ld	a, (#_index)
      0000B3 B7               [ 4]  206 	or	a, a
      0000B4 20 21            [12]  207 	jr	NZ, 00155$
                           0000B6   208 	C$Battle.c$67$2_0$106	= .
                                    209 	.globl	C$Battle.c$67$2_0$106
                                    210 ;src\Battle.c:67: set_bkg_data(128, 23, Crow_Tiles); // init with crow monster
      0000B6 11r00r00         [12]  211 	ld	de, #_Crow_Tiles
      0000B9 D5               [16]  212 	push	de
      0000BA 21 80 17         [12]  213 	ld	hl, #0x1780
      0000BD E5               [16]  214 	push	hl
      0000BE CDr00r00         [24]  215 	call	_set_bkg_data
      0000C1 E8 04            [16]  216 	add	sp, #4
                           0000C3   217 	C$Battle.c$68$2_0$106	= .
                                    218 	.globl	C$Battle.c$68$2_0$106
                                    219 ;src\Battle.c:68: set_bkg_tiles(7, 5, Crow_MapWidth, Crow_MapHeight, Crow_Map); // draw Crow monster
      0000C3 11r00r00         [12]  220 	ld	de, #_Crow_Map
      0000C6 D5               [16]  221 	push	de
      0000C7 21 05 07         [12]  222 	ld	hl, #0x705
      0000CA E5               [16]  223 	push	hl
      0000CB 21 07 05         [12]  224 	ld	hl, #0x507
      0000CE E5               [16]  225 	push	hl
      0000CF CDr00r00         [24]  226 	call	_set_bkg_tiles
      0000D2 E8 06            [16]  227 	add	sp, #6
      0000D4 C3rA3r03         [16]  228 	jp	00156$
      0000D7                        229 00155$:
                           0000D7   230 	C$Battle.c$70$1_0$105	= .
                                    231 	.globl	C$Battle.c$70$1_0$105
                                    232 ;src\Battle.c:70: else if (index == 1) // GYPSY
      0000D7 FAr00r00         [16]  233 	ld	a, (#_index)
      0000DA 3D               [ 4]  234 	dec	a
      0000DB 20 21            [12]  235 	jr	NZ, 00152$
                           0000DD   236 	C$Battle.c$72$2_0$107	= .
                                    237 	.globl	C$Battle.c$72$2_0$107
                                    238 ;src\Battle.c:72: set_bkg_data(128, 29, GypsyTiles); 
      0000DD 11r00r00         [12]  239 	ld	de, #_GypsyTiles
      0000E0 D5               [16]  240 	push	de
      0000E1 21 80 1D         [12]  241 	ld	hl, #0x1d80
      0000E4 E5               [16]  242 	push	hl
      0000E5 CDr00r00         [24]  243 	call	_set_bkg_data
      0000E8 E8 04            [16]  244 	add	sp, #4
                           0000EA   245 	C$Battle.c$73$2_0$107	= .
                                    246 	.globl	C$Battle.c$73$2_0$107
                                    247 ;src\Battle.c:73: set_bkg_tiles(7, 5, Gypsy_MapWidth, Gypsy_MapHeight, Gypsy_Map); 
      0000EA 11r00r00         [12]  248 	ld	de, #_Gypsy_Map
      0000ED D5               [16]  249 	push	de
      0000EE 21 06 07         [12]  250 	ld	hl, #0x706
      0000F1 E5               [16]  251 	push	hl
      0000F2 21 07 05         [12]  252 	ld	hl, #0x507
      0000F5 E5               [16]  253 	push	hl
      0000F6 CDr00r00         [24]  254 	call	_set_bkg_tiles
      0000F9 E8 06            [16]  255 	add	sp, #6
      0000FB C3rA3r03         [16]  256 	jp	00156$
      0000FE                        257 00152$:
                           0000FE   258 	C$Battle.c$75$1_0$105	= .
                                    259 	.globl	C$Battle.c$75$1_0$105
                                    260 ;src\Battle.c:75: else if (index == 2) // WALLY
      0000FE FAr00r00         [16]  261 	ld	a, (#_index)
      000101 D6 02            [ 8]  262 	sub	a, #0x02
      000103 20 21            [12]  263 	jr	NZ, 00149$
                           000105   264 	C$Battle.c$77$2_0$108	= .
                                    265 	.globl	C$Battle.c$77$2_0$108
                                    266 ;src\Battle.c:77: set_bkg_data(128, 27, WallyTiles); 
      000105 11r00r00         [12]  267 	ld	de, #_WallyTiles
      000108 D5               [16]  268 	push	de
      000109 21 80 1B         [12]  269 	ld	hl, #0x1b80
      00010C E5               [16]  270 	push	hl
      00010D CDr00r00         [24]  271 	call	_set_bkg_data
      000110 E8 04            [16]  272 	add	sp, #4
                           000112   273 	C$Battle.c$78$2_0$108	= .
                                    274 	.globl	C$Battle.c$78$2_0$108
                                    275 ;src\Battle.c:78: set_bkg_tiles(7, 5, Gypsy_MapWidth, Gypsy_MapHeight, Gypsy_Map); 
      000112 11r00r00         [12]  276 	ld	de, #_Gypsy_Map
      000115 D5               [16]  277 	push	de
      000116 21 06 07         [12]  278 	ld	hl, #0x706
      000119 E5               [16]  279 	push	hl
      00011A 21 07 05         [12]  280 	ld	hl, #0x507
      00011D E5               [16]  281 	push	hl
      00011E CDr00r00         [24]  282 	call	_set_bkg_tiles
      000121 E8 06            [16]  283 	add	sp, #6
      000123 C3rA3r03         [16]  284 	jp	00156$
      000126                        285 00149$:
                           000126   286 	C$Battle.c$80$1_0$105	= .
                                    287 	.globl	C$Battle.c$80$1_0$105
                                    288 ;src\Battle.c:80: else if (index == 3) // TICK
      000126 FAr00r00         [16]  289 	ld	a, (#_index)
      000129 D6 03            [ 8]  290 	sub	a, #0x03
      00012B 20 21            [12]  291 	jr	NZ, 00146$
                           00012D   292 	C$Battle.c$82$2_0$109	= .
                                    293 	.globl	C$Battle.c$82$2_0$109
                                    294 ;src\Battle.c:82: set_bkg_data(128, 20, Tick_Tiles); 
      00012D 11r00r00         [12]  295 	ld	de, #_Tick_Tiles
      000130 D5               [16]  296 	push	de
      000131 21 80 14         [12]  297 	ld	hl, #0x1480
      000134 E5               [16]  298 	push	hl
      000135 CDr00r00         [24]  299 	call	_set_bkg_data
      000138 E8 04            [16]  300 	add	sp, #4
                           00013A   301 	C$Battle.c$83$2_0$109	= .
                                    302 	.globl	C$Battle.c$83$2_0$109
                                    303 ;src\Battle.c:83: set_bkg_tiles(7, 5, Tick_MapWidth, Tick_MapHeight, Tick_Map); 
      00013A 11r00r00         [12]  304 	ld	de, #_Tick_Map
      00013D D5               [16]  305 	push	de
      00013E 21 05 05         [12]  306 	ld	hl, #0x505
      000141 E5               [16]  307 	push	hl
      000142 21 07 05         [12]  308 	ld	hl, #0x507
      000145 E5               [16]  309 	push	hl
      000146 CDr00r00         [24]  310 	call	_set_bkg_tiles
      000149 E8 06            [16]  311 	add	sp, #6
      00014B C3rA3r03         [16]  312 	jp	00156$
      00014E                        313 00146$:
                           00014E   314 	C$Battle.c$85$1_0$105	= .
                                    315 	.globl	C$Battle.c$85$1_0$105
                                    316 ;src\Battle.c:85: else if (index == 4) // OFFICER
      00014E FAr00r00         [16]  317 	ld	a, (#_index)
      000151 D6 04            [ 8]  318 	sub	a, #0x04
      000153 20 21            [12]  319 	jr	NZ, 00143$
                           000155   320 	C$Battle.c$87$2_0$110	= .
                                    321 	.globl	C$Battle.c$87$2_0$110
                                    322 ;src\Battle.c:87: set_bkg_data(128, 39, Cop_Tiles); 
      000155 11r00r00         [12]  323 	ld	de, #_Cop_Tiles
      000158 D5               [16]  324 	push	de
      000159 21 80 27         [12]  325 	ld	hl, #0x2780
      00015C E5               [16]  326 	push	hl
      00015D CDr00r00         [24]  327 	call	_set_bkg_data
      000160 E8 04            [16]  328 	add	sp, #4
                           000162   329 	C$Battle.c$88$2_0$110	= .
                                    330 	.globl	C$Battle.c$88$2_0$110
                                    331 ;src\Battle.c:88: set_bkg_tiles(7, 5, Officer_MapWidth, Officer_MapHeight, Officer_Map); 
      000162 11r00r00         [12]  332 	ld	de, #_Officer_Map
      000165 D5               [16]  333 	push	de
      000166 21 06 07         [12]  334 	ld	hl, #0x706
      000169 E5               [16]  335 	push	hl
      00016A 21 07 05         [12]  336 	ld	hl, #0x507
      00016D E5               [16]  337 	push	hl
      00016E CDr00r00         [24]  338 	call	_set_bkg_tiles
      000171 E8 06            [16]  339 	add	sp, #6
      000173 C3rA3r03         [16]  340 	jp	00156$
      000176                        341 00143$:
                           000176   342 	C$Battle.c$90$1_0$105	= .
                                    343 	.globl	C$Battle.c$90$1_0$105
                                    344 ;src\Battle.c:90: else if (index == 5) // POLICE
      000176 FAr00r00         [16]  345 	ld	a, (#_index)
      000179 D6 05            [ 8]  346 	sub	a, #0x05
      00017B 20 21            [12]  347 	jr	NZ, 00140$
                           00017D   348 	C$Battle.c$92$2_0$111	= .
                                    349 	.globl	C$Battle.c$92$2_0$111
                                    350 ;src\Battle.c:92: set_bkg_data(128, 39, Cop_Tiles); 
      00017D 11r00r00         [12]  351 	ld	de, #_Cop_Tiles
      000180 D5               [16]  352 	push	de
      000181 21 80 27         [12]  353 	ld	hl, #0x2780
      000184 E5               [16]  354 	push	hl
      000185 CDr00r00         [24]  355 	call	_set_bkg_data
      000188 E8 04            [16]  356 	add	sp, #4
                           00018A   357 	C$Battle.c$93$2_0$111	= .
                                    358 	.globl	C$Battle.c$93$2_0$111
                                    359 ;src\Battle.c:93: set_bkg_tiles(7, 5, Police_MapWidth, Police_MapHeight, Police_Map); 
      00018A 11r00r00         [12]  360 	ld	de, #_Police_Map
      00018D D5               [16]  361 	push	de
      00018E 21 06 07         [12]  362 	ld	hl, #0x706
      000191 E5               [16]  363 	push	hl
      000192 21 07 05         [12]  364 	ld	hl, #0x507
      000195 E5               [16]  365 	push	hl
      000196 CDr00r00         [24]  366 	call	_set_bkg_tiles
      000199 E8 06            [16]  367 	add	sp, #6
      00019B C3rA3r03         [16]  368 	jp	00156$
      00019E                        369 00140$:
                           00019E   370 	C$Battle.c$95$1_0$105	= .
                                    371 	.globl	C$Battle.c$95$1_0$105
                                    372 ;src\Battle.c:95: else if (index == 6) // SHERIFF
      00019E FAr00r00         [16]  373 	ld	a, (#_index)
      0001A1 D6 06            [ 8]  374 	sub	a, #0x06
      0001A3 20 21            [12]  375 	jr	NZ, 00137$
                           0001A5   376 	C$Battle.c$97$2_0$112	= .
                                    377 	.globl	C$Battle.c$97$2_0$112
                                    378 ;src\Battle.c:97: set_bkg_data(128, 39, Cop_Tiles); 
      0001A5 11r00r00         [12]  379 	ld	de, #_Cop_Tiles
      0001A8 D5               [16]  380 	push	de
      0001A9 21 80 27         [12]  381 	ld	hl, #0x2780
      0001AC E5               [16]  382 	push	hl
      0001AD CDr00r00         [24]  383 	call	_set_bkg_data
      0001B0 E8 04            [16]  384 	add	sp, #4
                           0001B2   385 	C$Battle.c$98$2_0$112	= .
                                    386 	.globl	C$Battle.c$98$2_0$112
                                    387 ;src\Battle.c:98: set_bkg_tiles(7, 5, Sheriff_MapWidth, Sheriff_MapHeight, Sheriff_Map); 
      0001B2 11r00r00         [12]  388 	ld	de, #_Sheriff_Map
      0001B5 D5               [16]  389 	push	de
      0001B6 21 06 07         [12]  390 	ld	hl, #0x706
      0001B9 E5               [16]  391 	push	hl
      0001BA 21 07 05         [12]  392 	ld	hl, #0x507
      0001BD E5               [16]  393 	push	hl
      0001BE CDr00r00         [24]  394 	call	_set_bkg_tiles
      0001C1 E8 06            [16]  395 	add	sp, #6
      0001C3 C3rA3r03         [16]  396 	jp	00156$
      0001C6                        397 00137$:
                           0001C6   398 	C$Battle.c$100$1_0$105	= .
                                    399 	.globl	C$Battle.c$100$1_0$105
                                    400 ;src\Battle.c:100: else if (index == 7) // CHIEF
      0001C6 FAr00r00         [16]  401 	ld	a, (#_index)
      0001C9 D6 07            [ 8]  402 	sub	a, #0x07
      0001CB 20 21            [12]  403 	jr	NZ, 00134$
                           0001CD   404 	C$Battle.c$102$2_0$113	= .
                                    405 	.globl	C$Battle.c$102$2_0$113
                                    406 ;src\Battle.c:102: set_bkg_data(128, 39, Cop_Tiles); 
      0001CD 11r00r00         [12]  407 	ld	de, #_Cop_Tiles
      0001D0 D5               [16]  408 	push	de
      0001D1 21 80 27         [12]  409 	ld	hl, #0x2780
      0001D4 E5               [16]  410 	push	hl
      0001D5 CDr00r00         [24]  411 	call	_set_bkg_data
      0001D8 E8 04            [16]  412 	add	sp, #4
                           0001DA   413 	C$Battle.c$103$2_0$113	= .
                                    414 	.globl	C$Battle.c$103$2_0$113
                                    415 ;src\Battle.c:103: set_bkg_tiles(7, 5, Chief_MapWidth, Chief_MapHeight, Chief_Map); 
      0001DA 11r00r00         [12]  416 	ld	de, #_Chief_Map
      0001DD D5               [16]  417 	push	de
      0001DE 21 06 07         [12]  418 	ld	hl, #0x706
      0001E1 E5               [16]  419 	push	hl
      0001E2 21 07 05         [12]  420 	ld	hl, #0x507
      0001E5 E5               [16]  421 	push	hl
      0001E6 CDr00r00         [24]  422 	call	_set_bkg_tiles
      0001E9 E8 06            [16]  423 	add	sp, #6
      0001EB C3rA3r03         [16]  424 	jp	00156$
      0001EE                        425 00134$:
                           0001EE   426 	C$Battle.c$105$1_0$105	= .
                                    427 	.globl	C$Battle.c$105$1_0$105
                                    428 ;src\Battle.c:105: else if (index == 8)
      0001EE FAr00r00         [16]  429 	ld	a, (#_index)
      0001F1 D6 08            [ 8]  430 	sub	a, #0x08
      0001F3 20 24            [12]  431 	jr	NZ, 00131$
                           0001F5   432 	C$Battle.c$107$2_0$114	= .
                                    433 	.globl	C$Battle.c$107$2_0$114
                                    434 ;src\Battle.c:107: InvertColor();
      0001F5 CDr00r00         [24]  435 	call	_InvertColor
                           0001F8   436 	C$Battle.c$108$2_0$114	= .
                                    437 	.globl	C$Battle.c$108$2_0$114
                                    438 ;src\Battle.c:108: set_bkg_data(128, 30, Man_Tiles); 
      0001F8 11r00r00         [12]  439 	ld	de, #_Man_Tiles
      0001FB D5               [16]  440 	push	de
      0001FC 21 80 1E         [12]  441 	ld	hl, #0x1e80
      0001FF E5               [16]  442 	push	hl
      000200 CDr00r00         [24]  443 	call	_set_bkg_data
      000203 E8 04            [16]  444 	add	sp, #4
                           000205   445 	C$Battle.c$109$2_0$114	= .
                                    446 	.globl	C$Battle.c$109$2_0$114
                                    447 ;src\Battle.c:109: set_bkg_tiles(7, 5, Man_MapWidth, Man_MapHeight, Man_Map); 
      000205 11r00r00         [12]  448 	ld	de, #_Man_Map
      000208 D5               [16]  449 	push	de
      000209 21 06 06         [12]  450 	ld	hl, #0x606
      00020C E5               [16]  451 	push	hl
      00020D 21 07 05         [12]  452 	ld	hl, #0x507
      000210 E5               [16]  453 	push	hl
      000211 CDr00r00         [24]  454 	call	_set_bkg_tiles
      000214 E8 06            [16]  455 	add	sp, #6
      000216 C3rA3r03         [16]  456 	jp	00156$
      000219                        457 00131$:
                           000219   458 	C$Battle.c$111$1_0$105	= .
                                    459 	.globl	C$Battle.c$111$1_0$105
                                    460 ;src\Battle.c:111: else if (index == 9)
      000219 FAr00r00         [16]  461 	ld	a, (#_index)
      00021C D6 09            [ 8]  462 	sub	a, #0x09
      00021E 20 21            [12]  463 	jr	NZ, 00128$
                           000220   464 	C$Battle.c$113$2_0$115	= .
                                    465 	.globl	C$Battle.c$113$2_0$115
                                    466 ;src\Battle.c:113: set_bkg_data(128, 26, Car_Tiles); 
      000220 11r00r00         [12]  467 	ld	de, #_Car_Tiles
      000223 D5               [16]  468 	push	de
      000224 21 80 1A         [12]  469 	ld	hl, #0x1a80
      000227 E5               [16]  470 	push	hl
      000228 CDr00r00         [24]  471 	call	_set_bkg_data
      00022B E8 04            [16]  472 	add	sp, #4
                           00022D   473 	C$Battle.c$114$2_0$115	= .
                                    474 	.globl	C$Battle.c$114$2_0$115
                                    475 ;src\Battle.c:114: set_bkg_tiles(7, 5, Car_MapWidth, Car_MapHeight, Car_Map); 
      00022D 11r00r00         [12]  476 	ld	de, #_Car_Map
      000230 D5               [16]  477 	push	de
      000231 21 06 05         [12]  478 	ld	hl, #0x506
      000234 E5               [16]  479 	push	hl
      000235 21 07 05         [12]  480 	ld	hl, #0x507
      000238 E5               [16]  481 	push	hl
      000239 CDr00r00         [24]  482 	call	_set_bkg_tiles
      00023C E8 06            [16]  483 	add	sp, #6
      00023E C3rA3r03         [16]  484 	jp	00156$
      000241                        485 00128$:
                           000241   486 	C$Battle.c$116$1_0$105	= .
                                    487 	.globl	C$Battle.c$116$1_0$105
                                    488 ;src\Battle.c:116: else if (index == 10)
      000241 FAr00r00         [16]  489 	ld	a, (#_index)
      000244 D6 0A            [ 8]  490 	sub	a, #0x0a
      000246 20 21            [12]  491 	jr	NZ, 00125$
                           000248   492 	C$Battle.c$118$2_0$116	= .
                                    493 	.globl	C$Battle.c$118$2_0$116
                                    494 ;src\Battle.c:118: set_bkg_data(128, 46, Semi_Tiles); 
      000248 11r00r00         [12]  495 	ld	de, #_Semi_Tiles
      00024B D5               [16]  496 	push	de
      00024C 21 80 2E         [12]  497 	ld	hl, #0x2e80
      00024F E5               [16]  498 	push	hl
      000250 CDr00r00         [24]  499 	call	_set_bkg_data
      000253 E8 04            [16]  500 	add	sp, #4
                           000255   501 	C$Battle.c$119$2_0$116	= .
                                    502 	.globl	C$Battle.c$119$2_0$116
                                    503 ;src\Battle.c:119: set_bkg_tiles(7, 5, Semi_MapWidth, Semi_MapHeight, Semi_Map); 
      000255 11r00r00         [12]  504 	ld	de, #_Semi_Map
      000258 D5               [16]  505 	push	de
      000259 21 06 08         [12]  506 	ld	hl, #0x806
      00025C E5               [16]  507 	push	hl
      00025D 21 07 05         [12]  508 	ld	hl, #0x507
      000260 E5               [16]  509 	push	hl
      000261 CDr00r00         [24]  510 	call	_set_bkg_tiles
      000264 E8 06            [16]  511 	add	sp, #6
      000266 C3rA3r03         [16]  512 	jp	00156$
      000269                        513 00125$:
                           000269   514 	C$Battle.c$121$1_0$105	= .
                                    515 	.globl	C$Battle.c$121$1_0$105
                                    516 ;src\Battle.c:121: else if (index == 11)
      000269 FAr00r00         [16]  517 	ld	a, (#_index)
      00026C D6 0B            [ 8]  518 	sub	a, #0x0b
      00026E 20 21            [12]  519 	jr	NZ, 00122$
                           000270   520 	C$Battle.c$123$2_0$117	= .
                                    521 	.globl	C$Battle.c$123$2_0$117
                                    522 ;src\Battle.c:123: set_bkg_data(128, 31, Sis_Tiles); 
      000270 11r00r00         [12]  523 	ld	de, #_Sis_Tiles
      000273 D5               [16]  524 	push	de
      000274 21 80 1F         [12]  525 	ld	hl, #0x1f80
      000277 E5               [16]  526 	push	hl
      000278 CDr00r00         [24]  527 	call	_set_bkg_data
      00027B E8 04            [16]  528 	add	sp, #4
                           00027D   529 	C$Battle.c$124$2_0$117	= .
                                    530 	.globl	C$Battle.c$124$2_0$117
                                    531 ;src\Battle.c:124: set_bkg_tiles(7, 5, BigSis_MapWidth, BigSis_MapHeight, BigSis_Map); 
      00027D 11r00r00         [12]  532 	ld	de, #_BigSis_Map
      000280 D5               [16]  533 	push	de
      000281 21 05 07         [12]  534 	ld	hl, #0x705
      000284 E5               [16]  535 	push	hl
      000285 21 07 05         [12]  536 	ld	hl, #0x507
      000288 E5               [16]  537 	push	hl
      000289 CDr00r00         [24]  538 	call	_set_bkg_tiles
      00028C E8 06            [16]  539 	add	sp, #6
      00028E C3rA3r03         [16]  540 	jp	00156$
      000291                        541 00122$:
                           000291   542 	C$Battle.c$126$1_0$105	= .
                                    543 	.globl	C$Battle.c$126$1_0$105
                                    544 ;src\Battle.c:126: else if (index == 12)
      000291 FAr00r00         [16]  545 	ld	a, (#_index)
      000294 D6 0C            [ 8]  546 	sub	a, #0x0c
      000296 20 21            [12]  547 	jr	NZ, 00119$
                           000298   548 	C$Battle.c$128$2_0$118	= .
                                    549 	.globl	C$Battle.c$128$2_0$118
                                    550 ;src\Battle.c:128: set_bkg_data(128, 31, Sis_Tiles); 
      000298 11r00r00         [12]  551 	ld	de, #_Sis_Tiles
      00029B D5               [16]  552 	push	de
      00029C 21 80 1F         [12]  553 	ld	hl, #0x1f80
      00029F E5               [16]  554 	push	hl
      0002A0 CDr00r00         [24]  555 	call	_set_bkg_data
      0002A3 E8 04            [16]  556 	add	sp, #4
                           0002A5   557 	C$Battle.c$129$2_0$118	= .
                                    558 	.globl	C$Battle.c$129$2_0$118
                                    559 ;src\Battle.c:129: set_bkg_tiles(7, 5, MadSis_MapWidth, MadSis_MapHeight, MadSis_Map); 
      0002A5 11r00r00         [12]  560 	ld	de, #_MadSis_Map
      0002A8 D5               [16]  561 	push	de
      0002A9 21 05 07         [12]  562 	ld	hl, #0x705
      0002AC E5               [16]  563 	push	hl
      0002AD 21 07 05         [12]  564 	ld	hl, #0x507
      0002B0 E5               [16]  565 	push	hl
      0002B1 CDr00r00         [24]  566 	call	_set_bkg_tiles
      0002B4 E8 06            [16]  567 	add	sp, #6
      0002B6 C3rA3r03         [16]  568 	jp	00156$
      0002B9                        569 00119$:
                           0002B9   570 	C$Battle.c$131$1_0$105	= .
                                    571 	.globl	C$Battle.c$131$1_0$105
                                    572 ;src\Battle.c:131: else if (index == 13)
      0002B9 FAr00r00         [16]  573 	ld	a, (#_index)
      0002BC D6 0D            [ 8]  574 	sub	a, #0x0d
      0002BE 20 21            [12]  575 	jr	NZ, 00116$
                           0002C0   576 	C$Battle.c$133$2_0$119	= .
                                    577 	.globl	C$Battle.c$133$2_0$119
                                    578 ;src\Battle.c:133: set_bkg_data(128, 29, Experiment_Tiles);
      0002C0 11r00r00         [12]  579 	ld	de, #_Experiment_Tiles
      0002C3 D5               [16]  580 	push	de
      0002C4 21 80 1D         [12]  581 	ld	hl, #0x1d80
      0002C7 E5               [16]  582 	push	hl
      0002C8 CDr00r00         [24]  583 	call	_set_bkg_data
      0002CB E8 04            [16]  584 	add	sp, #4
                           0002CD   585 	C$Battle.c$134$2_0$119	= .
                                    586 	.globl	C$Battle.c$134$2_0$119
                                    587 ;src\Battle.c:134: set_bkg_tiles(7, 5, Experiment_MapWidth, Experiment_MapHeight, Experiment_Map );
      0002CD 11r00r00         [12]  588 	ld	de, #_Experiment_Map
      0002D0 D5               [16]  589 	push	de
      0002D1 21 05 07         [12]  590 	ld	hl, #0x705
      0002D4 E5               [16]  591 	push	hl
      0002D5 21 07 05         [12]  592 	ld	hl, #0x507
      0002D8 E5               [16]  593 	push	hl
      0002D9 CDr00r00         [24]  594 	call	_set_bkg_tiles
      0002DC E8 06            [16]  595 	add	sp, #6
      0002DE C3rA3r03         [16]  596 	jp	00156$
      0002E1                        597 00116$:
                           0002E1   598 	C$Battle.c$136$1_0$105	= .
                                    599 	.globl	C$Battle.c$136$1_0$105
                                    600 ;src\Battle.c:136: else if (index == 14)
      0002E1 FAr00r00         [16]  601 	ld	a, (#_index)
      0002E4 D6 0E            [ 8]  602 	sub	a, #0x0e
      0002E6 20 21            [12]  603 	jr	NZ, 00113$
                           0002E8   604 	C$Battle.c$138$2_0$120	= .
                                    605 	.globl	C$Battle.c$138$2_0$120
                                    606 ;src\Battle.c:138: set_bkg_data(128, 19, Ghost_Tiles);
      0002E8 11r00r00         [12]  607 	ld	de, #_Ghost_Tiles
      0002EB D5               [16]  608 	push	de
      0002EC 21 80 13         [12]  609 	ld	hl, #0x1380
      0002EF E5               [16]  610 	push	hl
      0002F0 CDr00r00         [24]  611 	call	_set_bkg_data
      0002F3 E8 04            [16]  612 	add	sp, #4
                           0002F5   613 	C$Battle.c$139$2_0$120	= .
                                    614 	.globl	C$Battle.c$139$2_0$120
                                    615 ;src\Battle.c:139: set_bkg_tiles(7, 5, Ghost_MapWidth, Ghost_MapHeight, Ghost_Map);
      0002F5 11r00r00         [12]  616 	ld	de, #_Ghost_Map
      0002F8 D5               [16]  617 	push	de
      0002F9 21 04 05         [12]  618 	ld	hl, #0x504
      0002FC E5               [16]  619 	push	hl
      0002FD 21 07 05         [12]  620 	ld	hl, #0x507
      000300 E5               [16]  621 	push	hl
      000301 CDr00r00         [24]  622 	call	_set_bkg_tiles
      000304 E8 06            [16]  623 	add	sp, #6
      000306 C3rA3r03         [16]  624 	jp	00156$
      000309                        625 00113$:
                           000309   626 	C$Battle.c$141$1_0$105	= .
                                    627 	.globl	C$Battle.c$141$1_0$105
                                    628 ;src\Battle.c:141: else if (index == 15)
      000309 FAr00r00         [16]  629 	ld	a, (#_index)
      00030C D6 0F            [ 8]  630 	sub	a, #0x0f
      00030E 20 20            [12]  631 	jr	NZ, 00110$
                           000310   632 	C$Battle.c$143$2_0$121	= .
                                    633 	.globl	C$Battle.c$143$2_0$121
                                    634 ;src\Battle.c:143: set_bkg_data(128, 14, Saucer_Tiles);
      000310 11r00r00         [12]  635 	ld	de, #_Saucer_Tiles
      000313 D5               [16]  636 	push	de
      000314 21 80 0E         [12]  637 	ld	hl, #0xe80
      000317 E5               [16]  638 	push	hl
      000318 CDr00r00         [24]  639 	call	_set_bkg_data
      00031B E8 04            [16]  640 	add	sp, #4
                           00031D   641 	C$Battle.c$144$2_0$121	= .
                                    642 	.globl	C$Battle.c$144$2_0$121
                                    643 ;src\Battle.c:144: set_bkg_tiles(7, 5, Saucer_MapWidth, Saucer_MapHeight, Ghost_Map);
      00031D 11r00r00         [12]  644 	ld	de, #_Ghost_Map
      000320 D5               [16]  645 	push	de
      000321 21 05 03         [12]  646 	ld	hl, #0x305
      000324 E5               [16]  647 	push	hl
      000325 21 07 05         [12]  648 	ld	hl, #0x507
      000328 E5               [16]  649 	push	hl
      000329 CDr00r00         [24]  650 	call	_set_bkg_tiles
      00032C E8 06            [16]  651 	add	sp, #6
      00032E 18 73            [12]  652 	jr	00156$
      000330                        653 00110$:
                           000330   654 	C$Battle.c$146$1_0$105	= .
                                    655 	.globl	C$Battle.c$146$1_0$105
                                    656 ;src\Battle.c:146: else if (index == 16)
      000330 FAr00r00         [16]  657 	ld	a, (#_index)
      000333 D6 10            [ 8]  658 	sub	a, #0x10
      000335 20 20            [12]  659 	jr	NZ, 00107$
                           000337   660 	C$Battle.c$148$2_0$122	= .
                                    661 	.globl	C$Battle.c$148$2_0$122
                                    662 ;src\Battle.c:148: set_bkg_data(128, 20, SockHead_Tiles);
      000337 11r00r00         [12]  663 	ld	de, #_SockHead_Tiles
      00033A D5               [16]  664 	push	de
      00033B 21 80 14         [12]  665 	ld	hl, #0x1480
      00033E E5               [16]  666 	push	hl
      00033F CDr00r00         [24]  667 	call	_set_bkg_data
      000342 E8 04            [16]  668 	add	sp, #4
                           000344   669 	C$Battle.c$149$2_0$122	= .
                                    670 	.globl	C$Battle.c$149$2_0$122
                                    671 ;src\Battle.c:149: set_bkg_tiles(7, 5, SockHead_MapWidth, SockHead_MapHeight, SockHead_Map);
      000344 11r00r00         [12]  672 	ld	de, #_SockHead_Map
      000347 D5               [16]  673 	push	de
      000348 21 04 07         [12]  674 	ld	hl, #0x704
      00034B E5               [16]  675 	push	hl
      00034C 21 07 05         [12]  676 	ld	hl, #0x507
      00034F E5               [16]  677 	push	hl
      000350 CDr00r00         [24]  678 	call	_set_bkg_tiles
      000353 E8 06            [16]  679 	add	sp, #6
      000355 18 4C            [12]  680 	jr	00156$
      000357                        681 00107$:
                           000357   682 	C$Battle.c$151$1_0$105	= .
                                    683 	.globl	C$Battle.c$151$1_0$105
                                    684 ;src\Battle.c:151: else if (index == 17)
      000357 FAr00r00         [16]  685 	ld	a, (#_index)
      00035A D6 11            [ 8]  686 	sub	a, #0x11
      00035C 20 20            [12]  687 	jr	NZ, 00104$
                           00035E   688 	C$Battle.c$153$2_0$123	= .
                                    689 	.globl	C$Battle.c$153$2_0$123
                                    690 ;src\Battle.c:153: set_bkg_data(128, 26, Toby_Tiles);
      00035E 11r00r00         [12]  691 	ld	de, #_Toby_Tiles
      000361 D5               [16]  692 	push	de
      000362 21 80 1A         [12]  693 	ld	hl, #0x1a80
      000365 E5               [16]  694 	push	hl
      000366 CDr00r00         [24]  695 	call	_set_bkg_data
      000369 E8 04            [16]  696 	add	sp, #4
                           00036B   697 	C$Battle.c$154$2_0$123	= .
                                    698 	.globl	C$Battle.c$154$2_0$123
                                    699 ;src\Battle.c:154: set_bkg_tiles(7, 5, Toby_MapWidth, Toby_MapHeight, Toby_Map);
      00036B 11r00r00         [12]  700 	ld	de, #_Toby_Map
      00036E D5               [16]  701 	push	de
      00036F 21 04 07         [12]  702 	ld	hl, #0x704
      000372 E5               [16]  703 	push	hl
      000373 21 07 05         [12]  704 	ld	hl, #0x507
      000376 E5               [16]  705 	push	hl
      000377 CDr00r00         [24]  706 	call	_set_bkg_tiles
      00037A E8 06            [16]  707 	add	sp, #6
      00037C 18 25            [12]  708 	jr	00156$
      00037E                        709 00104$:
                           00037E   710 	C$Battle.c$156$1_0$105	= .
                                    711 	.globl	C$Battle.c$156$1_0$105
                                    712 ;src\Battle.c:156: else if (index == 18)
      00037E FAr00r00         [16]  713 	ld	a, (#_index)
      000381 D6 12            [ 8]  714 	sub	a, #0x12
      000383 20 1E            [12]  715 	jr	NZ, 00156$
                           000385   716 	C$Battle.c$158$2_0$124	= .
                                    717 	.globl	C$Battle.c$158$2_0$124
                                    718 ;src\Battle.c:158: set_bkg_data(128, 24, Drunk_Tiles);
      000385 11r00r00         [12]  719 	ld	de, #_Drunk_Tiles
      000388 D5               [16]  720 	push	de
      000389 21 80 18         [12]  721 	ld	hl, #0x1880
      00038C E5               [16]  722 	push	hl
      00038D CDr00r00         [24]  723 	call	_set_bkg_data
      000390 E8 04            [16]  724 	add	sp, #4
                           000392   725 	C$Battle.c$159$2_0$124	= .
                                    726 	.globl	C$Battle.c$159$2_0$124
                                    727 ;src\Battle.c:159: set_bkg_tiles(7, 5, Drunk_MapWidth, Drunk_MapHeight, Drunk_Map);
      000392 11r00r00         [12]  728 	ld	de, #_Drunk_Map
      000395 D5               [16]  729 	push	de
      000396 21 04 06         [12]  730 	ld	hl, #0x604
      000399 E5               [16]  731 	push	hl
      00039A 21 07 05         [12]  732 	ld	hl, #0x507
      00039D E5               [16]  733 	push	hl
      00039E CDr00r00         [24]  734 	call	_set_bkg_tiles
      0003A1 E8 06            [16]  735 	add	sp, #6
      0003A3                        736 00156$:
                           0003A3   737 	C$Battle.c$161$1_0$105	= .
                                    738 	.globl	C$Battle.c$161$1_0$105
                                    739 ;src\Battle.c:161: performantdelay(120);
      0003A3 3E 78            [ 8]  740 	ld	a, #0x78
      0003A5 CDr00r00         [24]  741 	call	_performantdelay
                                    742 ;C:/gbdk/include/gb/gb.h:1222: SCX_REG+=x, SCY_REG+=y;
      0003A8 F0r00            [12]  743 	ldh	a, (_SCY_REG + 0)
      0003AA C6 28            [ 8]  744 	add	a, #0x28
      0003AC E0r00            [12]  745 	ldh	(_SCY_REG + 0), a
                           0003AE   746 	C$Battle.c$162$3_0$105	= .
                                    747 	.globl	C$Battle.c$162$3_0$105
                                    748 ;src\Battle.c:162: scroll_bkg(0, 40);
                           0003AE   749 	C$Battle.c$163$3_0$105	= .
                                    750 	.globl	C$Battle.c$163$3_0$105
                                    751 ;src\Battle.c:163: }
                           0003AE   752 	C$Battle.c$163$3_0$105	= .
                                    753 	.globl	C$Battle.c$163$3_0$105
                           0003AE   754 	XG$BattleSetup$0$0	= .
                                    755 	.globl	XG$BattleSetup$0$0
      0003AE C9               [16]  756 	ret
                           0003AF   757 	G$BattleUpdate$0$0	= .
                                    758 	.globl	G$BattleUpdate$0$0
                           0003AF   759 	C$Battle.c$165$3_0$131	= .
                                    760 	.globl	C$Battle.c$165$3_0$131
                                    761 ;src\Battle.c:165: uint8_t BattleUpdate()
                                    762 ;	---------------------------------
                                    763 ; Function BattleUpdate
                                    764 ; ---------------------------------
      0003AF                        765 _BattleUpdate::
                           0003AF   766 	C$Battle.c$167$1_0$131	= .
                                    767 	.globl	C$Battle.c$167$1_0$131
                                    768 ;src\Battle.c:167: if (joypadCurrent & J_SELECT)
      0003AF FAr00r00         [16]  769 	ld	a, (#_joypadCurrent)
      0003B2 CB 77            [ 8]  770 	bit	6, a
                           0003B4   771 	C$Battle.c$169$2_0$132	= .
                                    772 	.globl	C$Battle.c$169$2_0$132
                                    773 ;src\Battle.c:169: return GAMETITLE;
                           0003B4   774 	C$Battle.c$172$2_0$133	= .
                                    775 	.globl	C$Battle.c$172$2_0$133
                                    776 ;src\Battle.c:172: return BATTLE;
      0003B4 3E 01            [ 8]  777 	ld	a, #0x01
      0003B6 C0               [20]  778 	ret	NZ
      0003B7 3E 05            [ 8]  779 	ld	a, #0x05
                           0003B9   780 	C$Battle.c$174$1_0$131	= .
                                    781 	.globl	C$Battle.c$174$1_0$131
                                    782 ;src\Battle.c:174: }
                           0003B9   783 	C$Battle.c$174$1_0$131	= .
                                    784 	.globl	C$Battle.c$174$1_0$131
                           0003B9   785 	XG$BattleUpdate$0$0	= .
                                    786 	.globl	XG$BattleUpdate$0$0
      0003B9 C9               [16]  787 	ret
                                    788 	.area _CODE
                                    789 	.area _INITIALIZER
                                    790 	.area _CABS (ABS)
