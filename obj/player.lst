                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.2 #13350 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module player
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _check_map
                                     12 	.globl _returnCollisionValue
                                     13 	.globl _joypad
                                     14 	.globl _mouse_metasprites
                                     15 	.globl _mouse_right1
                                     16 	.globl _mouse_right0
                                     17 	.globl _mouse_up
                                     18 	.globl _mouse_down
                                     19 	.globl _PlayerUpdate
                                     20 	.globl _DrawPlayer
                                     21 ;--------------------------------------------------------
                                     22 ; special function registers
                                     23 ;--------------------------------------------------------
                                     24 ;--------------------------------------------------------
                                     25 ; ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area _DATA
                                     28 ;--------------------------------------------------------
                                     29 ; ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area _INITIALIZED
                                     32 ;--------------------------------------------------------
                                     33 ; absolute external ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area _DABS (ABS)
                                     36 ;--------------------------------------------------------
                                     37 ; global & static initialisations
                                     38 ;--------------------------------------------------------
                                     39 	.area _HOME
                                     40 	.area _GSINIT
                                     41 	.area _GSFINAL
                                     42 	.area _GSINIT
                                     43 ;--------------------------------------------------------
                                     44 ; Home
                                     45 ;--------------------------------------------------------
                                     46 	.area _HOME
                                     47 	.area _HOME
                                     48 ;--------------------------------------------------------
                                     49 ; code
                                     50 ;--------------------------------------------------------
                                     51 	.area _CODE
                           000000    52 	G$check_map$0$0	= .
                                     53 	.globl	G$check_map$0$0
                           000000    54 	C$player.c$37$0_0$144	= .
                                     55 	.globl	C$player.c$37$0_0$144
                                     56 ;src\player.c:37: char check_map(uint8_t map_num, uint8_t x_pos, uint8_t y_pos)
                                     57 ;	---------------------------------
                                     58 ; Function check_map
                                     59 ; ---------------------------------
      000000                         60 _check_map::
      000000 4F               [ 4]   61 	ld	c, a
      000001 43               [ 4]   62 	ld	b, e
                           000002    63 	C$player.c$39$1_0$144	= .
                                     64 	.globl	C$player.c$39$1_0$144
                                     65 ;src\player.c:39: if (map_num == 0) // HOME
      000002 79               [ 4]   66 	ld	a, c
      000003 B7               [ 4]   67 	or	a, a
      000004 20 07            [12]   68 	jr	NZ, 00103$
                           000006    69 	C$player.c$41$2_0$145	= .
                                     70 	.globl	C$player.c$41$2_0$145
                                     71 ;src\player.c:41: returnCollisionValue(x_pos, y_pos);
      000006 F8 02            [12]   72 	ldhl	sp,	#2
      000008 5E               [ 8]   73 	ld	e, (hl)
      000009 78               [ 4]   74 	ld	a, b
      00000A CDr00r00         [24]   75 	call	_returnCollisionValue
      00000D                         76 00103$:
                           00000D    77 	C$player.c$43$1_0$144	= .
                                     78 	.globl	C$player.c$43$1_0$144
                                     79 ;src\player.c:43: } 
      00000D E1               [12]   80 	pop	hl
      00000E 33               [ 8]   81 	inc	sp
      00000F E9               [ 4]   82 	jp	(hl)
                           000010    83 G$mouse_down$0_0$0 == .
      000010                         84 _mouse_down:
      000010 F0                      85 	.db #0xf0	; -16
      000011 F8                      86 	.db #0xf8	; -8
      000012 00                      87 	.db #0x00	; 0
      000013 00                      88 	.db #0x00	; 0
      000014 00                      89 	.db #0x00	;  0
      000015 08                      90 	.db #0x08	;  8
      000016 02                      91 	.db #0x02	; 2
      000017 00                      92 	.db #0x00	; 0
      000018 80                      93 	.db #0x80	; -128
      000019 00                      94 	.db #0x00	;  0
      00001A 00                      95 	.db #0x00	; 0
      00001B 00                      96 	.db #0x00	; 0
                           00001C    97 G$mouse_up$0_0$0 == .
      00001C                         98 _mouse_up:
      00001C F0                      99 	.db #0xf0	; -16
      00001D F8                     100 	.db #0xf8	; -8
      00001E 0C                     101 	.db #0x0c	; 12
      00001F 00                     102 	.db #0x00	; 0
      000020 00                     103 	.db #0x00	;  0
      000021 08                     104 	.db #0x08	;  8
      000022 0E                     105 	.db #0x0e	; 14
      000023 00                     106 	.db #0x00	; 0
      000024 80                     107 	.db #0x80	; -128
      000025 00                     108 	.db #0x00	;  0
      000026 00                     109 	.db #0x00	; 0
      000027 00                     110 	.db #0x00	; 0
                           000028   111 G$mouse_right0$0_0$0 == .
      000028                        112 _mouse_right0:
      000028 F0                     113 	.db #0xf0	; -16
      000029 F8                     114 	.db #0xf8	; -8
      00002A 04                     115 	.db #0x04	; 4
      00002B 00                     116 	.db #0x00	; 0
      00002C 00                     117 	.db #0x00	;  0
      00002D 08                     118 	.db #0x08	;  8
      00002E 06                     119 	.db #0x06	; 6
      00002F 00                     120 	.db #0x00	; 0
      000030 80                     121 	.db #0x80	; -128
      000031 00                     122 	.db #0x00	;  0
      000032 00                     123 	.db #0x00	; 0
      000033 00                     124 	.db #0x00	; 0
                           000034   125 G$mouse_right1$0_0$0 == .
      000034                        126 _mouse_right1:
      000034 F0                     127 	.db #0xf0	; -16
      000035 F8                     128 	.db #0xf8	; -8
      000036 08                     129 	.db #0x08	; 8
      000037 00                     130 	.db #0x00	; 0
      000038 00                     131 	.db #0x00	;  0
      000039 08                     132 	.db #0x08	;  8
      00003A 0A                     133 	.db #0x0a	; 10
      00003B 00                     134 	.db #0x00	; 0
      00003C 80                     135 	.db #0x80	; -128
      00003D 00                     136 	.db #0x00	;  0
      00003E 00                     137 	.db #0x00	; 0
      00003F 00                     138 	.db #0x00	; 0
                           000040   139 G$mouse_metasprites$0_0$0 == .
      000040                        140 _mouse_metasprites:
      000040r10r00                  141 	.dw _mouse_down
      000042r1Cr00                  142 	.dw _mouse_up
      000044r28r00                  143 	.dw _mouse_right0
      000046r34r00                  144 	.dw _mouse_right1
                           000048   145 	G$PlayerUpdate$0$0	= .
                                    146 	.globl	G$PlayerUpdate$0$0
                           000048   147 	C$player.c$45$1_0$147	= .
                                    148 	.globl	C$player.c$45$1_0$147
                                    149 ;src\player.c:45: void PlayerUpdate(struct player *ptr)
                                    150 ;	---------------------------------
                                    151 ; Function PlayerUpdate
                                    152 ; ---------------------------------
      000048                        153 _PlayerUpdate::
      000048 4B               [ 4]  154 	ld	c, e
      000049 42               [ 4]  155 	ld	b, d
                           00004A   156 	C$player.c$48$1_0$147	= .
                                    157 	.globl	C$player.c$48$1_0$147
                                    158 ;src\player.c:48: switch (ptr->playerState)
      00004A 21 0B 00         [12]  159 	ld	hl, #0x000b
      00004D 09               [ 8]  160 	add	hl, bc
      00004E 7E               [ 8]  161 	ld	a, (hl)
      00004F B7               [ 4]  162 	or	a, a
      000050 C0               [20]  163 	ret	NZ
                           000051   164 	C$player.c$51$2_0$148	= .
                                    165 	.globl	C$player.c$51$2_0$148
                                    166 ;src\player.c:51: joypadPrevious = joypadCurrent;
      000051 FAr00r00         [16]  167 	ld	a, (#_joypadCurrent)
      000054 EAr00r00         [16]  168 	ld	(#_joypadPrevious),a
                           000057   169 	C$player.c$52$2_0$148	= .
                                    170 	.globl	C$player.c$52$2_0$148
                                    171 ;src\player.c:52: joypadCurrent = joypad();
      000057 CDr00r00         [24]  172 	call	_joypad
      00005A 21r00r00         [12]  173 	ld	hl, #_joypadCurrent
      00005D 77               [ 8]  174 	ld	(hl), a
                           00005E   175 	C$player.c$51$1_0$147	= .
                                    176 	.globl	C$player.c$51$1_0$147
                                    177 ;src\player.c:51: joypadPrevious = joypadCurrent;
      00005E 5E               [ 8]  178 	ld	e, (hl)
                           00005F   179 	C$player.c$57$1_0$147	= .
                                    180 	.globl	C$player.c$57$1_0$147
                                    181 ;src\player.c:57: ptr->playerDirection = up;
      00005F 21 0A 00         [12]  182 	ld	hl, #0x000a
      000062 09               [ 8]  183 	add	hl, bc
                           000063   184 	C$player.c$53$2_0$148	= .
                                    185 	.globl	C$player.c$53$2_0$148
                                    186 ;src\player.c:53: if (joypadCurrent & J_UP)
      000063 CB 53            [ 8]  187 	bit	2, e
      000065 28 03            [12]  188 	jr	Z, 00111$
                           000067   189 	C$player.c$57$3_0$149	= .
                                    190 	.globl	C$player.c$57$3_0$149
                                    191 ;src\player.c:57: ptr->playerDirection = up;
      000067 36 01            [12]  192 	ld	(hl), #0x01
      000069 C9               [16]  193 	ret
      00006A                        194 00111$:
                           00006A   195 	C$player.c$59$2_0$148	= .
                                    196 	.globl	C$player.c$59$2_0$148
                                    197 ;src\player.c:59: else if (joypadCurrent & J_DOWN)
      00006A CB 5B            [ 8]  198 	bit	3, e
      00006C 28 03            [12]  199 	jr	Z, 00108$
                           00006E   200 	C$player.c$62$3_0$150	= .
                                    201 	.globl	C$player.c$62$3_0$150
                                    202 ;src\player.c:62: ptr->playerDirection = down;
      00006E 36 00            [12]  203 	ld	(hl), #0x00
      000070 C9               [16]  204 	ret
      000071                        205 00108$:
                           000071   206 	C$player.c$64$2_0$148	= .
                                    207 	.globl	C$player.c$64$2_0$148
                                    208 ;src\player.c:64: else if (joypadCurrent & J_RIGHT)
      000071 CB 43            [ 8]  209 	bit	0, e
      000073 28 03            [12]  210 	jr	Z, 00105$
                           000075   211 	C$player.c$67$3_0$151	= .
                                    212 	.globl	C$player.c$67$3_0$151
                                    213 ;src\player.c:67: ptr->playerDirection = right;
      000075 36 02            [12]  214 	ld	(hl), #0x02
      000077 C9               [16]  215 	ret
      000078                        216 00105$:
                           000078   217 	C$player.c$69$2_0$148	= .
                                    218 	.globl	C$player.c$69$2_0$148
                                    219 ;src\player.c:69: else if (joypadCurrent & J_LEFT)
      000078 CB 4B            [ 8]  220 	bit	1, e
      00007A C8               [20]  221 	ret	Z
                           00007B   222 	C$player.c$72$3_0$152	= .
                                    223 	.globl	C$player.c$72$3_0$152
                                    224 ;src\player.c:72: ptr->playerDirection = left;
      00007B 36 03            [12]  225 	ld	(hl), #0x03
                           00007D   226 	C$player.c$78$1_0$147	= .
                                    227 	.globl	C$player.c$78$1_0$147
                                    228 ;src\player.c:78: }
                           00007D   229 	C$player.c$79$1_0$147	= .
                                    230 	.globl	C$player.c$79$1_0$147
                                    231 ;src\player.c:79: }
                           00007D   232 	C$player.c$79$1_0$147	= .
                                    233 	.globl	C$player.c$79$1_0$147
                           00007D   234 	XG$PlayerUpdate$0$0	= .
                                    235 	.globl	XG$PlayerUpdate$0$0
      00007D C9               [16]  236 	ret
                           00007E   237 	G$DrawPlayer$0$0	= .
                                    238 	.globl	G$DrawPlayer$0$0
                           00007E   239 	C$player.c$81$1_0$154	= .
                                    240 	.globl	C$player.c$81$1_0$154
                                    241 ;src\player.c:81: void DrawPlayer(struct player *ptr)
                                    242 ;	---------------------------------
                                    243 ; Function DrawPlayer
                                    244 ; ---------------------------------
      00007E                        245 _DrawPlayer::
      00007E E8 FD            [16]  246 	add	sp, #-3
                           000080   247 	C$player.c$85$1_0$154	= .
                                    248 	.globl	C$player.c$85$1_0$154
                                    249 ;src\player.c:85: switch (ptr->playerDirection)
      000080 21 0A 00         [12]  250 	ld	hl, #0x000a
      000083 19               [ 8]  251 	add	hl, de
      000084 7E               [ 8]  252 	ld	a, (hl)
      000085 F8 00            [12]  253 	ldhl	sp,	#0
      000087 77               [ 8]  254 	ld	(hl), a
                           000088   255 	C$player.c$88$1_0$154	= .
                                    256 	.globl	C$player.c$88$1_0$154
                                    257 ;src\player.c:88: move_metasprite(mouse_metasprites[1], 0, 0, ptr->x, ptr->y);
      000088 4B               [ 4]  258 	ld	c, e
      000089 42               [ 4]  259 	ld	b, d
      00008A 03               [ 8]  260 	inc	bc
      00008B 03               [ 8]  261 	inc	bc
      00008C 1A               [ 8]  262 	ld	a, (de)
      00008D F8 02            [12]  263 	ldhl	sp,	#2
      00008F 32               [ 8]  264 	ld	(hl-), a
      000090 0A               [ 8]  265 	ld	a, (bc)
                           000091   266 	C$player.c$85$1_0$154	= .
                                    267 	.globl	C$player.c$85$1_0$154
                                    268 ;src\player.c:85: switch (ptr->playerDirection)
      000091 32               [ 8]  269 	ld	(hl-), a
      000092 7E               [ 8]  270 	ld	a, (hl)
      000093 B7               [ 4]  271 	or	a, a
      000094 28 3B            [12]  272 	jr	Z, 00102$
      000096 F8 00            [12]  273 	ldhl	sp,	#0
      000098 7E               [ 8]  274 	ld	a, (hl)
      000099 3D               [ 4]  275 	dec	a
      00009A 28 11            [12]  276 	jr	Z, 00101$
      00009C F8 00            [12]  277 	ldhl	sp,	#0
      00009E 7E               [ 8]  278 	ld	a, (hl)
      00009F D6 02            [ 8]  279 	sub	a, #0x02
      0000A1 28 4F            [12]  280 	jr	Z, 00103$
      0000A3 F8 00            [12]  281 	ldhl	sp,	#0
      0000A5 7E               [ 8]  282 	ld	a, (hl)
      0000A6 D6 03            [ 8]  283 	sub	a, #0x03
      0000A8 28 6B            [12]  284 	jr	Z, 00104$
      0000AA C3r3Br01         [16]  285 	jp	00105$
                           0000AD   286 	C$player.c$87$2_0$155	= .
                                    287 	.globl	C$player.c$87$2_0$155
                                    288 ;src\player.c:87: case up:
      0000AD                        289 00101$:
                                    290 ;src\player.c:88: move_metasprite(mouse_metasprites[1], 0, 0, ptr->x, ptr->y);
      0000AD F8 01            [12]  291 	ldhl	sp,	#1
      0000AF 2A               [ 8]  292 	ld	a, (hl+)
      0000B0 47               [ 4]  293 	ld	b, a
      0000B1 4E               [ 8]  294 	ld	c, (hl)
      0000B2 21r43r00         [12]  295 	ld	hl, #(_mouse_metasprites + 2) + 1
      0000B5 3A               [ 8]  296 	ld	a,	(hl-)
                                    297 ;	spillPairReg hl
                                    298 ;C:/gbdk/include/gb/metasprites.h:140: __current_metasprite = metasprite;
      0000B6 5E               [ 8]  299 	ld	e, (hl)
      0000B7 57               [ 4]  300 	ld	d, a
      0000B8 21r00r00         [12]  301 	ld	hl, #___current_metasprite
      0000BB 7B               [ 4]  302 	ld	a, e
      0000BC 22               [ 8]  303 	ld	(hl+), a
      0000BD 72               [ 8]  304 	ld	(hl), d
                                    305 ;C:/gbdk/include/gb/metasprites.h:141: __current_base_tile = base_tile;
      0000BE 21r00r00         [12]  306 	ld	hl, #___current_base_tile
      0000C1 36 00            [12]  307 	ld	(hl), #0x00
                                    308 ;C:/gbdk/include/gb/metasprites.h:142: return __move_metasprite(base_sprite, x, y);
      0000C3 C5               [16]  309 	push	bc
      0000C4 33               [ 8]  310 	inc	sp
      0000C5 61               [ 4]  311 	ld	h, c
      0000C6 2E 00            [ 8]  312 	ld	l, #0x00
      0000C8 E5               [16]  313 	push	hl
      0000C9 CDr00r00         [24]  314 	call	___move_metasprite
      0000CC E8 03            [16]  315 	add	sp, #3
                           0000CE   316 	C$player.c$89$2_0$155	= .
                                    317 	.globl	C$player.c$89$2_0$155
                                    318 ;src\player.c:89: break;
      0000CE C3r5Fr01         [16]  319 	jp	00112$
                           0000D1   320 	C$player.c$90$2_0$155	= .
                                    321 	.globl	C$player.c$90$2_0$155
                                    322 ;src\player.c:90: case down:
      0000D1                        323 00102$:
                                    324 ;src\player.c:91: move_metasprite(mouse_metasprites[0], 0, 0, ptr->x, ptr->y);
      0000D1 21r40r00         [12]  325 	ld	hl, #_mouse_metasprites
      0000D4 2A               [ 8]  326 	ld	a, (hl+)
      0000D5 4F               [ 4]  327 	ld	c, a
      0000D6 7E               [ 8]  328 	ld	a, (hl)
                                    329 ;C:/gbdk/include/gb/metasprites.h:140: __current_metasprite = metasprite;
      0000D7 21r00r00         [12]  330 	ld	hl, #___current_metasprite
      0000DA 71               [ 8]  331 	ld	(hl), c
      0000DB 23               [ 8]  332 	inc	hl
      0000DC 77               [ 8]  333 	ld	(hl), a
                                    334 ;C:/gbdk/include/gb/metasprites.h:141: __current_base_tile = base_tile;
      0000DD 21r00r00         [12]  335 	ld	hl, #___current_base_tile
      0000E0 36 00            [12]  336 	ld	(hl), #0x00
                                    337 ;C:/gbdk/include/gb/metasprites.h:142: return __move_metasprite(base_sprite, x, y);
      0000E2 F8 01            [12]  338 	ldhl	sp,	#1
      0000E4 2A               [ 8]  339 	ld	a, (hl+)
      0000E5 F5               [16]  340 	push	af
      0000E6 33               [ 8]  341 	inc	sp
      0000E7 66               [ 8]  342 	ld	h, (hl)
      0000E8 2E 00            [ 8]  343 	ld	l, #0x00
      0000EA E5               [16]  344 	push	hl
      0000EB CDr00r00         [24]  345 	call	___move_metasprite
      0000EE E8 03            [16]  346 	add	sp, #3
                           0000F0   347 	C$player.c$92$2_0$155	= .
                                    348 	.globl	C$player.c$92$2_0$155
                                    349 ;src\player.c:92: break;
      0000F0 18 6D            [12]  350 	jr	00112$
                           0000F2   351 	C$player.c$93$2_0$155	= .
                                    352 	.globl	C$player.c$93$2_0$155
                                    353 ;src\player.c:93: case right:
      0000F2                        354 00103$:
                                    355 ;src\player.c:94: move_metasprite(mouse_metasprites[3], 0, 0, ptr->x, ptr->y);
      0000F2 F8 01            [12]  356 	ldhl	sp,	#1
      0000F4 2A               [ 8]  357 	ld	a, (hl+)
      0000F5 47               [ 4]  358 	ld	b, a
      0000F6 4E               [ 8]  359 	ld	c, (hl)
      0000F7 21r47r00         [12]  360 	ld	hl, #(_mouse_metasprites + 6) + 1
      0000FA 3A               [ 8]  361 	ld	a,	(hl-)
                                    362 ;	spillPairReg hl
                                    363 ;C:/gbdk/include/gb/metasprites.h:140: __current_metasprite = metasprite;
      0000FB 5E               [ 8]  364 	ld	e, (hl)
      0000FC 57               [ 4]  365 	ld	d, a
      0000FD 21r00r00         [12]  366 	ld	hl, #___current_metasprite
      000100 7B               [ 4]  367 	ld	a, e
      000101 22               [ 8]  368 	ld	(hl+), a
      000102 72               [ 8]  369 	ld	(hl), d
                                    370 ;C:/gbdk/include/gb/metasprites.h:141: __current_base_tile = base_tile;
      000103 21r00r00         [12]  371 	ld	hl, #___current_base_tile
      000106 36 00            [12]  372 	ld	(hl), #0x00
                                    373 ;C:/gbdk/include/gb/metasprites.h:142: return __move_metasprite(base_sprite, x, y);
      000108 C5               [16]  374 	push	bc
      000109 33               [ 8]  375 	inc	sp
      00010A 61               [ 4]  376 	ld	h, c
      00010B 2E 00            [ 8]  377 	ld	l, #0x00
      00010D E5               [16]  378 	push	hl
      00010E CDr00r00         [24]  379 	call	___move_metasprite
      000111 E8 03            [16]  380 	add	sp, #3
                           000113   381 	C$player.c$95$2_0$155	= .
                                    382 	.globl	C$player.c$95$2_0$155
                                    383 ;src\player.c:95: break;
      000113 18 4A            [12]  384 	jr	00112$
                           000115   385 	C$player.c$96$2_0$155	= .
                                    386 	.globl	C$player.c$96$2_0$155
                                    387 ;src\player.c:96: case left:
      000115                        388 00104$:
                                    389 ;src\player.c:97: move_metasprite_vflip(mouse_metasprites[2], 0, 0, ptr->x, ptr->y);
      000115 F8 01            [12]  390 	ldhl	sp,	#1
      000117 2A               [ 8]  391 	ld	a, (hl+)
      000118 47               [ 4]  392 	ld	b, a
      000119 4E               [ 8]  393 	ld	c, (hl)
      00011A 21r45r00         [12]  394 	ld	hl, #(_mouse_metasprites + 4) + 1
      00011D 3A               [ 8]  395 	ld	a,	(hl-)
                                    396 ;	spillPairReg hl
                                    397 ;C:/gbdk/include/gb/metasprites.h:169: __current_metasprite = metasprite;
      00011E 5E               [ 8]  398 	ld	e, (hl)
      00011F 57               [ 4]  399 	ld	d, a
      000120 21r00r00         [12]  400 	ld	hl, #___current_metasprite
      000123 7B               [ 4]  401 	ld	a, e
      000124 22               [ 8]  402 	ld	(hl+), a
      000125 72               [ 8]  403 	ld	(hl), d
                                    404 ;C:/gbdk/include/gb/metasprites.h:170: __current_base_tile = base_tile;
      000126 21r00r00         [12]  405 	ld	hl, #___current_base_tile
      000129 36 00            [12]  406 	ld	(hl), #0x00
                                    407 ;C:/gbdk/include/gb/metasprites.h:171: return __move_metasprite_vflip(base_sprite, x - 8, y);
      00012B 79               [ 4]  408 	ld	a, c
      00012C C6 F8            [ 8]  409 	add	a, #0xf8
      00012E C5               [16]  410 	push	bc
      00012F 33               [ 8]  411 	inc	sp
      000130 67               [ 4]  412 	ld	h, a
      000131 2E 00            [ 8]  413 	ld	l, #0x00
      000133 E5               [16]  414 	push	hl
      000134 CDr00r00         [24]  415 	call	___move_metasprite_vflip
      000137 E8 03            [16]  416 	add	sp, #3
                           000139   417 	C$player.c$98$2_0$155	= .
                                    418 	.globl	C$player.c$98$2_0$155
                                    419 ;src\player.c:98: break;
      000139 18 24            [12]  420 	jr	00112$
                           00013B   421 	C$player.c$99$2_0$155	= .
                                    422 	.globl	C$player.c$99$2_0$155
                                    423 ;src\player.c:99: default:
      00013B                        424 00105$:
                                    425 ;src\player.c:100: move_metasprite_vflip(mouse_metasprites[2], 0, 0, ptr->x, ptr->y);
      00013B F8 01            [12]  426 	ldhl	sp,	#1
      00013D 2A               [ 8]  427 	ld	a, (hl+)
      00013E 47               [ 4]  428 	ld	b, a
      00013F 4E               [ 8]  429 	ld	c, (hl)
      000140 21r45r00         [12]  430 	ld	hl, #(_mouse_metasprites + 4) + 1
      000143 3A               [ 8]  431 	ld	a,	(hl-)
                                    432 ;	spillPairReg hl
                                    433 ;C:/gbdk/include/gb/metasprites.h:169: __current_metasprite = metasprite;
      000144 5E               [ 8]  434 	ld	e, (hl)
      000145 57               [ 4]  435 	ld	d, a
      000146 21r00r00         [12]  436 	ld	hl, #___current_metasprite
      000149 7B               [ 4]  437 	ld	a, e
      00014A 22               [ 8]  438 	ld	(hl+), a
      00014B 72               [ 8]  439 	ld	(hl), d
                                    440 ;C:/gbdk/include/gb/metasprites.h:170: __current_base_tile = base_tile;
      00014C 21r00r00         [12]  441 	ld	hl, #___current_base_tile
      00014F 36 00            [12]  442 	ld	(hl), #0x00
                                    443 ;C:/gbdk/include/gb/metasprites.h:171: return __move_metasprite_vflip(base_sprite, x - 8, y);
      000151 79               [ 4]  444 	ld	a, c
      000152 C6 F8            [ 8]  445 	add	a, #0xf8
      000154 C5               [16]  446 	push	bc
      000155 33               [ 8]  447 	inc	sp
      000156 67               [ 4]  448 	ld	h, a
      000157 2E 00            [ 8]  449 	ld	l, #0x00
      000159 E5               [16]  450 	push	hl
      00015A CDr00r00         [24]  451 	call	___move_metasprite_vflip
      00015D E8 03            [16]  452 	add	sp, #3
                           00015F   453 	C$player.c$102$1_0$154	= .
                                    454 	.globl	C$player.c$102$1_0$154
                                    455 ;src\player.c:102: }
      00015F                        456 00112$:
                           00015F   457 	C$player.c$103$1_0$154	= .
                                    458 	.globl	C$player.c$103$1_0$154
                                    459 ;src\player.c:103: }
      00015F E8 03            [16]  460 	add	sp, #3
                           000161   461 	C$player.c$103$1_0$154	= .
                                    462 	.globl	C$player.c$103$1_0$154
                           000161   463 	XG$DrawPlayer$0$0	= .
                                    464 	.globl	XG$DrawPlayer$0$0
      000161 C9               [16]  465 	ret
                                    466 	.area _CODE
                                    467 	.area _INITIALIZER
                                    468 	.area _CABS (ABS)
