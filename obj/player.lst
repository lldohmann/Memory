                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.2 #13350 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module player
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _joypad
                                     12 	.globl _mouse_metasprites
                                     13 	.globl _mouse_right1
                                     14 	.globl _mouse_right0
                                     15 	.globl _mouse_up
                                     16 	.globl _mouse_down
                                     17 	.globl _PlayerUpdate
                                     18 	.globl _DrawPlayer
                                     19 ;--------------------------------------------------------
                                     20 ; special function registers
                                     21 ;--------------------------------------------------------
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area _DATA
                                     26 ;--------------------------------------------------------
                                     27 ; ram data
                                     28 ;--------------------------------------------------------
                                     29 	.area _INITIALIZED
                                     30 ;--------------------------------------------------------
                                     31 ; absolute external ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area _DABS (ABS)
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area _HOME
                                     38 	.area _GSINIT
                                     39 	.area _GSFINAL
                                     40 	.area _GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area _HOME
                                     45 	.area _HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area _CODE
                           000000    50 	G$PlayerUpdate$0$0	= .
                                     51 	.globl	G$PlayerUpdate$0$0
                           000000    52 	C$player.c$9$0_0$137	= .
                                     53 	.globl	C$player.c$9$0_0$137
                                     54 ;src\player.c:9: void PlayerUpdate(struct player *ptr)
                                     55 ;	---------------------------------
                                     56 ; Function PlayerUpdate
                                     57 ; ---------------------------------
      000000                         58 _PlayerUpdate::
      000000 4B               [ 4]   59 	ld	c, e
      000001 42               [ 4]   60 	ld	b, d
                           000002    61 	C$player.c$12$1_0$137	= .
                                     62 	.globl	C$player.c$12$1_0$137
                                     63 ;src\player.c:12: switch (ptr->playerState)
      000002 21 07 00         [12]   64 	ld	hl, #0x0007
      000005 09               [ 8]   65 	add	hl, bc
      000006 7E               [ 8]   66 	ld	a, (hl)
      000007 B7               [ 4]   67 	or	a, a
      000008 C0               [20]   68 	ret	NZ
                           000009    69 	C$player.c$15$2_0$138	= .
                                     70 	.globl	C$player.c$15$2_0$138
                                     71 ;src\player.c:15: joypadPrevious = joypadCurrent;
      000009 FAr00r00         [16]   72 	ld	a, (#_joypadCurrent)
      00000C EAr00r00         [16]   73 	ld	(#_joypadPrevious),a
                           00000F    74 	C$player.c$16$2_0$138	= .
                                     75 	.globl	C$player.c$16$2_0$138
                                     76 ;src\player.c:16: joypadCurrent = joypad();
      00000F CDr00r00         [24]   77 	call	_joypad
      000012 21r00r00         [12]   78 	ld	hl, #_joypadCurrent
      000015 77               [ 8]   79 	ld	(hl), a
                           000016    80 	C$player.c$15$1_0$137	= .
                                     81 	.globl	C$player.c$15$1_0$137
                                     82 ;src\player.c:15: joypadPrevious = joypadCurrent;
      000016 5E               [ 8]   83 	ld	e, (hl)
                           000017    84 	C$player.c$20$1_0$137	= .
                                     85 	.globl	C$player.c$20$1_0$137
                                     86 ;src\player.c:20: ptr->playerDirection = up;
      000017 21 06 00         [12]   87 	ld	hl, #0x0006
      00001A 09               [ 8]   88 	add	hl, bc
                           00001B    89 	C$player.c$17$2_0$138	= .
                                     90 	.globl	C$player.c$17$2_0$138
                                     91 ;src\player.c:17: if (joypadCurrent & J_UP)
      00001B CB 53            [ 8]   92 	bit	2, e
      00001D 28 03            [12]   93 	jr	Z, 00111$
                           00001F    94 	C$player.c$20$3_0$139	= .
                                     95 	.globl	C$player.c$20$3_0$139
                                     96 ;src\player.c:20: ptr->playerDirection = up;
      00001F 36 01            [12]   97 	ld	(hl), #0x01
      000021 C9               [16]   98 	ret
      000022                         99 00111$:
                           000022   100 	C$player.c$22$2_0$138	= .
                                    101 	.globl	C$player.c$22$2_0$138
                                    102 ;src\player.c:22: else if (joypadCurrent & J_DOWN)
      000022 CB 5B            [ 8]  103 	bit	3, e
      000024 28 03            [12]  104 	jr	Z, 00108$
                           000026   105 	C$player.c$25$3_0$140	= .
                                    106 	.globl	C$player.c$25$3_0$140
                                    107 ;src\player.c:25: ptr->playerDirection = down;
      000026 36 00            [12]  108 	ld	(hl), #0x00
      000028 C9               [16]  109 	ret
      000029                        110 00108$:
                           000029   111 	C$player.c$27$2_0$138	= .
                                    112 	.globl	C$player.c$27$2_0$138
                                    113 ;src\player.c:27: else if (joypadCurrent & J_RIGHT)
      000029 CB 43            [ 8]  114 	bit	0, e
      00002B 28 03            [12]  115 	jr	Z, 00105$
                           00002D   116 	C$player.c$30$3_0$141	= .
                                    117 	.globl	C$player.c$30$3_0$141
                                    118 ;src\player.c:30: ptr->playerDirection = right;
      00002D 36 02            [12]  119 	ld	(hl), #0x02
      00002F C9               [16]  120 	ret
      000030                        121 00105$:
                           000030   122 	C$player.c$32$2_0$138	= .
                                    123 	.globl	C$player.c$32$2_0$138
                                    124 ;src\player.c:32: else if (joypadCurrent & J_LEFT)
      000030 CB 4B            [ 8]  125 	bit	1, e
      000032 C8               [20]  126 	ret	Z
                           000033   127 	C$player.c$35$3_0$142	= .
                                    128 	.globl	C$player.c$35$3_0$142
                                    129 ;src\player.c:35: ptr->playerDirection = left;
      000033 36 03            [12]  130 	ld	(hl), #0x03
                           000035   131 	C$player.c$41$1_0$137	= .
                                    132 	.globl	C$player.c$41$1_0$137
                                    133 ;src\player.c:41: }
                           000035   134 	C$player.c$42$1_0$137	= .
                                    135 	.globl	C$player.c$42$1_0$137
                                    136 ;src\player.c:42: }
                           000035   137 	C$player.c$42$1_0$137	= .
                                    138 	.globl	C$player.c$42$1_0$137
                           000035   139 	XG$PlayerUpdate$0$0	= .
                                    140 	.globl	XG$PlayerUpdate$0$0
      000035 C9               [16]  141 	ret
                           000036   142 	G$DrawPlayer$0$0	= .
                                    143 	.globl	G$DrawPlayer$0$0
                           000036   144 	C$player.c$69$1_0$144	= .
                                    145 	.globl	C$player.c$69$1_0$144
                                    146 ;src\player.c:69: void DrawPlayer(struct player *ptr)
                                    147 ;	---------------------------------
                                    148 ; Function DrawPlayer
                                    149 ; ---------------------------------
      000036                        150 _DrawPlayer::
      000036 E8 FD            [16]  151 	add	sp, #-3
                           000038   152 	C$player.c$73$1_0$144	= .
                                    153 	.globl	C$player.c$73$1_0$144
                                    154 ;src\player.c:73: switch (ptr->playerDirection)
      000038 21 06 00         [12]  155 	ld	hl, #0x0006
      00003B 19               [ 8]  156 	add	hl, de
      00003C 7E               [ 8]  157 	ld	a, (hl)
      00003D F8 00            [12]  158 	ldhl	sp,	#0
      00003F 77               [ 8]  159 	ld	(hl), a
                           000040   160 	C$player.c$76$1_0$144	= .
                                    161 	.globl	C$player.c$76$1_0$144
                                    162 ;src\player.c:76: move_metasprite(mouse_metasprites[1], 0, 0, ptr->x, ptr->y);
      000040 4B               [ 4]  163 	ld	c, e
      000041 42               [ 4]  164 	ld	b, d
      000042 03               [ 8]  165 	inc	bc
      000043 03               [ 8]  166 	inc	bc
      000044 1A               [ 8]  167 	ld	a, (de)
      000045 F8 02            [12]  168 	ldhl	sp,	#2
      000047 32               [ 8]  169 	ld	(hl-), a
      000048 0A               [ 8]  170 	ld	a, (bc)
                           000049   171 	C$player.c$73$1_0$144	= .
                                    172 	.globl	C$player.c$73$1_0$144
                                    173 ;src\player.c:73: switch (ptr->playerDirection)
      000049 32               [ 8]  174 	ld	(hl-), a
      00004A 7E               [ 8]  175 	ld	a, (hl)
      00004B B7               [ 4]  176 	or	a, a
      00004C 28 3B            [12]  177 	jr	Z, 00102$
      00004E F8 00            [12]  178 	ldhl	sp,	#0
      000050 7E               [ 8]  179 	ld	a, (hl)
      000051 3D               [ 4]  180 	dec	a
      000052 28 11            [12]  181 	jr	Z, 00101$
      000054 F8 00            [12]  182 	ldhl	sp,	#0
      000056 7E               [ 8]  183 	ld	a, (hl)
      000057 D6 02            [ 8]  184 	sub	a, #0x02
      000059 28 4F            [12]  185 	jr	Z, 00103$
      00005B F8 00            [12]  186 	ldhl	sp,	#0
      00005D 7E               [ 8]  187 	ld	a, (hl)
      00005E D6 03            [ 8]  188 	sub	a, #0x03
      000060 28 6B            [12]  189 	jr	Z, 00104$
      000062 C3rF3r00         [16]  190 	jp	00105$
                           000065   191 	C$player.c$75$2_0$145	= .
                                    192 	.globl	C$player.c$75$2_0$145
                                    193 ;src\player.c:75: case up:
      000065                        194 00101$:
                                    195 ;src\player.c:76: move_metasprite(mouse_metasprites[1], 0, 0, ptr->x, ptr->y);
      000065 F8 01            [12]  196 	ldhl	sp,	#1
      000067 2A               [ 8]  197 	ld	a, (hl+)
      000068 47               [ 4]  198 	ld	b, a
      000069 4E               [ 8]  199 	ld	c, (hl)
      00006A 21r4Dr01         [12]  200 	ld	hl, #(_mouse_metasprites + 2) + 1
      00006D 3A               [ 8]  201 	ld	a,	(hl-)
                                    202 ;	spillPairReg hl
                                    203 ;C:/gbdk/include/gb/metasprites.h:140: __current_metasprite = metasprite;
      00006E 5E               [ 8]  204 	ld	e, (hl)
      00006F 57               [ 4]  205 	ld	d, a
      000070 21r00r00         [12]  206 	ld	hl, #___current_metasprite
      000073 7B               [ 4]  207 	ld	a, e
      000074 22               [ 8]  208 	ld	(hl+), a
      000075 72               [ 8]  209 	ld	(hl), d
                                    210 ;C:/gbdk/include/gb/metasprites.h:141: __current_base_tile = base_tile;
      000076 21r00r00         [12]  211 	ld	hl, #___current_base_tile
      000079 36 00            [12]  212 	ld	(hl), #0x00
                                    213 ;C:/gbdk/include/gb/metasprites.h:142: return __move_metasprite(base_sprite, x, y);
      00007B C5               [16]  214 	push	bc
      00007C 33               [ 8]  215 	inc	sp
      00007D 61               [ 4]  216 	ld	h, c
      00007E 2E 00            [ 8]  217 	ld	l, #0x00
      000080 E5               [16]  218 	push	hl
      000081 CDr00r00         [24]  219 	call	___move_metasprite
      000084 E8 03            [16]  220 	add	sp, #3
                           000086   221 	C$player.c$77$2_0$145	= .
                                    222 	.globl	C$player.c$77$2_0$145
                                    223 ;src\player.c:77: break;
      000086 C3r17r01         [16]  224 	jp	00112$
                           000089   225 	C$player.c$78$2_0$145	= .
                                    226 	.globl	C$player.c$78$2_0$145
                                    227 ;src\player.c:78: case down:
      000089                        228 00102$:
                                    229 ;src\player.c:79: move_metasprite(mouse_metasprites[0], 0, 0, ptr->x, ptr->y);
      000089 21r4Ar01         [12]  230 	ld	hl, #_mouse_metasprites
      00008C 2A               [ 8]  231 	ld	a, (hl+)
      00008D 4F               [ 4]  232 	ld	c, a
      00008E 7E               [ 8]  233 	ld	a, (hl)
                                    234 ;C:/gbdk/include/gb/metasprites.h:140: __current_metasprite = metasprite;
      00008F 21r00r00         [12]  235 	ld	hl, #___current_metasprite
      000092 71               [ 8]  236 	ld	(hl), c
      000093 23               [ 8]  237 	inc	hl
      000094 77               [ 8]  238 	ld	(hl), a
                                    239 ;C:/gbdk/include/gb/metasprites.h:141: __current_base_tile = base_tile;
      000095 21r00r00         [12]  240 	ld	hl, #___current_base_tile
      000098 36 00            [12]  241 	ld	(hl), #0x00
                                    242 ;C:/gbdk/include/gb/metasprites.h:142: return __move_metasprite(base_sprite, x, y);
      00009A F8 01            [12]  243 	ldhl	sp,	#1
      00009C 2A               [ 8]  244 	ld	a, (hl+)
      00009D F5               [16]  245 	push	af
      00009E 33               [ 8]  246 	inc	sp
      00009F 66               [ 8]  247 	ld	h, (hl)
      0000A0 2E 00            [ 8]  248 	ld	l, #0x00
      0000A2 E5               [16]  249 	push	hl
      0000A3 CDr00r00         [24]  250 	call	___move_metasprite
      0000A6 E8 03            [16]  251 	add	sp, #3
                           0000A8   252 	C$player.c$80$2_0$145	= .
                                    253 	.globl	C$player.c$80$2_0$145
                                    254 ;src\player.c:80: break;
      0000A8 18 6D            [12]  255 	jr	00112$
                           0000AA   256 	C$player.c$81$2_0$145	= .
                                    257 	.globl	C$player.c$81$2_0$145
                                    258 ;src\player.c:81: case right:
      0000AA                        259 00103$:
                                    260 ;src\player.c:82: move_metasprite(mouse_metasprites[3], 0, 0, ptr->x, ptr->y);
      0000AA F8 01            [12]  261 	ldhl	sp,	#1
      0000AC 2A               [ 8]  262 	ld	a, (hl+)
      0000AD 47               [ 4]  263 	ld	b, a
      0000AE 4E               [ 8]  264 	ld	c, (hl)
      0000AF 21r51r01         [12]  265 	ld	hl, #(_mouse_metasprites + 6) + 1
      0000B2 3A               [ 8]  266 	ld	a,	(hl-)
                                    267 ;	spillPairReg hl
                                    268 ;C:/gbdk/include/gb/metasprites.h:140: __current_metasprite = metasprite;
      0000B3 5E               [ 8]  269 	ld	e, (hl)
      0000B4 57               [ 4]  270 	ld	d, a
      0000B5 21r00r00         [12]  271 	ld	hl, #___current_metasprite
      0000B8 7B               [ 4]  272 	ld	a, e
      0000B9 22               [ 8]  273 	ld	(hl+), a
      0000BA 72               [ 8]  274 	ld	(hl), d
                                    275 ;C:/gbdk/include/gb/metasprites.h:141: __current_base_tile = base_tile;
      0000BB 21r00r00         [12]  276 	ld	hl, #___current_base_tile
      0000BE 36 00            [12]  277 	ld	(hl), #0x00
                                    278 ;C:/gbdk/include/gb/metasprites.h:142: return __move_metasprite(base_sprite, x, y);
      0000C0 C5               [16]  279 	push	bc
      0000C1 33               [ 8]  280 	inc	sp
      0000C2 61               [ 4]  281 	ld	h, c
      0000C3 2E 00            [ 8]  282 	ld	l, #0x00
      0000C5 E5               [16]  283 	push	hl
      0000C6 CDr00r00         [24]  284 	call	___move_metasprite
      0000C9 E8 03            [16]  285 	add	sp, #3
                           0000CB   286 	C$player.c$83$2_0$145	= .
                                    287 	.globl	C$player.c$83$2_0$145
                                    288 ;src\player.c:83: break;
      0000CB 18 4A            [12]  289 	jr	00112$
                           0000CD   290 	C$player.c$84$2_0$145	= .
                                    291 	.globl	C$player.c$84$2_0$145
                                    292 ;src\player.c:84: case left:
      0000CD                        293 00104$:
                                    294 ;src\player.c:85: move_metasprite_vflip(mouse_metasprites[2], 0, 0, ptr->x, ptr->y);
      0000CD F8 01            [12]  295 	ldhl	sp,	#1
      0000CF 2A               [ 8]  296 	ld	a, (hl+)
      0000D0 47               [ 4]  297 	ld	b, a
      0000D1 4E               [ 8]  298 	ld	c, (hl)
      0000D2 21r4Fr01         [12]  299 	ld	hl, #(_mouse_metasprites + 4) + 1
      0000D5 3A               [ 8]  300 	ld	a,	(hl-)
                                    301 ;	spillPairReg hl
                                    302 ;C:/gbdk/include/gb/metasprites.h:169: __current_metasprite = metasprite;
      0000D6 5E               [ 8]  303 	ld	e, (hl)
      0000D7 57               [ 4]  304 	ld	d, a
      0000D8 21r00r00         [12]  305 	ld	hl, #___current_metasprite
      0000DB 7B               [ 4]  306 	ld	a, e
      0000DC 22               [ 8]  307 	ld	(hl+), a
      0000DD 72               [ 8]  308 	ld	(hl), d
                                    309 ;C:/gbdk/include/gb/metasprites.h:170: __current_base_tile = base_tile;
      0000DE 21r00r00         [12]  310 	ld	hl, #___current_base_tile
      0000E1 36 00            [12]  311 	ld	(hl), #0x00
                                    312 ;C:/gbdk/include/gb/metasprites.h:171: return __move_metasprite_vflip(base_sprite, x - 8, y);
      0000E3 79               [ 4]  313 	ld	a, c
      0000E4 C6 F8            [ 8]  314 	add	a, #0xf8
      0000E6 C5               [16]  315 	push	bc
      0000E7 33               [ 8]  316 	inc	sp
      0000E8 67               [ 4]  317 	ld	h, a
      0000E9 2E 00            [ 8]  318 	ld	l, #0x00
      0000EB E5               [16]  319 	push	hl
      0000EC CDr00r00         [24]  320 	call	___move_metasprite_vflip
      0000EF E8 03            [16]  321 	add	sp, #3
                           0000F1   322 	C$player.c$86$2_0$145	= .
                                    323 	.globl	C$player.c$86$2_0$145
                                    324 ;src\player.c:86: break;
      0000F1 18 24            [12]  325 	jr	00112$
                           0000F3   326 	C$player.c$87$2_0$145	= .
                                    327 	.globl	C$player.c$87$2_0$145
                                    328 ;src\player.c:87: default:
      0000F3                        329 00105$:
                                    330 ;src\player.c:88: move_metasprite_vflip(mouse_metasprites[2], 0, 0, ptr->x, ptr->y);
      0000F3 F8 01            [12]  331 	ldhl	sp,	#1
      0000F5 2A               [ 8]  332 	ld	a, (hl+)
      0000F6 47               [ 4]  333 	ld	b, a
      0000F7 4E               [ 8]  334 	ld	c, (hl)
      0000F8 21r4Fr01         [12]  335 	ld	hl, #(_mouse_metasprites + 4) + 1
      0000FB 3A               [ 8]  336 	ld	a,	(hl-)
                                    337 ;	spillPairReg hl
                                    338 ;C:/gbdk/include/gb/metasprites.h:169: __current_metasprite = metasprite;
      0000FC 5E               [ 8]  339 	ld	e, (hl)
      0000FD 57               [ 4]  340 	ld	d, a
      0000FE 21r00r00         [12]  341 	ld	hl, #___current_metasprite
      000101 7B               [ 4]  342 	ld	a, e
      000102 22               [ 8]  343 	ld	(hl+), a
      000103 72               [ 8]  344 	ld	(hl), d
                                    345 ;C:/gbdk/include/gb/metasprites.h:170: __current_base_tile = base_tile;
      000104 21r00r00         [12]  346 	ld	hl, #___current_base_tile
      000107 36 00            [12]  347 	ld	(hl), #0x00
                                    348 ;C:/gbdk/include/gb/metasprites.h:171: return __move_metasprite_vflip(base_sprite, x - 8, y);
      000109 79               [ 4]  349 	ld	a, c
      00010A C6 F8            [ 8]  350 	add	a, #0xf8
      00010C C5               [16]  351 	push	bc
      00010D 33               [ 8]  352 	inc	sp
      00010E 67               [ 4]  353 	ld	h, a
      00010F 2E 00            [ 8]  354 	ld	l, #0x00
      000111 E5               [16]  355 	push	hl
      000112 CDr00r00         [24]  356 	call	___move_metasprite_vflip
      000115 E8 03            [16]  357 	add	sp, #3
                           000117   358 	C$player.c$90$1_0$144	= .
                                    359 	.globl	C$player.c$90$1_0$144
                                    360 ;src\player.c:90: }
      000117                        361 00112$:
                           000117   362 	C$player.c$91$1_0$144	= .
                                    363 	.globl	C$player.c$91$1_0$144
                                    364 ;src\player.c:91: }
      000117 E8 03            [16]  365 	add	sp, #3
                           000119   366 	C$player.c$91$1_0$144	= .
                                    367 	.globl	C$player.c$91$1_0$144
                           000119   368 	XG$DrawPlayer$0$0	= .
                                    369 	.globl	XG$DrawPlayer$0$0
      000119 C9               [16]  370 	ret
                           00011A   371 G$mouse_down$0_0$0 == .
      00011A                        372 _mouse_down:
      00011A F0                     373 	.db #0xf0	; -16
      00011B F8                     374 	.db #0xf8	; -8
      00011C 00                     375 	.db #0x00	; 0
      00011D 00                     376 	.db #0x00	; 0
      00011E 00                     377 	.db #0x00	;  0
      00011F 08                     378 	.db #0x08	;  8
      000120 02                     379 	.db #0x02	; 2
      000121 00                     380 	.db #0x00	; 0
      000122 80                     381 	.db #0x80	; -128
      000123 00                     382 	.db #0x00	;  0
      000124 00                     383 	.db #0x00	; 0
      000125 00                     384 	.db #0x00	; 0
                           000126   385 G$mouse_up$0_0$0 == .
      000126                        386 _mouse_up:
      000126 F0                     387 	.db #0xf0	; -16
      000127 F8                     388 	.db #0xf8	; -8
      000128 0C                     389 	.db #0x0c	; 12
      000129 00                     390 	.db #0x00	; 0
      00012A 00                     391 	.db #0x00	;  0
      00012B 08                     392 	.db #0x08	;  8
      00012C 0E                     393 	.db #0x0e	; 14
      00012D 00                     394 	.db #0x00	; 0
      00012E 80                     395 	.db #0x80	; -128
      00012F 00                     396 	.db #0x00	;  0
      000130 00                     397 	.db #0x00	; 0
      000131 00                     398 	.db #0x00	; 0
                           000132   399 G$mouse_right0$0_0$0 == .
      000132                        400 _mouse_right0:
      000132 F0                     401 	.db #0xf0	; -16
      000133 F8                     402 	.db #0xf8	; -8
      000134 04                     403 	.db #0x04	; 4
      000135 00                     404 	.db #0x00	; 0
      000136 00                     405 	.db #0x00	;  0
      000137 08                     406 	.db #0x08	;  8
      000138 06                     407 	.db #0x06	; 6
      000139 00                     408 	.db #0x00	; 0
      00013A 80                     409 	.db #0x80	; -128
      00013B 00                     410 	.db #0x00	;  0
      00013C 00                     411 	.db #0x00	; 0
      00013D 00                     412 	.db #0x00	; 0
                           00013E   413 G$mouse_right1$0_0$0 == .
      00013E                        414 _mouse_right1:
      00013E F0                     415 	.db #0xf0	; -16
      00013F F8                     416 	.db #0xf8	; -8
      000140 08                     417 	.db #0x08	; 8
      000141 00                     418 	.db #0x00	; 0
      000142 00                     419 	.db #0x00	;  0
      000143 08                     420 	.db #0x08	;  8
      000144 0A                     421 	.db #0x0a	; 10
      000145 00                     422 	.db #0x00	; 0
      000146 80                     423 	.db #0x80	; -128
      000147 00                     424 	.db #0x00	;  0
      000148 00                     425 	.db #0x00	; 0
      000149 00                     426 	.db #0x00	; 0
                           00014A   427 G$mouse_metasprites$0_0$0 == .
      00014A                        428 _mouse_metasprites:
      00014Ar1Ar01                  429 	.dw _mouse_down
      00014Cr26r01                  430 	.dw _mouse_up
      00014Er32r01                  431 	.dw _mouse_right0
      000150r3Er01                  432 	.dw _mouse_right1
                                    433 	.area _CODE
                                    434 	.area _INITIALIZER
                                    435 	.area _CABS (ABS)
