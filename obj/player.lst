                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.2 #13350 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module player
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _joypad
                                     12 	.globl _mouse_metasprites
                                     13 	.globl _mouse_right1
                                     14 	.globl _mouse_right0
                                     15 	.globl _mouse_up
                                     16 	.globl _mouse_down
                                     17 	.globl _PlayerUpdate
                                     18 	.globl _DrawPlayer
                                     19 ;--------------------------------------------------------
                                     20 ; special function registers
                                     21 ;--------------------------------------------------------
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area _DATA
                                     26 ;--------------------------------------------------------
                                     27 ; ram data
                                     28 ;--------------------------------------------------------
                                     29 	.area _INITIALIZED
                                     30 ;--------------------------------------------------------
                                     31 ; absolute external ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area _DABS (ABS)
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area _HOME
                                     38 	.area _GSINIT
                                     39 	.area _GSFINAL
                                     40 	.area _GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area _HOME
                                     45 	.area _HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area _CODE
                                     50 ;src\player.c:9: void PlayerUpdate(struct player *ptr)
                                     51 ;	---------------------------------
                                     52 ; Function PlayerUpdate
                                     53 ; ---------------------------------
      000000                         54 _PlayerUpdate::
      000000 4B               [ 4]   55 	ld	c, e
      000001 42               [ 4]   56 	ld	b, d
                                     57 ;src\player.c:12: switch (ptr->playerState)
      000002 21 07 00         [12]   58 	ld	hl, #0x0007
      000005 09               [ 8]   59 	add	hl, bc
      000006 7E               [ 8]   60 	ld	a, (hl)
      000007 B7               [ 4]   61 	or	a, a
      000008 C0               [20]   62 	ret	NZ
                                     63 ;src\player.c:15: joypadPrevious = joypadCurrent;
      000009 FAr00r00         [16]   64 	ld	a, (#_joypadCurrent)
      00000C EAr00r00         [16]   65 	ld	(#_joypadPrevious),a
                                     66 ;src\player.c:16: joypadCurrent = joypad();
      00000F CDr00r00         [24]   67 	call	_joypad
      000012 21r00r00         [12]   68 	ld	hl, #_joypadCurrent
      000015 77               [ 8]   69 	ld	(hl), a
                                     70 ;src\player.c:15: joypadPrevious = joypadCurrent;
      000016 5E               [ 8]   71 	ld	e, (hl)
                                     72 ;src\player.c:20: ptr->playerDirection = up;
      000017 21 06 00         [12]   73 	ld	hl, #0x0006
      00001A 09               [ 8]   74 	add	hl, bc
                                     75 ;src\player.c:17: if (joypadCurrent & J_UP)
      00001B CB 53            [ 8]   76 	bit	2, e
      00001D 28 03            [12]   77 	jr	Z, 00111$
                                     78 ;src\player.c:20: ptr->playerDirection = up;
      00001F 36 01            [12]   79 	ld	(hl), #0x01
      000021 C9               [16]   80 	ret
      000022                         81 00111$:
                                     82 ;src\player.c:22: else if (joypadCurrent & J_DOWN)
      000022 CB 5B            [ 8]   83 	bit	3, e
      000024 28 03            [12]   84 	jr	Z, 00108$
                                     85 ;src\player.c:25: ptr->playerDirection = down;
      000026 36 00            [12]   86 	ld	(hl), #0x00
      000028 C9               [16]   87 	ret
      000029                         88 00108$:
                                     89 ;src\player.c:27: else if (joypadCurrent & J_RIGHT)
      000029 CB 43            [ 8]   90 	bit	0, e
      00002B 28 03            [12]   91 	jr	Z, 00105$
                                     92 ;src\player.c:30: ptr->playerDirection = right;
      00002D 36 02            [12]   93 	ld	(hl), #0x02
      00002F C9               [16]   94 	ret
      000030                         95 00105$:
                                     96 ;src\player.c:32: else if (joypadCurrent & J_LEFT)
      000030 CB 4B            [ 8]   97 	bit	1, e
      000032 C8               [20]   98 	ret	Z
                                     99 ;src\player.c:35: ptr->playerDirection = left;
      000033 36 03            [12]  100 	ld	(hl), #0x03
                                    101 ;src\player.c:41: }
                                    102 ;src\player.c:42: }
      000035 C9               [16]  103 	ret
                                    104 ;src\player.c:69: void DrawPlayer(struct player *ptr)
                                    105 ;	---------------------------------
                                    106 ; Function DrawPlayer
                                    107 ; ---------------------------------
      000036                        108 _DrawPlayer::
      000036 E8 FD            [16]  109 	add	sp, #-3
                                    110 ;src\player.c:73: switch (ptr->playerDirection)
      000038 21 06 00         [12]  111 	ld	hl, #0x0006
      00003B 19               [ 8]  112 	add	hl, de
      00003C 7E               [ 8]  113 	ld	a, (hl)
      00003D F8 00            [12]  114 	ldhl	sp,	#0
      00003F 77               [ 8]  115 	ld	(hl), a
                                    116 ;src\player.c:76: move_metasprite(mouse_metasprites[1], 0, 0, ptr->x, ptr->y);
      000040 4B               [ 4]  117 	ld	c, e
      000041 42               [ 4]  118 	ld	b, d
      000042 03               [ 8]  119 	inc	bc
      000043 03               [ 8]  120 	inc	bc
      000044 1A               [ 8]  121 	ld	a, (de)
      000045 F8 02            [12]  122 	ldhl	sp,	#2
      000047 32               [ 8]  123 	ld	(hl-), a
      000048 0A               [ 8]  124 	ld	a, (bc)
                                    125 ;src\player.c:73: switch (ptr->playerDirection)
      000049 32               [ 8]  126 	ld	(hl-), a
      00004A 7E               [ 8]  127 	ld	a, (hl)
      00004B B7               [ 4]  128 	or	a, a
      00004C 28 3B            [12]  129 	jr	Z, 00102$
      00004E F8 00            [12]  130 	ldhl	sp,	#0
      000050 7E               [ 8]  131 	ld	a, (hl)
      000051 3D               [ 4]  132 	dec	a
      000052 28 11            [12]  133 	jr	Z, 00101$
      000054 F8 00            [12]  134 	ldhl	sp,	#0
      000056 7E               [ 8]  135 	ld	a, (hl)
      000057 D6 02            [ 8]  136 	sub	a, #0x02
      000059 28 4F            [12]  137 	jr	Z, 00103$
      00005B F8 00            [12]  138 	ldhl	sp,	#0
      00005D 7E               [ 8]  139 	ld	a, (hl)
      00005E D6 03            [ 8]  140 	sub	a, #0x03
      000060 28 6B            [12]  141 	jr	Z, 00104$
      000062 C3rF3r00         [16]  142 	jp	00105$
                                    143 ;src\player.c:75: case up:
      000065                        144 00101$:
                                    145 ;src\player.c:76: move_metasprite(mouse_metasprites[1], 0, 0, ptr->x, ptr->y);
      000065 F8 01            [12]  146 	ldhl	sp,	#1
      000067 2A               [ 8]  147 	ld	a, (hl+)
      000068 47               [ 4]  148 	ld	b, a
      000069 4E               [ 8]  149 	ld	c, (hl)
      00006A 21r4Dr01         [12]  150 	ld	hl, #(_mouse_metasprites + 2) + 1
      00006D 3A               [ 8]  151 	ld	a,	(hl-)
                                    152 ;	spillPairReg hl
                                    153 ;C:/gbdk/include/gb/metasprites.h:140: __current_metasprite = metasprite;
      00006E 5E               [ 8]  154 	ld	e, (hl)
      00006F 57               [ 4]  155 	ld	d, a
      000070 21r00r00         [12]  156 	ld	hl, #___current_metasprite
      000073 7B               [ 4]  157 	ld	a, e
      000074 22               [ 8]  158 	ld	(hl+), a
      000075 72               [ 8]  159 	ld	(hl), d
                                    160 ;C:/gbdk/include/gb/metasprites.h:141: __current_base_tile = base_tile;
      000076 21r00r00         [12]  161 	ld	hl, #___current_base_tile
      000079 36 00            [12]  162 	ld	(hl), #0x00
                                    163 ;C:/gbdk/include/gb/metasprites.h:142: return __move_metasprite(base_sprite, x, y);
      00007B C5               [16]  164 	push	bc
      00007C 33               [ 8]  165 	inc	sp
      00007D 61               [ 4]  166 	ld	h, c
      00007E 2E 00            [ 8]  167 	ld	l, #0x00
      000080 E5               [16]  168 	push	hl
      000081 CDr00r00         [24]  169 	call	___move_metasprite
      000084 E8 03            [16]  170 	add	sp, #3
                                    171 ;src\player.c:77: break;
      000086 C3r17r01         [16]  172 	jp	00112$
                                    173 ;src\player.c:78: case down:
      000089                        174 00102$:
                                    175 ;src\player.c:79: move_metasprite(mouse_metasprites[0], 0, 0, ptr->x, ptr->y);
      000089 21r4Ar01         [12]  176 	ld	hl, #_mouse_metasprites
      00008C 2A               [ 8]  177 	ld	a, (hl+)
      00008D 4F               [ 4]  178 	ld	c, a
      00008E 7E               [ 8]  179 	ld	a, (hl)
                                    180 ;C:/gbdk/include/gb/metasprites.h:140: __current_metasprite = metasprite;
      00008F 21r00r00         [12]  181 	ld	hl, #___current_metasprite
      000092 71               [ 8]  182 	ld	(hl), c
      000093 23               [ 8]  183 	inc	hl
      000094 77               [ 8]  184 	ld	(hl), a
                                    185 ;C:/gbdk/include/gb/metasprites.h:141: __current_base_tile = base_tile;
      000095 21r00r00         [12]  186 	ld	hl, #___current_base_tile
      000098 36 00            [12]  187 	ld	(hl), #0x00
                                    188 ;C:/gbdk/include/gb/metasprites.h:142: return __move_metasprite(base_sprite, x, y);
      00009A F8 01            [12]  189 	ldhl	sp,	#1
      00009C 2A               [ 8]  190 	ld	a, (hl+)
      00009D F5               [16]  191 	push	af
      00009E 33               [ 8]  192 	inc	sp
      00009F 66               [ 8]  193 	ld	h, (hl)
      0000A0 2E 00            [ 8]  194 	ld	l, #0x00
      0000A2 E5               [16]  195 	push	hl
      0000A3 CDr00r00         [24]  196 	call	___move_metasprite
      0000A6 E8 03            [16]  197 	add	sp, #3
                                    198 ;src\player.c:80: break;
      0000A8 18 6D            [12]  199 	jr	00112$
                                    200 ;src\player.c:81: case right:
      0000AA                        201 00103$:
                                    202 ;src\player.c:82: move_metasprite(mouse_metasprites[3], 0, 0, ptr->x, ptr->y);
      0000AA F8 01            [12]  203 	ldhl	sp,	#1
      0000AC 2A               [ 8]  204 	ld	a, (hl+)
      0000AD 47               [ 4]  205 	ld	b, a
      0000AE 4E               [ 8]  206 	ld	c, (hl)
      0000AF 21r51r01         [12]  207 	ld	hl, #(_mouse_metasprites + 6) + 1
      0000B2 3A               [ 8]  208 	ld	a,	(hl-)
                                    209 ;	spillPairReg hl
                                    210 ;C:/gbdk/include/gb/metasprites.h:140: __current_metasprite = metasprite;
      0000B3 5E               [ 8]  211 	ld	e, (hl)
      0000B4 57               [ 4]  212 	ld	d, a
      0000B5 21r00r00         [12]  213 	ld	hl, #___current_metasprite
      0000B8 7B               [ 4]  214 	ld	a, e
      0000B9 22               [ 8]  215 	ld	(hl+), a
      0000BA 72               [ 8]  216 	ld	(hl), d
                                    217 ;C:/gbdk/include/gb/metasprites.h:141: __current_base_tile = base_tile;
      0000BB 21r00r00         [12]  218 	ld	hl, #___current_base_tile
      0000BE 36 00            [12]  219 	ld	(hl), #0x00
                                    220 ;C:/gbdk/include/gb/metasprites.h:142: return __move_metasprite(base_sprite, x, y);
      0000C0 C5               [16]  221 	push	bc
      0000C1 33               [ 8]  222 	inc	sp
      0000C2 61               [ 4]  223 	ld	h, c
      0000C3 2E 00            [ 8]  224 	ld	l, #0x00
      0000C5 E5               [16]  225 	push	hl
      0000C6 CDr00r00         [24]  226 	call	___move_metasprite
      0000C9 E8 03            [16]  227 	add	sp, #3
                                    228 ;src\player.c:83: break;
      0000CB 18 4A            [12]  229 	jr	00112$
                                    230 ;src\player.c:84: case left:
      0000CD                        231 00104$:
                                    232 ;src\player.c:85: move_metasprite_vflip(mouse_metasprites[2], 0, 0, ptr->x, ptr->y);
      0000CD F8 01            [12]  233 	ldhl	sp,	#1
      0000CF 2A               [ 8]  234 	ld	a, (hl+)
      0000D0 47               [ 4]  235 	ld	b, a
      0000D1 4E               [ 8]  236 	ld	c, (hl)
      0000D2 21r4Fr01         [12]  237 	ld	hl, #(_mouse_metasprites + 4) + 1
      0000D5 3A               [ 8]  238 	ld	a,	(hl-)
                                    239 ;	spillPairReg hl
                                    240 ;C:/gbdk/include/gb/metasprites.h:169: __current_metasprite = metasprite;
      0000D6 5E               [ 8]  241 	ld	e, (hl)
      0000D7 57               [ 4]  242 	ld	d, a
      0000D8 21r00r00         [12]  243 	ld	hl, #___current_metasprite
      0000DB 7B               [ 4]  244 	ld	a, e
      0000DC 22               [ 8]  245 	ld	(hl+), a
      0000DD 72               [ 8]  246 	ld	(hl), d
                                    247 ;C:/gbdk/include/gb/metasprites.h:170: __current_base_tile = base_tile;
      0000DE 21r00r00         [12]  248 	ld	hl, #___current_base_tile
      0000E1 36 00            [12]  249 	ld	(hl), #0x00
                                    250 ;C:/gbdk/include/gb/metasprites.h:171: return __move_metasprite_vflip(base_sprite, x - 8, y);
      0000E3 79               [ 4]  251 	ld	a, c
      0000E4 C6 F8            [ 8]  252 	add	a, #0xf8
      0000E6 C5               [16]  253 	push	bc
      0000E7 33               [ 8]  254 	inc	sp
      0000E8 67               [ 4]  255 	ld	h, a
      0000E9 2E 00            [ 8]  256 	ld	l, #0x00
      0000EB E5               [16]  257 	push	hl
      0000EC CDr00r00         [24]  258 	call	___move_metasprite_vflip
      0000EF E8 03            [16]  259 	add	sp, #3
                                    260 ;src\player.c:86: break;
      0000F1 18 24            [12]  261 	jr	00112$
                                    262 ;src\player.c:87: default:
      0000F3                        263 00105$:
                                    264 ;src\player.c:88: move_metasprite_vflip(mouse_metasprites[2], 0, 0, ptr->x, ptr->y);
      0000F3 F8 01            [12]  265 	ldhl	sp,	#1
      0000F5 2A               [ 8]  266 	ld	a, (hl+)
      0000F6 47               [ 4]  267 	ld	b, a
      0000F7 4E               [ 8]  268 	ld	c, (hl)
      0000F8 21r4Fr01         [12]  269 	ld	hl, #(_mouse_metasprites + 4) + 1
      0000FB 3A               [ 8]  270 	ld	a,	(hl-)
                                    271 ;	spillPairReg hl
                                    272 ;C:/gbdk/include/gb/metasprites.h:169: __current_metasprite = metasprite;
      0000FC 5E               [ 8]  273 	ld	e, (hl)
      0000FD 57               [ 4]  274 	ld	d, a
      0000FE 21r00r00         [12]  275 	ld	hl, #___current_metasprite
      000101 7B               [ 4]  276 	ld	a, e
      000102 22               [ 8]  277 	ld	(hl+), a
      000103 72               [ 8]  278 	ld	(hl), d
                                    279 ;C:/gbdk/include/gb/metasprites.h:170: __current_base_tile = base_tile;
      000104 21r00r00         [12]  280 	ld	hl, #___current_base_tile
      000107 36 00            [12]  281 	ld	(hl), #0x00
                                    282 ;C:/gbdk/include/gb/metasprites.h:171: return __move_metasprite_vflip(base_sprite, x - 8, y);
      000109 79               [ 4]  283 	ld	a, c
      00010A C6 F8            [ 8]  284 	add	a, #0xf8
      00010C C5               [16]  285 	push	bc
      00010D 33               [ 8]  286 	inc	sp
      00010E 67               [ 4]  287 	ld	h, a
      00010F 2E 00            [ 8]  288 	ld	l, #0x00
      000111 E5               [16]  289 	push	hl
      000112 CDr00r00         [24]  290 	call	___move_metasprite_vflip
      000115 E8 03            [16]  291 	add	sp, #3
                                    292 ;src\player.c:90: }
      000117                        293 00112$:
                                    294 ;src\player.c:91: }
      000117 E8 03            [16]  295 	add	sp, #3
      000119 C9               [16]  296 	ret
      00011A                        297 _mouse_down:
      00011A F0                     298 	.db #0xf0	; -16
      00011B F8                     299 	.db #0xf8	; -8
      00011C 00                     300 	.db #0x00	; 0
      00011D 00                     301 	.db #0x00	; 0
      00011E 00                     302 	.db #0x00	;  0
      00011F 08                     303 	.db #0x08	;  8
      000120 02                     304 	.db #0x02	; 2
      000121 00                     305 	.db #0x00	; 0
      000122 80                     306 	.db #0x80	; -128
      000123 00                     307 	.db #0x00	;  0
      000124 00                     308 	.db #0x00	; 0
      000125 00                     309 	.db #0x00	; 0
      000126                        310 _mouse_up:
      000126 F0                     311 	.db #0xf0	; -16
      000127 F8                     312 	.db #0xf8	; -8
      000128 0C                     313 	.db #0x0c	; 12
      000129 00                     314 	.db #0x00	; 0
      00012A 00                     315 	.db #0x00	;  0
      00012B 08                     316 	.db #0x08	;  8
      00012C 0E                     317 	.db #0x0e	; 14
      00012D 00                     318 	.db #0x00	; 0
      00012E 80                     319 	.db #0x80	; -128
      00012F 00                     320 	.db #0x00	;  0
      000130 00                     321 	.db #0x00	; 0
      000131 00                     322 	.db #0x00	; 0
      000132                        323 _mouse_right0:
      000132 F0                     324 	.db #0xf0	; -16
      000133 F8                     325 	.db #0xf8	; -8
      000134 04                     326 	.db #0x04	; 4
      000135 00                     327 	.db #0x00	; 0
      000136 00                     328 	.db #0x00	;  0
      000137 08                     329 	.db #0x08	;  8
      000138 06                     330 	.db #0x06	; 6
      000139 00                     331 	.db #0x00	; 0
      00013A 80                     332 	.db #0x80	; -128
      00013B 00                     333 	.db #0x00	;  0
      00013C 00                     334 	.db #0x00	; 0
      00013D 00                     335 	.db #0x00	; 0
      00013E                        336 _mouse_right1:
      00013E F0                     337 	.db #0xf0	; -16
      00013F F8                     338 	.db #0xf8	; -8
      000140 08                     339 	.db #0x08	; 8
      000141 00                     340 	.db #0x00	; 0
      000142 00                     341 	.db #0x00	;  0
      000143 08                     342 	.db #0x08	;  8
      000144 0A                     343 	.db #0x0a	; 10
      000145 00                     344 	.db #0x00	; 0
      000146 80                     345 	.db #0x80	; -128
      000147 00                     346 	.db #0x00	;  0
      000148 00                     347 	.db #0x00	; 0
      000149 00                     348 	.db #0x00	; 0
      00014A                        349 _mouse_metasprites:
      00014Ar1Ar01                  350 	.dw _mouse_down
      00014Cr26r01                  351 	.dw _mouse_up
      00014Er32r01                  352 	.dw _mouse_right0
      000150r3Er01                  353 	.dw _mouse_right1
                                    354 	.area _CODE
                                    355 	.area _INITIALIZER
                                    356 	.area _CABS (ABS)
