                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.2 #13350 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _CoreGameLoopUpdate
                                     13 	.globl _CoreGameLoopSetup
                                     14 	.globl _GameTitleUpdate
                                     15 	.globl _GameTitleSetup
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 ;--------------------------------------------------------
                                     20 ; ram data
                                     21 ;--------------------------------------------------------
                                     22 	.area _DATA
                                     23 ;--------------------------------------------------------
                                     24 ; ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area _INITIALIZED
                                     27 ;--------------------------------------------------------
                                     28 ; absolute external ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area _DABS (ABS)
                                     31 ;--------------------------------------------------------
                                     32 ; global & static initialisations
                                     33 ;--------------------------------------------------------
                                     34 	.area _HOME
                                     35 	.area _GSINIT
                                     36 	.area _GSFINAL
                                     37 	.area _GSINIT
                                     38 ;--------------------------------------------------------
                                     39 ; Home
                                     40 ;--------------------------------------------------------
                                     41 	.area _HOME
                                     42 	.area _HOME
                                     43 ;--------------------------------------------------------
                                     44 ; code
                                     45 ;--------------------------------------------------------
                                     46 	.area _CODE
                           000000    47 	G$main$0$0	= .
                                     48 	.globl	G$main$0$0
                           000000    49 	C$main.c$6$0_0$102	= .
                                     50 	.globl	C$main.c$6$0_0$102
                                     51 ;src\main.c:6: void main(void)
                                     52 ;	---------------------------------
                                     53 ; Function main
                                     54 ; ---------------------------------
      000000                         55 _main::
                           000000    56 	C$main.c$8$2_0$102	= .
                                     57 	.globl	C$main.c$8$2_0$102
                                     58 ;src\main.c:8: uint8_t currentGameState = GAMEFIRSTLOAD;
                           000000    59 	C$main.c$9$2_0$102	= .
                                     60 	.globl	C$main.c$9$2_0$102
                                     61 ;src\main.c:9: uint8_t nextGameState = GAMETITLE;
      000000 01 00 01         [12]   62 	ld	bc, #0x100
                           000003    63 	C$main.c$12$1_0$102	= .
                                     64 	.globl	C$main.c$12$1_0$102
                                     65 ;src\main.c:12: while(1) { 
      000003                         66 00114$:
                           000003    67 	C$main.c$16$2_0$103	= .
                                     68 	.globl	C$main.c$16$2_0$103
                                     69 ;src\main.c:16: if (nextGameState != currentGameState)
      000003 79               [ 4]   70 	ld	a, c
      000004 90               [ 4]   71 	sub	a, b
      000005 28 16            [12]   72 	jr	Z, 00107$
                           000007    73 	C$main.c$18$3_0$104	= .
                                     74 	.globl	C$main.c$18$3_0$104
                                     75 ;src\main.c:18: currentGameState = nextGameState;
      000007 48               [ 4]   76 	ld	c, b
                           000008    77 	C$main.c$20$3_0$104	= .
                                     78 	.globl	C$main.c$20$3_0$104
                                     79 ;src\main.c:20: if (currentGameState == GAMETITLE) GameTitleSetup();
      000008 78               [ 4]   80 	ld	a, b
      000009 3D               [ 4]   81 	dec	a
      00000A 20 07            [12]   82 	jr	NZ, 00104$
      00000C C5               [16]   83 	push	bc
      00000D CDr00r00         [24]   84 	call	_GameTitleSetup
      000010 C1               [12]   85 	pop	bc
      000011 18 0A            [12]   86 	jr	00107$
      000013                         87 00104$:
                           000013    88 	C$main.c$21$3_0$104	= .
                                     89 	.globl	C$main.c$21$3_0$104
                                     90 ;src\main.c:21: else if (currentGameState == COREGAMELOOP) CoreGameLoopSetup();
      000013 78               [ 4]   91 	ld	a, b
      000014 D6 02            [ 8]   92 	sub	a, #0x02
      000016 20 05            [12]   93 	jr	NZ, 00107$
      000018 C5               [16]   94 	push	bc
      000019 CDr00r00         [24]   95 	call	_CoreGameLoopSetup
      00001C C1               [12]   96 	pop	bc
      00001D                         97 00107$:
                           00001D    98 	C$main.c$23$2_0$103	= .
                                     99 	.globl	C$main.c$23$2_0$103
                                    100 ;src\main.c:23: if (currentGameState == GAMETITLE) nextGameState = GameTitleUpdate();
      00001D 79               [ 4]  101 	ld	a, c
      00001E 3D               [ 4]  102 	dec	a
      00001F 20 08            [12]  103 	jr	NZ, 00111$
      000021 C5               [16]  104 	push	bc
      000022 CDr00r00         [24]  105 	call	_GameTitleUpdate
      000025 C1               [12]  106 	pop	bc
      000026 47               [ 4]  107 	ld	b, a
      000027 18 DA            [12]  108 	jr	00114$
      000029                        109 00111$:
                           000029   110 	C$main.c$24$2_0$103	= .
                                    111 	.globl	C$main.c$24$2_0$103
                                    112 ;src\main.c:24: else if (currentGameState == COREGAMELOOP) nextGameState = CoreGameLoopUpdate();
      000029 79               [ 4]  113 	ld	a, c
      00002A D6 02            [ 8]  114 	sub	a, #0x02
      00002C 20 D5            [12]  115 	jr	NZ, 00114$
      00002E C5               [16]  116 	push	bc
      00002F CDr00r00         [24]  117 	call	_CoreGameLoopUpdate
      000032 C1               [12]  118 	pop	bc
      000033 47               [ 4]  119 	ld	b, a
                           000034   120 	C$main.c$27$1_0$102	= .
                                    121 	.globl	C$main.c$27$1_0$102
                                    122 ;src\main.c:27: }
                           000034   123 	C$main.c$27$1_0$102	= .
                                    124 	.globl	C$main.c$27$1_0$102
                           000034   125 	XG$main$0$0	= .
                                    126 	.globl	XG$main$0$0
      000034 18 CD            [12]  127 	jr	00114$
                                    128 	.area _CODE
                                    129 	.area _INITIALIZER
                                    130 	.area _CABS (ABS)
